

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jul 28 10:12:51 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     	;# 
    40  0001                     	;# 
    41  0002                     	;# 
    42  0003                     	;# 
    43  0004                     	;# 
    44  0005                     	;# 
    45  0006                     	;# 
    46  0007                     	;# 
    47  0008                     	;# 
    48  0009                     	;# 
    49  000A                     	;# 
    50  000B                     	;# 
    51  000C                     	;# 
    52  000D                     	;# 
    53  000E                     	;# 
    54  000E                     	;# 
    55  000F                     	;# 
    56  0010                     	;# 
    57  0011                     	;# 
    58  0012                     	;# 
    59  0013                     	;# 
    60  0014                     	;# 
    61  0015                     	;# 
    62  0015                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001B                     	;# 
    69  001B                     	;# 
    70  001C                     	;# 
    71  001D                     	;# 
    72  001E                     	;# 
    73  001F                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  0087                     	;# 
    78  0088                     	;# 
    79  0089                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  008F                     	;# 
    84  0090                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  0105                     	;# 
   103  0107                     	;# 
   104  0108                     	;# 
   105  0109                     	;# 
   106  010C                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  0185                     	;# 
   112  0187                     	;# 
   113  0188                     	;# 
   114  0189                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  008F                     	;# 
   162  0090                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0093                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0097                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  0105                     	;# 
   181  0107                     	;# 
   182  0108                     	;# 
   183  0109                     	;# 
   184  010C                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  0185                     	;# 
   190  0187                     	;# 
   191  0188                     	;# 
   192  0189                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  001D                     	;# 
   228  001E                     	;# 
   229  001F                     	;# 
   230  0081                     	;# 
   231  0085                     	;# 
   232  0086                     	;# 
   233  0087                     	;# 
   234  0088                     	;# 
   235  0089                     	;# 
   236  008C                     	;# 
   237  008D                     	;# 
   238  008E                     	;# 
   239  008F                     	;# 
   240  0090                     	;# 
   241  0091                     	;# 
   242  0092                     	;# 
   243  0093                     	;# 
   244  0093                     	;# 
   245  0093                     	;# 
   246  0094                     	;# 
   247  0095                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009A                     	;# 
   253  009B                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  0105                     	;# 
   259  0107                     	;# 
   260  0108                     	;# 
   261  0109                     	;# 
   262  010C                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  010E                     	;# 
   266  010F                     	;# 
   267  0185                     	;# 
   268  0187                     	;# 
   269  0188                     	;# 
   270  0189                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  0000                     	;# 
   274  0001                     	;# 
   275  0002                     	;# 
   276  0003                     	;# 
   277  0004                     	;# 
   278  0005                     	;# 
   279  0006                     	;# 
   280  0007                     	;# 
   281  0008                     	;# 
   282  0009                     	;# 
   283  000A                     	;# 
   284  000B                     	;# 
   285  000C                     	;# 
   286  000D                     	;# 
   287  000E                     	;# 
   288  000E                     	;# 
   289  000F                     	;# 
   290  0010                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0013                     	;# 
   294  0014                     	;# 
   295  0015                     	;# 
   296  0015                     	;# 
   297  0016                     	;# 
   298  0017                     	;# 
   299  0018                     	;# 
   300  0019                     	;# 
   301  001A                     	;# 
   302  001B                     	;# 
   303  001B                     	;# 
   304  001C                     	;# 
   305  001D                     	;# 
   306  001E                     	;# 
   307  001F                     	;# 
   308  0081                     	;# 
   309  0085                     	;# 
   310  0086                     	;# 
   311  0087                     	;# 
   312  0088                     	;# 
   313  0089                     	;# 
   314  008C                     	;# 
   315  008D                     	;# 
   316  008E                     	;# 
   317  008F                     	;# 
   318  0090                     	;# 
   319  0091                     	;# 
   320  0092                     	;# 
   321  0093                     	;# 
   322  0093                     	;# 
   323  0093                     	;# 
   324  0094                     	;# 
   325  0095                     	;# 
   326  0096                     	;# 
   327  0097                     	;# 
   328  0098                     	;# 
   329  0099                     	;# 
   330  009A                     	;# 
   331  009B                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  009F                     	;# 
   336  0105                     	;# 
   337  0107                     	;# 
   338  0108                     	;# 
   339  0109                     	;# 
   340  010C                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  010F                     	;# 
   345  0185                     	;# 
   346  0187                     	;# 
   347  0188                     	;# 
   348  0189                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  001E                     _ADRESH	set	30
   352  0005                     _PORTA	set	5
   353  0006                     _PORTB	set	6
   354  0007                     _PORTC	set	7
   355  0008                     _PORTD	set	8
   356  001A                     _RCREG	set	26
   357  0001                     _TMR0	set	1
   358  0019                     _TXREG	set	25
   359  00FE                     _ADCS0	set	254
   360  00FF                     _ADCS1	set	255
   361  00F8                     _ADON	set	248
   362  00FA                     _CHS0	set	250
   363  00FB                     _CHS1	set	251
   364  00FC                     _CHS2	set	252
   365  00C4                     _CREN	set	196
   366  005F                     _GIE	set	95
   367  00F9                     _GO	set	249
   368  00C1                     _OERR	set	193
   369  005E                     _PEIE	set	94
   370  0030                     _RB0	set	48
   371  0032                     _RB2	set	50
   372  0034                     _RB4	set	52
   373  0035                     _RB5	set	53
   374  005B                     _RBIE	set	91
   375  0058                     _RBIF	set	88
   376  003E                     _RC6	set	62
   377  0065                     _RCIF	set	101
   378  00C6                     _RX9	set	198
   379  00C7                     _SPEN	set	199
   380  005D                     _T0IE	set	93
   381  005A                     _T0IF	set	90
   382  0064                     _TXIF	set	100
   383  009E                     _ADRESL	set	158
   384  0099                     _SPBRG	set	153
   385  0085                     _TRISA	set	133
   386  0086                     _TRISB	set	134
   387  0087                     _TRISC	set	135
   388  0088                     _TRISD	set	136
   389  0095                     _WPUB	set	149
   390  04FF                     _ADFM	set	1279
   391  04C2                     _BRGH	set	1218
   392  04B0                     _IOCB0	set	1200
   393  04B1                     _IOCB1	set	1201
   394  04B2                     _IOCB2	set	1202
   395  04B3                     _IOCB3	set	1203
   396  04B4                     _IOCB4	set	1204
   397  04B5                     _IOCB5	set	1205
   398  04B6                     _IOCB6	set	1206
   399  04B7                     _IOCB7	set	1207
   400  0408                     _PS0	set	1032
   401  0409                     _PS1	set	1033
   402  040A                     _PS2	set	1034
   403  040B                     _PSA	set	1035
   404  04C4                     _SYNC	set	1220
   405  040D                     _T0CS	set	1037
   406  04C6                     _TX9	set	1222
   407  04C5                     _TXEN	set	1221
   408  04FC                     _VCFG0	set	1276
   409  04FD                     _VCFG1	set	1277
   410  0189                     _ANSELH	set	393
   411  0C40                     _ANS0	set	3136
   412  0C3B                     _BRG16	set	3131
   413                           
   414                           	psect	strings
   415  06D8                     __pstrings:	
   416  06D8                     stringtab:	
   417  06D8                     __stringtab:	
   418  06D8                     stringcode:	
   419                           ;	String table - string pointers are 1 byte each
   420                           
   421  06D8                     stringdir:	
   422  06D8  3006               	movlw	high stringdir
   423  06D9  008A               	movwf	10
   424  06DA  0804               	movf	4,w
   425  06DB  0A84               	incf	4,f
   426  06DC  0782               	addwf	2,f
   427  06DD                     __stringbase:	
   428  06DD  3400               	retlw	0
   429  06DE                     __end_of__stringtab:	
   430  06DE                     STR_5:	
   431  06DE  3455               	retlw	85	;'U'
   432  06DF  3441               	retlw	65	;'A'
   433  06E0  3452               	retlw	82	;'R'
   434  06E1  3454               	retlw	84	;'T'
   435  06E2  3420               	retlw	32	;' '
   436  06E3  3420               	retlw	32	;' '
   437  06E4  3420               	retlw	32	;' '
   438  06E5  3400               	retlw	0
   439  06E6                     STR_4:	
   440  06E6  3450               	retlw	80	;'P'
   441  06E7  3457               	retlw	87	;'W'
   442  06E8  344D               	retlw	77	;'M'
   443  06E9  3420               	retlw	32	;' '
   444  06EA  3420               	retlw	32	;' '
   445  06EB  3420               	retlw	32	;' '
   446  06EC  3400               	retlw	0
   447  06ED                     STR_3:	
   448  06ED  3441               	retlw	65	;'A'
   449  06EE  346E               	retlw	110	;'n'
   450  06EF  3461               	retlw	97	;'a'
   451  06F0  346C               	retlw	108	;'l'
   452  06F1  346F               	retlw	111	;'o'
   453  06F2  3467               	retlw	103	;'g'
   454  06F3  3400               	retlw	0
   455  06F4                     STR_1:	
   456  06F4  3444               	retlw	68	;'D'
   457  06F5  3469               	retlw	105	;'i'
   458  06F6  3473               	retlw	115	;'s'
   459  06F7  3474               	retlw	116	;'t'
   460  06F8  3400               	retlw	0
   461  06F9                     STR_2:	
   462  06F9  3443               	retlw	67	;'C'
   463  06FA  344D               	retlw	77	;'M'
   464  06FB  3400               	retlw	0
   465                           
   466                           ; #config settings
   467  0000                     
   468                           	psect	cinit
   469  0015                     start_initialization:	
   470  0015                     __initialization:	
   471                           
   472                           ; Clear objects allocated to COMMON
   473  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   474  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   475  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   476  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   477                           
   478                           ; Clear objects allocated to BANK0
   479  0019  01E8               	clrf	__pbssBANK0& (0+127)
   480  001A  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   481  001B  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   482  001C  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   483  001D  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   484  001E  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   485  001F  01EE               	clrf	(__pbssBANK0+6)& (0+127)
   486  0020  01EF               	clrf	(__pbssBANK0+7)& (0+127)
   487                           
   488                           ; Clear objects allocated to BANK1
   489  0021  1683               	bsf	3,5	;RP0=1, select bank1
   490  0022  1303               	bcf	3,6	;RP1=0, select bank1
   491  0023  01A0               	clrf	__pbssBANK1& (0+127)
   492  0024  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   493  0025  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   494  0026  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   495  0027  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   496  0028  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   497  0029  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   498  002A  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   499  002B  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   500  002C  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   501  002D                     end_of_initialization:	
   502                           ;End of C runtime variable initialization code
   503                           
   504  002D                     __end_of__initialization:	
   505  002D  0183               	clrf	3
   506  002E  120A  118A  2831   	ljmp	_main	;jump to C main() function
   507                           
   508                           	psect	bssCOMMON
   509  0076                     __pbssCOMMON:	
   510  0076                     _T:	
   511  0076                     	ds	2
   512  0078                     _To:	
   513  0078                     	ds	2
   514                           
   515                           	psect	bssBANK0
   516  0068                     __pbssBANK0:	
   517  0068                     _data:	
   518  0068                     	ds	6
   519  006E                     _TH:	
   520  006E                     	ds	2
   521                           
   522                           	psect	bssBANK1
   523  00A0                     __pbssBANK1:	
   524  00A0                     lcd_bcd@F1683:	
   525  00A0                     	ds	10
   526                           
   527                           	psect	cstackCOMMON
   528  0070                     __pcstackCOMMON:	
   529  0070                     ?_set_lcd_e:	
   530  0070                     ?_lcd_clear:	
   531                           ; 0 bytes @ 0x0
   532                           
   533  0070                     ?_set_lcd_rs:	
   534                           ; 0 bytes @ 0x0
   535                           
   536  0070                     ?_set_lcd_data:	
   537                           ; 0 bytes @ 0x0
   538                           
   539  0070                     ?_adc_initialize:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ?_adc_on:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ?_lcd_initialize:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ?_lcd_home:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ?_lcd_2ndline:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0070                     ?_lcd_goto:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0070                     ?_lcd_putchar:	
   558                           ; 0 bytes @ 0x0
   559                           
   560  0070                     ?_lcd_putstr:	
   561                           ; 0 bytes @ 0x0
   562                           
   563  0070                     ?_uart_initialize:	
   564                           ; 0 bytes @ 0x0
   565                           
   566  0070                     ?_isr:	
   567                           ; 0 bytes @ 0x0
   568                           
   569  0070                     ??_isr:	
   570                           ; 0 bytes @ 0x0
   571                           
   572  0070                     ?_main:	
   573                           ; 0 bytes @ 0x0
   574                           
   575  0070                     ?_uc_uart_receive:	
   576                           ; 0 bytes @ 0x0
   577                           
   578                           
   579                           ; 1 bytes @ 0x0
   580  0070                     	ds	6
   581                           
   582                           	psect	cstackBANK0
   583  0020                     __pcstackBANK0:	
   584  0020                     ??_set_lcd_e:	
   585  0020                     ??_set_lcd_rs:	
   586                           ; 0 bytes @ 0x0
   587                           
   588  0020                     ??_set_lcd_data:	
   589                           ; 0 bytes @ 0x0
   590                           
   591  0020                     ??_adc_initialize:	
   592                           ; 0 bytes @ 0x0
   593                           
   594  0020                     ??_adc_on:	
   595                           ; 0 bytes @ 0x0
   596                           
   597  0020                     ??_uart_initialize:	
   598                           ; 0 bytes @ 0x0
   599                           
   600  0020                     ??_uc_uart_receive:	
   601                           ; 0 bytes @ 0x0
   602                           
   603  0020                     ?_ui_adc_read:	
   604                           ; 0 bytes @ 0x0
   605                           
   606  0020                     ?___lwdiv:	
   607                           ; 2 bytes @ 0x0
   608                           
   609  0020                     ?___lwmod:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  0020                     ?___ftpack:	
   613                           ; 2 bytes @ 0x0
   614                           
   615  0020                     set_lcd_e@b_output:	
   616                           ; 3 bytes @ 0x0
   617                           
   618  0020                     set_lcd_rs@b_output:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0020                     set_lcd_data@uc_data:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0020                     ___lwdiv@divisor:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0020                     ___lwmod@divisor:	
   628                           ; 2 bytes @ 0x0
   629                           
   630  0020                     ___ftpack@arg:	
   631                           ; 2 bytes @ 0x0
   632                           
   633                           
   634                           ; 3 bytes @ 0x0
   635  0020                     	ds	1
   636  0021                     ?_send_lcd_data:	
   637  0021                     send_lcd_data@uc_data:	
   638                           ; 0 bytes @ 0x1
   639                           
   640  0021                     uart_initialize@dummy:	
   641                           ; 1 bytes @ 0x1
   642                           
   643                           
   644                           ; 1 bytes @ 0x1
   645  0021                     	ds	1
   646  0022                     ??_send_lcd_data:	
   647  0022                     ??_ui_adc_read:	
   648                           ; 0 bytes @ 0x2
   649                           
   650  0022                     ___lwdiv@dividend:	
   651                           ; 0 bytes @ 0x2
   652                           
   653  0022                     ___lwmod@dividend:	
   654                           ; 2 bytes @ 0x2
   655                           
   656                           
   657                           ; 2 bytes @ 0x2
   658  0022                     	ds	1
   659  0023                     ___ftpack@exp:	
   660                           
   661                           ; 1 bytes @ 0x3
   662  0023                     	ds	1
   663  0024                     ??___lwdiv:	
   664  0024                     ??___lwmod:	
   665                           ; 0 bytes @ 0x4
   666                           
   667  0024                     send_lcd_data@b_rs:	
   668                           ; 0 bytes @ 0x4
   669                           
   670  0024                     ___ftpack@sign:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0024                     ui_adc_read@pot:	
   674                           ; 1 bytes @ 0x4
   675                           
   676                           
   677                           ; 2 bytes @ 0x4
   678  0024                     	ds	1
   679  0025                     ??_lcd_clear:	
   680  0025                     ??___ftpack:	
   681                           ; 0 bytes @ 0x5
   682                           
   683  0025                     ??_lcd_initialize:	
   684                           ; 0 bytes @ 0x5
   685                           
   686  0025                     ??_lcd_home:	
   687                           ; 0 bytes @ 0x5
   688                           
   689  0025                     ??_lcd_2ndline:	
   690                           ; 0 bytes @ 0x5
   691                           
   692  0025                     ??_lcd_goto:	
   693                           ; 0 bytes @ 0x5
   694                           
   695  0025                     ??_lcd_putchar:	
   696                           ; 0 bytes @ 0x5
   697                           
   698  0025                     ___lwdiv@counter:	
   699                           ; 0 bytes @ 0x5
   700                           
   701  0025                     ___lwmod@counter:	
   702                           ; 1 bytes @ 0x5
   703                           
   704                           
   705                           ; 1 bytes @ 0x5
   706  0025                     	ds	1
   707  0026                     lcd_goto@uc_position:	
   708  0026                     lcd_putchar@c_data:	
   709                           ; 1 bytes @ 0x6
   710                           
   711  0026                     ___lwdiv@quotient:	
   712                           ; 1 bytes @ 0x6
   713                           
   714                           
   715                           ; 2 bytes @ 0x6
   716  0026                     	ds	1
   717  0027                     ??_lcd_putstr:	
   718                           
   719                           ; 0 bytes @ 0x7
   720  0027                     	ds	1
   721  0028                     ?_lcd_bcd:	
   722  0028                     ?___lwtoft:	
   723                           ; 0 bytes @ 0x8
   724                           
   725  0028                     lcd_putstr@csz_string:	
   726                           ; 3 bytes @ 0x8
   727                           
   728  0028                     lcd_bcd@ui_number:	
   729                           ; 1 bytes @ 0x8
   730                           
   731  0028                     ___lwtoft@c:	
   732                           ; 2 bytes @ 0x8
   733                           
   734                           
   735                           ; 2 bytes @ 0x8
   736  0028                     	ds	2
   737  002A                     ??_lcd_bcd:	
   738                           
   739                           ; 0 bytes @ 0xA
   740  002A                     	ds	1
   741  002B                     ??___lwtoft:	
   742                           
   743                           ; 0 bytes @ 0xB
   744  002B                     	ds	1
   745  002C                     ?___ftmul:	
   746  002C                     ___ftmul@f1:	
   747                           ; 3 bytes @ 0xC
   748                           
   749                           
   750                           ; 3 bytes @ 0xC
   751  002C                     	ds	2
   752  002E                     lcd_bcd@ui_decimal:	
   753                           
   754                           ; 10 bytes @ 0xE
   755  002E                     	ds	1
   756  002F                     ___ftmul@f2:	
   757                           
   758                           ; 3 bytes @ 0xF
   759  002F                     	ds	3
   760  0032                     ??___ftmul:	
   761                           
   762                           ; 0 bytes @ 0x12
   763  0032                     	ds	4
   764  0036                     ___ftmul@exp:	
   765                           
   766                           ; 1 bytes @ 0x16
   767  0036                     	ds	1
   768  0037                     ___ftmul@f3_as_product:	
   769                           
   770                           ; 3 bytes @ 0x17
   771  0037                     	ds	1
   772  0038                     lcd_bcd@uc_digit:	
   773                           
   774                           ; 1 bytes @ 0x18
   775  0038                     	ds	2
   776  003A                     ___ftmul@cntr:	
   777                           
   778                           ; 1 bytes @ 0x1A
   779  003A                     	ds	1
   780  003B                     ___ftmul@sign:	
   781                           
   782                           ; 1 bytes @ 0x1B
   783  003B                     	ds	1
   784  003C                     ?___ftdiv:	
   785  003C                     ___ftdiv@f2:	
   786                           ; 3 bytes @ 0x1C
   787                           
   788                           
   789                           ; 3 bytes @ 0x1C
   790  003C                     	ds	3
   791  003F                     ___ftdiv@f1:	
   792                           
   793                           ; 3 bytes @ 0x1F
   794  003F                     	ds	3
   795  0042                     ??___ftdiv:	
   796                           
   797                           ; 0 bytes @ 0x22
   798  0042                     	ds	4
   799  0046                     ___ftdiv@cntr:	
   800                           
   801                           ; 1 bytes @ 0x26
   802  0046                     	ds	1
   803  0047                     ___ftdiv@f3:	
   804                           
   805                           ; 3 bytes @ 0x27
   806  0047                     	ds	3
   807  004A                     ___ftdiv@exp:	
   808                           
   809                           ; 1 bytes @ 0x2A
   810  004A                     	ds	1
   811  004B                     ___ftdiv@sign:	
   812                           
   813                           ; 1 bytes @ 0x2B
   814  004B                     	ds	1
   815  004C                     ?___fttol:	
   816  004C                     ___fttol@f1:	
   817                           ; 4 bytes @ 0x2C
   818                           
   819                           
   820                           ; 3 bytes @ 0x2C
   821  004C                     	ds	4
   822  0050                     ??___fttol:	
   823                           
   824                           ; 0 bytes @ 0x30
   825  0050                     	ds	4
   826  0054                     ___fttol@sign1:	
   827                           
   828                           ; 1 bytes @ 0x34
   829  0054                     	ds	1
   830  0055                     ___fttol@lval:	
   831                           
   832                           ; 4 bytes @ 0x35
   833  0055                     	ds	4
   834  0059                     ___fttol@exp1:	
   835                           
   836                           ; 1 bytes @ 0x39
   837  0059                     	ds	1
   838  005A                     ??_main:	
   839                           
   840                           ; 0 bytes @ 0x3A
   841  005A                     	ds	2
   842  005C                     main@range_an:	
   843                           
   844                           ; 2 bytes @ 0x3C
   845  005C                     	ds	2
   846  005E                     main@mode:	
   847                           
   848                           ; 1 bytes @ 0x3E
   849  005E                     	ds	1
   850  005F                     main@j:	
   851                           
   852                           ; 1 bytes @ 0x3F
   853  005F                     	ds	1
   854  0060                     main@k:	
   855                           
   856                           ; 2 bytes @ 0x40
   857  0060                     	ds	2
   858  0062                     main@l:	
   859                           
   860                           ; 2 bytes @ 0x42
   861  0062                     	ds	2
   862  0064                     main@range_pwm:	
   863                           
   864                           ; 2 bytes @ 0x44
   865  0064                     	ds	2
   866  0066                     main@adc_value:	
   867                           
   868                           ; 2 bytes @ 0x46
   869  0066                     	ds	2
   870                           
   871                           	psect	maintext
   872  0031                     __pmaintext:	
   873 ;;
   874 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   875 ;;
   876 ;; *************** function _main *****************
   877 ;; Defined at:
   878 ;;		line 57 in file "../../Downloads/Project_6/H_RProject_6.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  adc_value       2   70[BANK0 ] unsigned int 
   883 ;;  range_an        2   60[BANK0 ] unsigned int 
   884 ;;  j               1   63[BANK0 ] unsigned char 
   885 ;;  range_pwm       2   68[BANK0 ] unsigned int 
   886 ;;  l               2   66[BANK0 ] unsigned int 
   887 ;;  k               2   64[BANK0 ] unsigned int 
   888 ;;  value           2    0        unsigned int 
   889 ;;  mode            1   62[BANK0 ] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;		None               void
   892 ;; Registers used:
   893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : B00/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   899 ;;      Params:         0       0       0       0       0
   900 ;;      Locals:         0      12       0       0       0
   901 ;;      Temps:          0       2       0       0       0
   902 ;;      Totals:         0      14       0       0       0
   903 ;;Total ram usage:       14 bytes
   904 ;; Hardware stack levels required when called:    5
   905 ;; This function calls:
   906 ;;		___ftdiv
   907 ;;		___ftmul
   908 ;;		___fttol
   909 ;;		___lwdiv
   910 ;;		___lwtoft
   911 ;;		_adc_initialize
   912 ;;		_adc_on
   913 ;;		_lcd_2ndline
   914 ;;		_lcd_bcd
   915 ;;		_lcd_goto
   916 ;;		_lcd_home
   917 ;;		_lcd_initialize
   918 ;;		_lcd_putstr
   919 ;;		_send_lcd_data
   920 ;;		_uart_initialize
   921 ;;		_uc_uart_receive
   922 ;;		_ui_adc_read
   923 ;; This function is called by:
   924 ;;		Startup code after reset
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _main
   930  0031                     _main:	
   931                           
   932                           ;H_RProject_6.c: 59: unsigned char mode = 1;
   933                           
   934                           ;incstack = 0
   935                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   936  0031  1283               	bcf	3,5	;RP0=0, select bank0
   937  0032  1303               	bcf	3,6	;RP1=0, select bank0
   938  0033  01DE               	clrf	main@mode
   939  0034  0ADE               	incf	main@mode,f
   940                           
   941                           ;H_RProject_6.c: 60: PORTA = 0;
   942  0035  0185               	clrf	5	;volatile
   943                           
   944                           ;H_RProject_6.c: 61: PORTB = 0;
   945  0036  0186               	clrf	6	;volatile
   946                           
   947                           ;H_RProject_6.c: 62: PORTC = 0;
   948  0037  0187               	clrf	7	;volatile
   949                           
   950                           ;H_RProject_6.c: 63: PORTD = 0;
   951  0038  0188               	clrf	8	;volatile
   952                           
   953                           ;H_RProject_6.c: 66: TRISA = 0b11111111;
   954  0039  30FF               	movlw	255
   955  003A  1683               	bsf	3,5	;RP0=1, select bank1
   956  003B  1303               	bcf	3,6	;RP1=0, select bank1
   957  003C  0085               	movwf	5	;volatile
   958                           
   959                           ;H_RProject_6.c: 67: TRISB = 0b00000111;
   960  003D  3007               	movlw	7
   961  003E  0086               	movwf	6	;volatile
   962                           
   963                           ;H_RProject_6.c: 68: TRISC = 0b10000000;
   964  003F  3080               	movlw	128
   965  0040  0087               	movwf	7	;volatile
   966                           
   967                           ;H_RProject_6.c: 69: TRISD = 0b00000000;
   968  0041  0188               	clrf	8	;volatile
   969                           
   970                           ;H_RProject_6.c: 72: ANSELH = 0;
   971  0042  1683               	bsf	3,5	;RP0=1, select bank3
   972  0043  1703               	bsf	3,6	;RP1=1, select bank3
   973  0044  0189               	clrf	9	;volatile
   974                           
   975                           ;H_RProject_6.c: 73: WPUB = 1;
   976  0045  3001               	movlw	1
   977  0046  1683               	bsf	3,5	;RP0=1, select bank1
   978  0047  1303               	bcf	3,6	;RP1=0, select bank1
   979  0048  0095               	movwf	21	;volatile
   980                           
   981                           ;H_RProject_6.c: 76: IOCB0 = 0;
   982  0049  1016               	bcf	22,0	;volatile
   983                           
   984                           ;H_RProject_6.c: 77: IOCB1 = 0;
   985  004A  1096               	bcf	22,1	;volatile
   986                           
   987                           ;H_RProject_6.c: 78: IOCB2 = 1;
   988  004B  1516               	bsf	22,2	;volatile
   989                           
   990                           ;H_RProject_6.c: 79: IOCB3 = 0;
   991  004C  1196               	bcf	22,3	;volatile
   992                           
   993                           ;H_RProject_6.c: 80: IOCB4 = 0;
   994  004D  1216               	bcf	22,4	;volatile
   995                           
   996                           ;H_RProject_6.c: 81: IOCB5 = 0;
   997  004E  1296               	bcf	22,5	;volatile
   998                           
   999                           ;H_RProject_6.c: 82: IOCB6 = 0;
  1000  004F  1316               	bcf	22,6	;volatile
  1001                           
  1002                           ;H_RProject_6.c: 83: IOCB7 = 0;
  1003  0050  1396               	bcf	22,7	;volatile
  1004                           
  1005                           ;H_RProject_6.c: 85: RBIE = 1;
  1006  0051  158B               	bsf	11,3	;volatile
  1007                           
  1008                           ;H_RProject_6.c: 89: T0CS = 0;
  1009  0052  1281               	bcf	1,5	;volatile
  1010                           
  1011                           ;H_RProject_6.c: 90: PSA = 0;
  1012  0053  1181               	bcf	1,3	;volatile
  1013                           
  1014                           ;H_RProject_6.c: 91: PS2 = 1;
  1015  0054  1501               	bsf	1,2	;volatile
  1016                           
  1017                           ;H_RProject_6.c: 92: PS1 = 1;
  1018  0055  1481               	bsf	1,1	;volatile
  1019                           
  1020                           ;H_RProject_6.c: 93: PS0 = 1;
  1021  0056  1401               	bsf	1,0	;volatile
  1022                           
  1023                           ;H_RProject_6.c: 94: T0IE = 1;
  1024  0057  168B               	bsf	11,5	;volatile
  1025                           
  1026                           ;H_RProject_6.c: 95: TMR0 = 0;
  1027  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1029  005A  0181               	clrf	1	;volatile
  1030                           
  1031                           ;H_RProject_6.c: 97: GIE = 1;
  1032  005B  178B               	bsf	11,7	;volatile
  1033                           
  1034                           ;H_RProject_6.c: 98: PEIE = 1;
  1035  005C  170B               	bsf	11,6	;volatile
  1036                           
  1037                           ;H_RProject_6.c: 100: lcd_initialize();
  1038  005D  120A  118A  2611  120A  118A  	fcall	_lcd_initialize
  1039                           
  1040                           ;H_RProject_6.c: 102: adc_initialize();
  1041  0062  120A  118A  2738  120A  118A  	fcall	_adc_initialize
  1042                           
  1043                           ;H_RProject_6.c: 104: uart_initialize();
  1044  0067  120A  118A  26FC  120A  118A  	fcall	_uart_initialize
  1045                           
  1046                           ;H_RProject_6.c: 108: lcd_home();
  1047                           
  1048                           ;H_RProject_6.c: 106: RC6 == 1;
  1049  006C  120A  118A  2786  120A  118A  	fcall	_lcd_home
  1050                           
  1051                           ;H_RProject_6.c: 109: lcd_putstr("Dist");
  1052  0071  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1053  0072  120A  118A  25D5  120A  118A  	fcall	_lcd_putstr
  1054                           
  1055                           ;H_RProject_6.c: 110: lcd_goto(0x0B);
  1056  0077  300B               	movlw	11
  1057  0078  120A  118A  2748  120A  118A  	fcall	_lcd_goto
  1058                           
  1059                           ;H_RProject_6.c: 111: lcd_putstr("CM");
  1060  007D  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1061  007E  120A  118A  25D5  120A  118A  	fcall	_lcd_putstr
  1062                           
  1063                           ;H_RProject_6.c: 114: {
  1064                           ;H_RProject_6.c: 115: switch(mode)
  1065                           
  1066                           ;H_RProject_6.c: 113: while (1)
  1067  0083  29EB               	goto	l2157
  1068  0084                     l2079:	
  1069                           ;H_RProject_6.c: 116: {
  1070                           ;H_RProject_6.c: 117: case 1: lcd_2ndline();
  1071                           
  1072  0084  120A  118A  277B  120A  118A  	fcall	_lcd_2ndline
  1073                           
  1074                           ;H_RProject_6.c: 118: lcd_putstr("Analog");
  1075  0089  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1076  008A  120A  118A  25D5  120A  118A  	fcall	_lcd_putstr
  1077  008F                     l2107:	
  1078                           ;H_RProject_6.c: 119: while (RB0 == 1)
  1079                           
  1080  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0091  1C06               	btfss	6,0	;volatile
  1083  0092  28ED               	goto	l277
  1084                           
  1085                           ;H_RProject_6.c: 120: {
  1086                           ;H_RProject_6.c: 121: unsigned int adc_value = 0;
  1087  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0095  01E6               	clrf	main@adc_value
  1090  0096  01E7               	clrf	main@adc_value+1
  1091                           
  1092                           ;H_RProject_6.c: 122: unsigned int range_an = 0;
  1093  0097  01DC               	clrf	main@range_an
  1094  0098  01DD               	clrf	main@range_an+1
  1095                           
  1096                           ;H_RProject_6.c: 123: unsigned char j;
  1097                           ;H_RProject_6.c: 124: adc_on();
  1098  0099  120A  118A  27AA  120A  118A  	fcall	_adc_on
  1099                           
  1100                           ;H_RProject_6.c: 125: for(j = 0 ; j < 10 ; j++)
  1101  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1102  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1103  00A0  01DF               	clrf	main@j
  1104  00A1  300A               	movlw	10
  1105  00A2  025F               	subwf	main@j,w
  1106  00A3  1803               	btfsc	3,0
  1107  00A4  28BC               	goto	l2099
  1108  00A5                     l2093:	
  1109                           
  1110                           ;H_RProject_6.c: 126: {
  1111                           ;H_RProject_6.c: 127: adc_value = adc_value + ui_adc_read();
  1112  00A5  120A  118A  267E  120A  118A  	fcall	_ui_adc_read
  1113  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1114  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1115  00AC  0866               	movf	main@adc_value,w
  1116  00AD  0720               	addwf	?_ui_adc_read,w
  1117  00AE  00E6               	movwf	main@adc_value
  1118  00AF  0867               	movf	main@adc_value+1,w
  1119  00B0  1803               	skipnc
  1120  00B1  0A67               	incf	main@adc_value+1,w
  1121  00B2  0721               	addwf	?_ui_adc_read+1,w
  1122  00B3  00E7               	movwf	main@adc_value+1
  1123  00B4  3001               	movlw	1
  1124  00B5  00DA               	movwf	??_main
  1125  00B6  085A               	movf	??_main,w
  1126  00B7  07DF               	addwf	main@j,f
  1127  00B8  300A               	movlw	10
  1128  00B9  025F               	subwf	main@j,w
  1129  00BA  1C03               	skipc
  1130  00BB  28A5               	goto	l2093
  1131  00BC                     l2099:	
  1132                           
  1133                           ;H_RProject_6.c: 128: }
  1134                           ;H_RProject_6.c: 130: adc_value = adc_value/10;
  1135  00BC  300A               	movlw	10
  1136  00BD  00A0               	movwf	___lwdiv@divisor
  1137  00BE  3000               	movlw	0
  1138  00BF  00A1               	movwf	___lwdiv@divisor+1
  1139  00C0  0867               	movf	main@adc_value+1,w
  1140  00C1  00A3               	movwf	___lwdiv@dividend+1
  1141  00C2  0866               	movf	main@adc_value,w
  1142  00C3  00A2               	movwf	___lwdiv@dividend
  1143  00C4  120A  118A  255A  120A  118A  	fcall	___lwdiv
  1144  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1145  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1146  00CB  0821               	movf	?___lwdiv+1,w
  1147  00CC  00E7               	movwf	main@adc_value+1
  1148  00CD  0820               	movf	?___lwdiv,w
  1149  00CE  00E6               	movwf	main@adc_value
  1150                           
  1151                           ;H_RProject_6.c: 131: adc_value = adc_value/2;
  1152  00CF  0867               	movf	main@adc_value+1,w
  1153  00D0  00DB               	movwf	??_main+1
  1154  00D1  0866               	movf	main@adc_value,w
  1155  00D2  00DA               	movwf	??_main
  1156  00D3  1003               	clrc
  1157  00D4  0CDB               	rrf	??_main+1,f
  1158  00D5  0CDA               	rrf	??_main,f
  1159  00D6  085A               	movf	??_main,w
  1160  00D7  00E6               	movwf	main@adc_value
  1161  00D8  085B               	movf	??_main+1,w
  1162  00D9  00E7               	movwf	main@adc_value+1
  1163                           
  1164                           ;H_RProject_6.c: 134: lcd_goto(0x05);
  1165  00DA  3005               	movlw	5
  1166  00DB  120A  118A  2748  120A  118A  	fcall	_lcd_goto
  1167                           
  1168                           ;H_RProject_6.c: 135: lcd_bcd(3,adc_value);
  1169  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00E2  0867               	movf	main@adc_value+1,w
  1172  00E3  00A9               	movwf	lcd_bcd@ui_number+1
  1173  00E4  0866               	movf	main@adc_value,w
  1174  00E5  00A8               	movwf	lcd_bcd@ui_number
  1175  00E6  3003               	movlw	3
  1176  00E7  120A  118A  22D8  120A  118A  	fcall	_lcd_bcd
  1177  00EC  288F               	goto	l2107
  1178  00ED                     l277:	
  1179                           ;H_RProject_6.c: 136: }
  1180                           ;H_RProject_6.c: 137: while (RB0 == 0);
  1181                           
  1182  00ED  1806               	btfsc	6,0	;volatile
  1183  00EE  29F8               	goto	l297
  1184  00EF  28ED               	goto	l277
  1185  00F0                     l2109:	
  1186                           ;H_RProject_6.c: 140: case 2: lcd_2ndline();
  1187                           
  1188                           ;H_RProject_6.c: 138: break;
  1189                           
  1190  00F0  120A  118A  277B  120A  118A  	fcall	_lcd_2ndline
  1191                           
  1192                           ;H_RProject_6.c: 141: lcd_putstr("PWM   ");
  1193  00F5  3009               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1194  00F6  120A  118A  25D5  120A  118A  	fcall	_lcd_putstr
  1195  00FB                     l2123:	
  1196                           ;H_RProject_6.c: 142: unsigned int range_pwm;
  1197                           ;H_RProject_6.c: 143: while(RB0 == 1)
  1198                           
  1199  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1200  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1201  00FD  1C06               	btfss	6,0	;volatile
  1202  00FE  2962               	goto	l285
  1203                           
  1204                           ;H_RProject_6.c: 144: {
  1205                           ;H_RProject_6.c: 145: range_pwm = TH;
  1206  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0101  086F               	movf	_TH+1,w
  1209  0102  00E5               	movwf	main@range_pwm+1
  1210  0103  086E               	movf	_TH,w
  1211  0104  00E4               	movwf	main@range_pwm
  1212                           
  1213                           ;H_RProject_6.c: 146: lcd_goto(0x05);
  1214  0105  3005               	movlw	5
  1215  0106  120A  118A  2748  120A  118A  	fcall	_lcd_goto
  1216                           
  1217                           ;H_RProject_6.c: 147: range_pwm = (range_pwm*2.54*51.2/25.4);
  1218  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1219  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1220  010D  0865               	movf	main@range_pwm+1,w
  1221  010E  00A9               	movwf	___lwtoft@c+1
  1222  010F  0864               	movf	main@range_pwm,w
  1223  0110  00A8               	movwf	___lwtoft@c
  1224  0111  120A  118A  2720  120A  118A  	fcall	___lwtoft
  1225  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0118  0828               	movf	?___lwtoft,w
  1228  0119  00AF               	movwf	___ftmul@f2
  1229  011A  0829               	movf	?___lwtoft+1,w
  1230  011B  00B0               	movwf	___ftmul@f2+1
  1231  011C  082A               	movf	?___lwtoft+2,w
  1232  011D  00B1               	movwf	___ftmul@f2+2
  1233  011E  300C               	movlw	12
  1234  011F  00AC               	movwf	___ftmul@f1
  1235  0120  3002               	movlw	2
  1236  0121  00AD               	movwf	___ftmul@f1+1
  1237  0122  3043               	movlw	67
  1238  0123  00AE               	movwf	___ftmul@f1+2
  1239  0124  120A  118A  2205  120A  118A  	fcall	___ftmul
  1240  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1241  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1242  012B  082C               	movf	?___ftmul,w
  1243  012C  00BF               	movwf	___ftdiv@f1
  1244  012D  082D               	movf	?___ftmul+1,w
  1245  012E  00C0               	movwf	___ftdiv@f1+1
  1246  012F  082E               	movf	?___ftmul+2,w
  1247  0130  00C1               	movwf	___ftdiv@f1+2
  1248  0131  3033               	movlw	51
  1249  0132  00BC               	movwf	___ftdiv@f2
  1250  0133  30CB               	movlw	203
  1251  0134  00BD               	movwf	___ftdiv@f2+1
  1252  0135  3041               	movlw	65
  1253  0136  00BE               	movwf	___ftdiv@f2+2
  1254  0137  120A  118A  23A6  120A  118A  	fcall	___ftdiv
  1255  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1256  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1257  013E  083C               	movf	?___ftdiv,w
  1258  013F  00CC               	movwf	___fttol@f1
  1259  0140  083D               	movf	?___ftdiv+1,w
  1260  0141  00CD               	movwf	___fttol@f1+1
  1261  0142  083E               	movf	?___ftdiv+2,w
  1262  0143  00CE               	movwf	___fttol@f1+2
  1263  0144  120A  118A  245E  120A  118A  	fcall	___fttol
  1264  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1265  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1266  014B  084D               	movf	?___fttol+1,w
  1267  014C  00E5               	movwf	main@range_pwm+1
  1268  014D  084C               	movf	?___fttol,w
  1269  014E  00E4               	movwf	main@range_pwm
  1270                           
  1271                           ;H_RProject_6.c: 148: range_pwm=range_pwm+4;
  1272  014F  0864               	movf	main@range_pwm,w
  1273  0150  3E04               	addlw	4
  1274  0151  00E4               	movwf	main@range_pwm
  1275  0152  0865               	movf	main@range_pwm+1,w
  1276  0153  1803               	skipnc
  1277  0154  3E01               	addlw	1
  1278  0155  3E00               	addlw	0
  1279  0156  00E5               	movwf	main@range_pwm+1
  1280                           
  1281                           ;H_RProject_6.c: 149: lcd_bcd(3,range_pwm);
  1282  0157  0865               	movf	main@range_pwm+1,w
  1283  0158  00A9               	movwf	lcd_bcd@ui_number+1
  1284  0159  0864               	movf	main@range_pwm,w
  1285  015A  00A8               	movwf	lcd_bcd@ui_number
  1286  015B  3003               	movlw	3
  1287  015C  120A  118A  22D8  120A  118A  	fcall	_lcd_bcd
  1288  0161  28FB               	goto	l2123
  1289  0162                     l285:	
  1290                           ;H_RProject_6.c: 150: }
  1291                           ;H_RProject_6.c: 151: while (RB0 == 0);
  1292                           
  1293  0162  1806               	btfsc	6,0	;volatile
  1294  0163  29F8               	goto	l297
  1295  0164  2962               	goto	l285
  1296  0165                     l2125:	
  1297                           ;H_RProject_6.c: 154: case 3: lcd_2ndline();
  1298                           
  1299                           ;H_RProject_6.c: 152: break;
  1300                           
  1301  0165  120A  118A  277B  120A  118A  	fcall	_lcd_2ndline
  1302                           
  1303                           ;H_RProject_6.c: 155: lcd_putstr("UART   ");
  1304  016A  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1305  016B  120A  118A  25D5  120A  118A  	fcall	_lcd_putstr
  1306                           
  1307                           ;H_RProject_6.c: 156: unsigned int value,k,l = 0;
  1308  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1310  0172  01E2               	clrf	main@l
  1311  0173  01E3               	clrf	main@l+1
  1312  0174                     l2155:	
  1313                           ;H_RProject_6.c: 157: while(RB0 == 1)
  1314                           
  1315  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0176  1C06               	btfss	6,0	;volatile
  1318  0177  29F8               	goto	l297
  1319                           
  1320                           ;H_RProject_6.c: 158: {
  1321                           ;H_RProject_6.c: 160: for (l=0 ; l<6 ; l++)
  1322  0178  01E2               	clrf	main@l
  1323  0179  01E3               	clrf	main@l+1
  1324  017A  3000               	movlw	0
  1325  017B  0263               	subwf	main@l+1,w
  1326  017C  3006               	movlw	6
  1327  017D  1903               	skipnz
  1328  017E  0262               	subwf	main@l,w
  1329  017F  1803               	btfsc	3,0
  1330  0180  29C0               	goto	l2153
  1331  0181                     l2137:	
  1332                           
  1333                           ;H_RProject_6.c: 161: {
  1334                           ;H_RProject_6.c: 162: uc_uart_receive();
  1335  0181  120A  118A  2791  120A  118A  	fcall	_uc_uart_receive
  1336                           
  1337                           ;H_RProject_6.c: 163: if(RCREG == 'R') data[k=0] = RCREG;
  1338  0186  3052               	movlw	82
  1339  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0189  061A               	xorwf	26,w	;volatile
  1342  018A  1D03               	btfss	3,2
  1343  018B  2996               	goto	l2143
  1344  018C  081A               	movf	26,w	;volatile
  1345  018D  00DA               	movwf	??_main
  1346  018E  01E0               	clrf	main@k
  1347  018F  01E1               	clrf	main@k+1
  1348  0190  3000               	movlw	0
  1349  0191  3E68               	addlw	(low (_data| 0))& (0+255)
  1350  0192  0084               	movwf	4
  1351  0193  085A               	movf	??_main,w
  1352  0194  1383               	bcf	3,7	;select IRP bank0
  1353  0195  0080               	movwf	0
  1354  0196                     l2143:	
  1355                           
  1356                           ;H_RProject_6.c: 164: if(data[0] == 'R') data[k++] = RCREG;
  1357  0196  3052               	movlw	82
  1358  0197  0668               	xorwf	_data,w
  1359  0198  1D03               	btfss	3,2
  1360  0199  29A8               	goto	l2149
  1361  019A  081A               	movf	26,w	;volatile
  1362  019B  00DA               	movwf	??_main
  1363  019C  0860               	movf	main@k,w
  1364  019D  3E68               	addlw	(low (_data| 0))& (0+255)
  1365  019E  0084               	movwf	4
  1366  019F  085A               	movf	??_main,w
  1367  01A0  1383               	bcf	3,7	;select IRP bank0
  1368  01A1  0080               	movwf	0
  1369  01A2  3001               	movlw	1
  1370  01A3  07E0               	addwf	main@k,f
  1371  01A4  1803               	skipnc
  1372  01A5  0AE1               	incf	main@k+1,f
  1373  01A6  3000               	movlw	0
  1374  01A7  07E1               	addwf	main@k+1,f
  1375  01A8                     l2149:	
  1376                           
  1377                           ;H_RProject_6.c: 165: if (k>4) k = 4;
  1378  01A8  3000               	movlw	0
  1379  01A9  0261               	subwf	main@k+1,w
  1380  01AA  3005               	movlw	5
  1381  01AB  1903               	skipnz
  1382  01AC  0260               	subwf	main@k,w
  1383  01AD  1C03               	skipc
  1384  01AE  29B3               	goto	l295
  1385  01AF  3004               	movlw	4
  1386  01B0  00E0               	movwf	main@k
  1387  01B1  3000               	movlw	0
  1388  01B2  00E1               	movwf	main@k+1
  1389  01B3                     l295:	
  1390  01B3  3001               	movlw	1
  1391  01B4  07E2               	addwf	main@l,f
  1392  01B5  1803               	skipnc
  1393  01B6  0AE3               	incf	main@l+1,f
  1394  01B7  3000               	movlw	0
  1395  01B8  07E3               	addwf	main@l+1,f
  1396  01B9  3000               	movlw	0
  1397  01BA  0263               	subwf	main@l+1,w
  1398  01BB  3006               	movlw	6
  1399  01BC  1903               	skipnz
  1400  01BD  0262               	subwf	main@l,w
  1401  01BE  1C03               	skipc
  1402  01BF  2981               	goto	l2137
  1403  01C0                     l2153:	
  1404                           
  1405                           ;H_RProject_6.c: 166: }
  1406                           ;H_RProject_6.c: 167: lcd_goto(0x05);
  1407  01C0  3005               	movlw	5
  1408  01C1  120A  118A  2748  120A  118A  	fcall	_lcd_goto
  1409                           
  1410                           ;H_RProject_6.c: 168: send_lcd_data(1,data[1]);
  1411  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1412  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1413  01C8  0869               	movf	_data+1,w
  1414  01C9  00DA               	movwf	??_main
  1415  01CA  085A               	movf	??_main,w
  1416  01CB  00A1               	movwf	send_lcd_data@uc_data
  1417  01CC  3001               	movlw	1
  1418  01CD  120A  118A  2598  120A  118A  	fcall	_send_lcd_data
  1419                           
  1420                           ;H_RProject_6.c: 169: send_lcd_data(1,data[2]);
  1421  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1422  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1423  01D4  086A               	movf	_data+2,w
  1424  01D5  00DA               	movwf	??_main
  1425  01D6  085A               	movf	??_main,w
  1426  01D7  00A1               	movwf	send_lcd_data@uc_data
  1427  01D8  3001               	movlw	1
  1428  01D9  120A  118A  2598  120A  118A  	fcall	_send_lcd_data
  1429                           
  1430                           ;H_RProject_6.c: 170: send_lcd_data(1,data[3]);
  1431  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1432  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1433  01E0  086B               	movf	_data+3,w
  1434  01E1  00DA               	movwf	??_main
  1435  01E2  085A               	movf	??_main,w
  1436  01E3  00A1               	movwf	send_lcd_data@uc_data
  1437  01E4  3001               	movlw	1
  1438  01E5  120A  118A  2598  120A  118A  	fcall	_send_lcd_data
  1439  01EA  2974               	goto	l2155
  1440  01EB                     l2157:	
  1441                           ;H_RProject_6.c: 171: }
  1442                           ;H_RProject_6.c: 172: }
  1443                           
  1444  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1445  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1446  01ED  085E               	movf	main@mode,w
  1447                           
  1448                           ; Switch size 1, requested type "space"
  1449                           ; Number of cases is 3, Range of values is 1 to 3
  1450                           ; switch strategies available:
  1451                           ; Name         Instructions Cycles
  1452                           ; simple_byte           10     6 (average)
  1453                           ; direct_byte           20    11 (fixed)
  1454                           ; jumptable            263     9 (fixed)
  1455                           ;	Chosen strategy is simple_byte
  1456  01EE  3A01               	xorlw	1	; case 1
  1457  01EF  1903               	skipnz
  1458  01F0  2884               	goto	l2079
  1459  01F1  3A03               	xorlw	3	; case 2
  1460  01F2  1903               	skipnz
  1461  01F3  28F0               	goto	l2109
  1462  01F4  3A01               	xorlw	1	; case 3
  1463  01F5  1903               	skipnz
  1464  01F6  2965               	goto	l2125
  1465  01F7  29F8               	goto	l297
  1466  01F8                     l297:	
  1467                           ;H_RProject_6.c: 174: while (RB0 == 0);
  1468                           
  1469  01F8  1C06               	btfss	6,0	;volatile
  1470  01F9  29F8               	goto	l297
  1471                           
  1472                           ;H_RProject_6.c: 175: if (++mode > 3)
  1473  01FA  3001               	movlw	1
  1474  01FB  00DA               	movwf	??_main
  1475  01FC  085A               	movf	??_main,w
  1476  01FD  07DE               	addwf	main@mode,f
  1477  01FE  3004               	movlw	4
  1478  01FF  025E               	subwf	main@mode,w
  1479  0200  1C03               	skipc
  1480  0201  29EB               	goto	l2157
  1481                           
  1482                           ;H_RProject_6.c: 176: {
  1483                           ;H_RProject_6.c: 177: mode = 1;
  1484  0202  01DE               	clrf	main@mode
  1485  0203  0ADE               	incf	main@mode,f
  1486  0204  29EB               	goto	l2157
  1487  0205                     __end_of_main:	
  1488                           
  1489                           	psect	text1
  1490  067E                     __ptext1:	
  1491 ;; *************** function _ui_adc_read *****************
  1492 ;; Defined at:
  1493 ;;		line 105 in file "../../KJ/Project_6/adc.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  pot             2    4[BANK0 ] unsigned int 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2    0[BANK0 ] unsigned int 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, btemp+1
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       2       0       0       0
  1508 ;;      Locals:         0       2       0       0       0
  1509 ;;      Temps:          0       2       0       0       0
  1510 ;;      Totals:         0       6       0       0       0
  1511 ;;Total ram usage:        6 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _ui_adc_read
  1523  067E                     _ui_adc_read:	
  1524                           
  1525                           ;adc.c: 107: unsigned int pot = 0;
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _ui_adc_read: [wreg+status,2+btemp+1]
  1529  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1530  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0680  01A4               	clrf	ui_adc_read@pot
  1532  0681  01A5               	clrf	ui_adc_read@pot+1
  1533                           
  1534                           ;adc.c: 109: CHS2 = 0;
  1535  0682  121F               	bcf	31,4	;volatile
  1536                           
  1537                           ;adc.c: 110: CHS1 = 0;
  1538  0683  119F               	bcf	31,3	;volatile
  1539                           
  1540                           ;adc.c: 111: CHS0 = 0;
  1541  0684  111F               	bcf	31,2	;volatile
  1542                           
  1543                           ;adc.c: 114: _delay((unsigned long)((1)*(20000000/4000.0)));
  1544  0685  3007               	movlw	7
  1545  0686  00A3               	movwf	??_ui_adc_read+1
  1546  0687  307D               	movlw	125
  1547  0688  00A2               	movwf	??_ui_adc_read
  1548  0689                     u2207:	
  1549  0689  0BA2               	decfsz	??_ui_adc_read,f
  1550  068A  2E89               	goto	u2207
  1551  068B  0BA3               	decfsz	??_ui_adc_read+1,f
  1552  068C  2E89               	goto	u2207
  1553                           
  1554                           ;adc.c: 117: GO = 1;
  1555  068D  1283               	bcf	3,5	;RP0=0, select bank0
  1556  068E  1303               	bcf	3,6	;RP1=0, select bank0
  1557  068F  149F               	bsf	31,1	;volatile
  1558  0690                     l40:	
  1559                           ;adc.c: 118: while (GO == 1);
  1560                           
  1561  0690  189F               	btfsc	31,1	;volatile
  1562  0691  2E90               	goto	l40
  1563                           
  1564                           ;adc.c: 121: pot = (unsigned int)ADRESH << 8;
  1565  0692  081E               	movf	30,w	;volatile
  1566  0693  00A2               	movwf	??_ui_adc_read
  1567  0694  01A3               	clrf	??_ui_adc_read+1
  1568  0695  0822               	movf	??_ui_adc_read,w
  1569  0696  00A3               	movwf	??_ui_adc_read+1
  1570  0697  01A2               	clrf	??_ui_adc_read
  1571  0698  0822               	movf	??_ui_adc_read,w
  1572  0699  00A4               	movwf	ui_adc_read@pot
  1573  069A  0823               	movf	??_ui_adc_read+1,w
  1574  069B  00A5               	movwf	ui_adc_read@pot+1
  1575                           
  1576                           ;adc.c: 122: pot = pot + ADRESL;
  1577  069C  1683               	bsf	3,5	;RP0=1, select bank1
  1578  069D  1303               	bcf	3,6	;RP1=0, select bank1
  1579  069E  081E               	movf	30,w	;volatile
  1580  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1581  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1582  06A1  0724               	addwf	ui_adc_read@pot,w
  1583  06A2  00A2               	movwf	??_ui_adc_read
  1584  06A3  0825               	movf	ui_adc_read@pot+1,w
  1585  06A4  1803               	skipnc
  1586  06A5  0A25               	incf	ui_adc_read@pot+1,w
  1587  06A6  00A3               	movwf	??_ui_adc_read+1
  1588  06A7  0822               	movf	??_ui_adc_read,w
  1589  06A8  00A4               	movwf	ui_adc_read@pot
  1590  06A9  0823               	movf	??_ui_adc_read+1,w
  1591  06AA  00A5               	movwf	ui_adc_read@pot+1
  1592                           
  1593                           ;adc.c: 123: return pot;
  1594  06AB  0825               	movf	ui_adc_read@pot+1,w
  1595  06AC  00A1               	movwf	?_ui_adc_read+1
  1596  06AD  0824               	movf	ui_adc_read@pot,w
  1597  06AE  00A0               	movwf	?_ui_adc_read
  1598  06AF  0008               	return
  1599  06B0                     __end_of_ui_adc_read:	
  1600                           
  1601                           	psect	text2
  1602  0791                     __ptext2:	
  1603 ;; *************** function _uc_uart_receive *****************
  1604 ;; Defined at:
  1605 ;;		line 87 in file "../../KJ/Project_6/uart.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      unsigned char 
  1612 ;; Registers used:
  1613 ;;		wreg
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0
  1622 ;;      Totals:         0       0       0       0       0
  1623 ;;Total ram usage:        0 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _uc_uart_receive
  1635  0791                     _uc_uart_receive:	
  1636                           
  1637                           ;uart.c: 90: if (OERR == 1) {
  1638                           
  1639                           ;incstack = 0
  1640                           ; Regs used in _uc_uart_receive: [wreg]
  1641  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0793  1C98               	btfss	24,1	;volatile
  1644  0794  2F97               	goto	l150
  1645                           
  1646                           ;uart.c: 92: CREN = 0;
  1647  0795  1218               	bcf	24,4	;volatile
  1648                           
  1649                           ;uart.c: 93: CREN = 1;
  1650  0796  1618               	bsf	24,4	;volatile
  1651  0797                     l150:	
  1652                           ;uart.c: 94: }
  1653                           ;uart.c: 97: while (RCIF == 0);
  1654                           
  1655  0797  1E8C               	btfss	12,5	;volatile
  1656  0798  2F97               	goto	l150
  1657                           
  1658                           ;uart.c: 100: return RCREG;
  1659                           ;	Return value of _uc_uart_receive is never used
  1660  0799  081A               	movf	26,w	;volatile
  1661  079A  0008               	return
  1662  079B                     __end_of_uc_uart_receive:	
  1663                           
  1664                           	psect	text3
  1665  06FC                     __ptext3:	
  1666 ;; *************** function _uart_initialize *****************
  1667 ;; Defined at:
  1668 ;;		line 28 in file "../../KJ/Project_6/uart.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  dummy           1    1[BANK0 ] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;		None               void
  1675 ;; Registers used:
  1676 ;;		wreg, status,2
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1682 ;;      Params:         0       0       0       0       0
  1683 ;;      Locals:         0       1       0       0       0
  1684 ;;      Temps:          0       1       0       0       0
  1685 ;;      Totals:         0       2       0       0       0
  1686 ;;Total ram usage:        2 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    1
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _uart_initialize
  1698  06FC                     _uart_initialize:	
  1699                           
  1700                           ;uart.c: 30: unsigned char dummy = 0;
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in _uart_initialize: [wreg+status,2]
  1704  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1705  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1706  06FE  01A1               	clrf	uart_initialize@dummy
  1707                           
  1708                           ;uart.c: 31: BRG16 = 0;
  1709  06FF  1683               	bsf	3,5	;RP0=1, select bank3
  1710  0700  1703               	bsf	3,6	;RP1=1, select bank3
  1711  0701  1187               	bcf	7,3	;volatile
  1712                           
  1713                           ;uart.c: 32: SYNC = 0;
  1714  0702  1683               	bsf	3,5	;RP0=1, select bank1
  1715  0703  1303               	bcf	3,6	;RP1=0, select bank1
  1716  0704  1218               	bcf	24,4	;volatile
  1717                           
  1718                           ;uart.c: 33: TX9 = 0;
  1719  0705  1318               	bcf	24,6	;volatile
  1720                           
  1721                           ;uart.c: 34: RX9 = 0;
  1722  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1723  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1724  0708  1318               	bcf	24,6	;volatile
  1725                           
  1726                           ;uart.c: 35: BRGH = 1;
  1727  0709  1683               	bsf	3,5	;RP0=1, select bank1
  1728  070A  1303               	bcf	3,6	;RP1=0, select bank1
  1729  070B  1518               	bsf	24,2	;volatile
  1730                           
  1731                           ;uart.c: 36: SPBRG = 129;
  1732  070C  3081               	movlw	129
  1733  070D  0099               	movwf	25	;volatile
  1734                           
  1735                           ;uart.c: 37: SPEN = 1;
  1736  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1737  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0710  1798               	bsf	24,7	;volatile
  1739                           
  1740                           ;uart.c: 38: CREN = 1;
  1741  0711  1618               	bsf	24,4	;volatile
  1742                           
  1743                           ;uart.c: 39: TXEN = 1;
  1744  0712  1683               	bsf	3,5	;RP0=1, select bank1
  1745  0713  1303               	bcf	3,6	;RP1=0, select bank1
  1746  0714  1698               	bsf	24,5	;volatile
  1747                           
  1748                           ;uart.c: 40: dummy = RCREG;
  1749  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1750  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1751  0717  081A               	movf	26,w	;volatile
  1752  0718  00A0               	movwf	??_uart_initialize
  1753  0719  0820               	movf	??_uart_initialize,w
  1754  071A  00A1               	movwf	uart_initialize@dummy
  1755                           
  1756                           ;uart.c: 41: dummy = RCREG;
  1757  071B  081A               	movf	26,w	;volatile
  1758  071C  00A0               	movwf	??_uart_initialize
  1759  071D  0820               	movf	??_uart_initialize,w
  1760  071E  00A1               	movwf	uart_initialize@dummy
  1761  071F  0008               	return
  1762  0720                     __end_of_uart_initialize:	
  1763                           
  1764                           	psect	text4
  1765  05D5                     __ptext4:	
  1766 ;; *************** function _lcd_putstr *****************
  1767 ;; Defined at:
  1768 ;;		line 241 in file "../../KJ/Project_6/lcd.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  csz_string      1    wreg     PTR const unsigned char 
  1771 ;;		 -> STR_5(8), STR_4(7), STR_3(7), STR_2(3), 
  1772 ;;		 -> STR_1(5), 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  csz_string      1    8[BANK0 ] PTR const unsigned char 
  1775 ;;		 -> STR_5(8), STR_4(7), STR_3(7), STR_2(3), 
  1776 ;;		 -> STR_1(5), 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;		None               void
  1779 ;; Registers used:
  1780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         0       0       0       0       0
  1787 ;;      Locals:         0       1       0       0       0
  1788 ;;      Temps:          0       1       0       0       0
  1789 ;;      Totals:         0       2       0       0       0
  1790 ;;Total ram usage:        2 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    4
  1793 ;; This function calls:
  1794 ;;		_lcd_2ndline
  1795 ;;		_lcd_putchar
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function _lcd_putstr
  1803  05D5                     _lcd_putstr:	
  1804                           
  1805                           ;incstack = 0
  1806                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1807                           ;lcd_putstr@csz_string stored from wreg
  1808  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1809  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1810  05D7  00A8               	movwf	lcd_putstr@csz_string
  1811  05D8                     l1943:	
  1812                           ;lcd.c: 244: while (*csz_string != '\0') {
  1813                           
  1814  05D8  0828               	movf	lcd_putstr@csz_string,w
  1815  05D9  0084               	movwf	4
  1816  05DA  120A  118A  26D8  120A  118A  	fcall	stringdir
  1817  05DF  3A00               	xorlw	0
  1818  05E0  1903               	btfsc	3,2
  1819  05E1  0008               	return
  1820                           
  1821                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
  1822  05E2  0828               	movf	lcd_putstr@csz_string,w
  1823  05E3  0084               	movwf	4
  1824  05E4  120A  118A  26D8  120A  118A  	fcall	stringdir
  1825  05E9  3A0A               	xorlw	10
  1826  05EA  1903               	skipnz
  1827  05EB  2DF6               	goto	l1937
  1828  05EC  0828               	movf	lcd_putstr@csz_string,w
  1829  05ED  0084               	movwf	4
  1830  05EE  120A  118A  26D8  120A  118A  	fcall	stringdir
  1831  05F3  3A0D               	xorlw	13
  1832  05F4  1D03               	skipz
  1833  05F5  2DFC               	goto	l1939
  1834  05F6                     l1937:	
  1835                           
  1836                           ;lcd.c: 248: lcd_2ndline();
  1837  05F6  120A  118A  277B  120A  118A  	fcall	_lcd_2ndline
  1838                           
  1839                           ;lcd.c: 249: }
  1840  05FB  2E0A               	goto	l1941
  1841  05FC                     l1939:	
  1842                           
  1843                           ;lcd.c: 252: else {
  1844                           ;lcd.c: 253: lcd_putchar(*csz_string);
  1845  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1846  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1847  05FE  0828               	movf	lcd_putstr@csz_string,w
  1848  05FF  0084               	movwf	4
  1849  0600  120A  118A  26D8  120A  118A  	fcall	stringdir
  1850  0605  120A  118A  276F  120A  118A  	fcall	_lcd_putchar
  1851  060A                     l1941:	
  1852                           
  1853                           ;lcd.c: 254: }
  1854                           ;lcd.c: 257: csz_string++;
  1855  060A  3001               	movlw	1
  1856  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1857  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1858  060D  00A7               	movwf	??_lcd_putstr
  1859  060E  0827               	movf	??_lcd_putstr,w
  1860  060F  07A8               	addwf	lcd_putstr@csz_string,f
  1861  0610  2DD8               	goto	l1943
  1862  0611                     __end_of_lcd_putstr:	
  1863                           
  1864                           	psect	text5
  1865  077B                     __ptext5:	
  1866 ;; *************** function _lcd_2ndline *****************
  1867 ;; Defined at:
  1868 ;;		line 178 in file "../../KJ/Project_6/lcd.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;		None               void
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         0       0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0
  1884 ;;      Temps:          0       1       0       0       0
  1885 ;;      Totals:         0       1       0       0       0
  1886 ;;Total ram usage:        1 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    3
  1889 ;; This function calls:
  1890 ;;		_send_lcd_data
  1891 ;; This function is called by:
  1892 ;;		_lcd_putstr
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           
  1898                           ;psect for function _lcd_2ndline
  1899  077B                     _lcd_2ndline:	
  1900                           
  1901                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  1905  077B  30C0               	movlw	192
  1906  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1907  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1908  077E  00A5               	movwf	??_lcd_2ndline
  1909  077F  0825               	movf	??_lcd_2ndline,w
  1910  0780  00A1               	movwf	send_lcd_data@uc_data
  1911  0781  3000               	movlw	0
  1912  0782  120A  118A  2598   	fcall	_send_lcd_data
  1913  0785  0008               	return
  1914  0786                     __end_of_lcd_2ndline:	
  1915                           
  1916                           	psect	text6
  1917  0611                     __ptext6:	
  1918 ;; *************** function _lcd_initialize *****************
  1919 ;; Defined at:
  1920 ;;		line 100 in file "../../KJ/Project_6/lcd.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;		None               void
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0
  1936 ;;      Temps:          0       2       0       0       0
  1937 ;;      Totals:         0       2       0       0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    4
  1941 ;; This function calls:
  1942 ;;		_lcd_clear
  1943 ;;		_send_lcd_data
  1944 ;;		_set_lcd_e
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _lcd_initialize
  1952  0611                     _lcd_initialize:	
  1953                           
  1954                           ;lcd.c: 104: set_lcd_e(1);
  1955                           
  1956                           ;incstack = 0
  1957                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1958  0611  3001               	movlw	1
  1959  0612  120A  118A  2762  120A  118A  	fcall	_set_lcd_e
  1960                           
  1961                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1962  0617  3062               	movlw	98
  1963  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1965  061A  00A6               	movwf	??_lcd_initialize+1
  1966  061B  3065               	movlw	101
  1967  061C  00A5               	movwf	??_lcd_initialize
  1968  061D                     u2217:	
  1969  061D  0BA5               	decfsz	??_lcd_initialize,f
  1970  061E  2E1D               	goto	u2217
  1971  061F  0BA6               	decfsz	??_lcd_initialize+1,f
  1972  0620  2E1D               	goto	u2217
  1973  0621  2E22               	nop2
  1974                           
  1975                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1976  0622  3038               	movlw	56
  1977  0623  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0624  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0625  00A5               	movwf	??_lcd_initialize
  1980  0626  0825               	movf	??_lcd_initialize,w
  1981  0627  00A1               	movwf	send_lcd_data@uc_data
  1982  0628  3000               	movlw	0
  1983  0629  120A  118A  2598  120A  118A  	fcall	_send_lcd_data
  1984                           
  1985                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1986  062E  3006               	movlw	6
  1987  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0631  00A5               	movwf	??_lcd_initialize
  1990  0632  0825               	movf	??_lcd_initialize,w
  1991  0633  00A1               	movwf	send_lcd_data@uc_data
  1992  0634  3000               	movlw	0
  1993  0635  120A  118A  2598  120A  118A  	fcall	_send_lcd_data
  1994                           
  1995                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1996  063A  300C               	movlw	12
  1997  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1998  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1999  063D  00A5               	movwf	??_lcd_initialize
  2000  063E  0825               	movf	??_lcd_initialize,w
  2001  063F  00A1               	movwf	send_lcd_data@uc_data
  2002  0640  3000               	movlw	0
  2003  0641  120A  118A  2598  120A  118A  	fcall	_send_lcd_data
  2004                           
  2005                           ;lcd.c: 118: lcd_clear();
  2006  0646  120A  118A  279B   	fcall	_lcd_clear
  2007  0649  0008               	return
  2008  064A                     __end_of_lcd_initialize:	
  2009                           
  2010                           	psect	text7
  2011  079B                     __ptext7:	
  2012 ;; *************** function _lcd_clear *****************
  2013 ;; Defined at:
  2014 ;;		line 136 in file "../../KJ/Project_6/lcd.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;		None               void
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0
  2031 ;;      Totals:         0       0       0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    3
  2035 ;; This function calls:
  2036 ;;		_send_lcd_data
  2037 ;; This function is called by:
  2038 ;;		_lcd_initialize
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           
  2043                           ;psect for function _lcd_clear
  2044  079B                     _lcd_clear:	
  2045                           
  2046                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  2047                           
  2048                           ;incstack = 0
  2049                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2050  079B  1283               	bcf	3,5	;RP0=0, select bank0
  2051  079C  1303               	bcf	3,6	;RP1=0, select bank0
  2052  079D  01A1               	clrf	send_lcd_data@uc_data
  2053  079E  0AA1               	incf	send_lcd_data@uc_data,f
  2054  079F  3000               	movlw	0
  2055  07A0  120A  118A  2598   	fcall	_send_lcd_data
  2056  07A3  0008               	return
  2057  07A4                     __end_of_lcd_clear:	
  2058                           
  2059                           	psect	text8
  2060  0786                     __ptext8:	
  2061 ;; *************** function _lcd_home *****************
  2062 ;; Defined at:
  2063 ;;		line 157 in file "../../KJ/Project_6/lcd.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;		None               void
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0
  2079 ;;      Temps:          0       1       0       0       0
  2080 ;;      Totals:         0       1       0       0       0
  2081 ;;Total ram usage:        1 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    3
  2084 ;; This function calls:
  2085 ;;		_send_lcd_data
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _lcd_home
  2093  0786                     _lcd_home:	
  2094                           
  2095                           ;lcd.c: 160: send_lcd_data(0, 0b00000010);
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _lcd_home: [wreg+status,2+status,0+pclath+cstack]
  2099  0786  3002               	movlw	2
  2100  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0789  00A5               	movwf	??_lcd_home
  2103  078A  0825               	movf	??_lcd_home,w
  2104  078B  00A1               	movwf	send_lcd_data@uc_data
  2105  078C  3000               	movlw	0
  2106  078D  120A  118A  2598   	fcall	_send_lcd_data
  2107  0790  0008               	return
  2108  0791                     __end_of_lcd_home:	
  2109                           
  2110                           	psect	text9
  2111  0748                     __ptext9:	
  2112 ;; *************** function _lcd_goto *****************
  2113 ;; Defined at:
  2114 ;;		line 199 in file "../../KJ/Project_6/lcd.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  uc_position     1    wreg     unsigned char 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  uc_position     1    6[BANK0 ] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;		None               void
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       0       0       0       0
  2129 ;;      Locals:         0       1       0       0       0
  2130 ;;      Temps:          0       1       0       0       0
  2131 ;;      Totals:         0       2       0       0       0
  2132 ;;Total ram usage:        2 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    3
  2135 ;; This function calls:
  2136 ;;		_send_lcd_data
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function _lcd_goto
  2144  0748                     _lcd_goto:	
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2148                           ;lcd_goto@uc_position stored from wreg
  2149  0748  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0749  1303               	bcf	3,6	;RP1=0, select bank0
  2151  074A  00A6               	movwf	lcd_goto@uc_position
  2152                           
  2153                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  2154  074B  0826               	movf	lcd_goto@uc_position,w
  2155  074C  3880               	iorlw	128
  2156  074D  00A5               	movwf	??_lcd_goto
  2157  074E  0825               	movf	??_lcd_goto,w
  2158  074F  00A1               	movwf	send_lcd_data@uc_data
  2159  0750  3000               	movlw	0
  2160  0751  120A  118A  2598   	fcall	_send_lcd_data
  2161  0754  0008               	return
  2162  0755                     __end_of_lcd_goto:	
  2163                           
  2164                           	psect	text10
  2165  02D8                     __ptext10:	
  2166 ;; *************** function _lcd_bcd *****************
  2167 ;; Defined at:
  2168 ;;		line 274 in file "../../KJ/Project_6/lcd.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  uc_digit        1    wreg     unsigned char 
  2171 ;;  ui_number       2    8[BANK0 ] unsigned int 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  uc_digit        1   24[BANK0 ] unsigned char 
  2174 ;;  ui_decimal     10   14[BANK0 ] unsigned int [5]
  2175 ;; Return value:  Size  Location     Type
  2176 ;;		None               void
  2177 ;; Registers used:
  2178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         0       2       0       0       0
  2185 ;;      Locals:         0      11       0       0       0
  2186 ;;      Temps:          0       4       0       0       0
  2187 ;;      Totals:         0      17       0       0       0
  2188 ;;Total ram usage:       17 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    4
  2191 ;; This function calls:
  2192 ;;		___lwdiv
  2193 ;;		___lwmod
  2194 ;;		_lcd_putchar
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _lcd_bcd
  2202  02D8                     _lcd_bcd:	
  2203                           
  2204                           ;incstack = 0
  2205                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2206                           ;lcd_bcd@uc_digit stored from wreg
  2207  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2208  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2209  02DA  00B8               	movwf	lcd_bcd@uc_digit
  2210                           
  2211                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  2212  02DB  302E               	movlw	lcd_bcd@ui_decimal& (0+255)
  2213  02DC  0084               	movwf	4
  2214  02DD  30A0               	movlw	low lcd_bcd@F1683
  2215  02DE  00AA               	movwf	??_lcd_bcd
  2216  02DF  0804               	movf	4,w
  2217  02E0  00AB               	movwf	??_lcd_bcd+1
  2218  02E1  300A               	movlw	10
  2219  02E2  00AC               	movwf	??_lcd_bcd+2
  2220  02E3                     u2000:	
  2221  02E3  082A               	movf	??_lcd_bcd,w
  2222  02E4  0084               	movwf	4
  2223  02E5  1383               	bcf	3,7	;select IRP bank1
  2224  02E6  0800               	movf	0,w
  2225  02E7  00AD               	movwf	??_lcd_bcd+3
  2226  02E8  0AAA               	incf	??_lcd_bcd,f
  2227  02E9  082B               	movf	??_lcd_bcd+1,w
  2228  02EA  0084               	movwf	4
  2229  02EB  082D               	movf	??_lcd_bcd+3,w
  2230  02EC  0080               	movwf	0
  2231  02ED  0AAB               	incf	??_lcd_bcd+1,f
  2232  02EE  0BAC               	decfsz	??_lcd_bcd+2,f
  2233  02EF  2AE3               	goto	u2000
  2234                           
  2235                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  2236  02F0  3010               	movlw	16
  2237  02F1  00A0               	movwf	___lwdiv@divisor
  2238  02F2  3027               	movlw	39
  2239  02F3  00A1               	movwf	___lwdiv@divisor+1
  2240  02F4  0829               	movf	lcd_bcd@ui_number+1,w
  2241  02F5  00A3               	movwf	___lwdiv@dividend+1
  2242  02F6  0828               	movf	lcd_bcd@ui_number,w
  2243  02F7  00A2               	movwf	___lwdiv@dividend
  2244  02F8  120A  118A  255A  120A  118A  	fcall	___lwdiv
  2245  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2246  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2247  02FF  0821               	movf	?___lwdiv+1,w
  2248  0300  00B7               	movwf	lcd_bcd@ui_decimal+9
  2249  0301  0820               	movf	?___lwdiv,w
  2250  0302  00B6               	movwf	lcd_bcd@ui_decimal+8
  2251                           
  2252                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  2253  0303  3010               	movlw	16
  2254  0304  00A0               	movwf	___lwmod@divisor
  2255  0305  3027               	movlw	39
  2256  0306  00A1               	movwf	___lwmod@divisor+1
  2257  0307  0829               	movf	lcd_bcd@ui_number+1,w
  2258  0308  00A3               	movwf	___lwmod@dividend+1
  2259  0309  0828               	movf	lcd_bcd@ui_number,w
  2260  030A  00A2               	movwf	___lwmod@dividend
  2261  030B  120A  118A  264A  120A  118A  	fcall	___lwmod
  2262  0310  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0311  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0312  0821               	movf	?___lwmod+1,w
  2265  0313  00B5               	movwf	lcd_bcd@ui_decimal+7
  2266  0314  0820               	movf	?___lwmod,w
  2267  0315  00B4               	movwf	lcd_bcd@ui_decimal+6
  2268                           
  2269                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  2270  0316  30E8               	movlw	232
  2271  0317  00A0               	movwf	___lwmod@divisor
  2272  0318  3003               	movlw	3
  2273  0319  00A1               	movwf	___lwmod@divisor+1
  2274  031A  0835               	movf	lcd_bcd@ui_decimal+7,w
  2275  031B  00A3               	movwf	___lwmod@dividend+1
  2276  031C  0834               	movf	lcd_bcd@ui_decimal+6,w
  2277  031D  00A2               	movwf	___lwmod@dividend
  2278  031E  120A  118A  264A  120A  118A  	fcall	___lwmod
  2279  0323  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0324  1303               	bcf	3,6	;RP1=0, select bank0
  2281  0325  0821               	movf	?___lwmod+1,w
  2282  0326  00B3               	movwf	lcd_bcd@ui_decimal+5
  2283  0327  0820               	movf	?___lwmod,w
  2284  0328  00B2               	movwf	lcd_bcd@ui_decimal+4
  2285                           
  2286                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  2287  0329  30E8               	movlw	232
  2288  032A  00A0               	movwf	___lwdiv@divisor
  2289  032B  3003               	movlw	3
  2290  032C  00A1               	movwf	___lwdiv@divisor+1
  2291  032D  0835               	movf	lcd_bcd@ui_decimal+7,w
  2292  032E  00A3               	movwf	___lwdiv@dividend+1
  2293  032F  0834               	movf	lcd_bcd@ui_decimal+6,w
  2294  0330  00A2               	movwf	___lwdiv@dividend
  2295  0331  120A  118A  255A  120A  118A  	fcall	___lwdiv
  2296  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0338  0821               	movf	?___lwdiv+1,w
  2299  0339  00B5               	movwf	lcd_bcd@ui_decimal+7
  2300  033A  0820               	movf	?___lwdiv,w
  2301  033B  00B4               	movwf	lcd_bcd@ui_decimal+6
  2302                           
  2303                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  2304  033C  3064               	movlw	100
  2305  033D  00A0               	movwf	___lwmod@divisor
  2306  033E  3000               	movlw	0
  2307  033F  00A1               	movwf	___lwmod@divisor+1
  2308  0340  0833               	movf	lcd_bcd@ui_decimal+5,w
  2309  0341  00A3               	movwf	___lwmod@dividend+1
  2310  0342  0832               	movf	lcd_bcd@ui_decimal+4,w
  2311  0343  00A2               	movwf	___lwmod@dividend
  2312  0344  120A  118A  264A  120A  118A  	fcall	___lwmod
  2313  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2314  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2315  034B  0821               	movf	?___lwmod+1,w
  2316  034C  00B1               	movwf	lcd_bcd@ui_decimal+3
  2317  034D  0820               	movf	?___lwmod,w
  2318  034E  00B0               	movwf	lcd_bcd@ui_decimal+2
  2319                           
  2320                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  2321  034F  3064               	movlw	100
  2322  0350  00A0               	movwf	___lwdiv@divisor
  2323  0351  3000               	movlw	0
  2324  0352  00A1               	movwf	___lwdiv@divisor+1
  2325  0353  0833               	movf	lcd_bcd@ui_decimal+5,w
  2326  0354  00A3               	movwf	___lwdiv@dividend+1
  2327  0355  0832               	movf	lcd_bcd@ui_decimal+4,w
  2328  0356  00A2               	movwf	___lwdiv@dividend
  2329  0357  120A  118A  255A  120A  118A  	fcall	___lwdiv
  2330  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2331  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2332  035E  0821               	movf	?___lwdiv+1,w
  2333  035F  00B3               	movwf	lcd_bcd@ui_decimal+5
  2334  0360  0820               	movf	?___lwdiv,w
  2335  0361  00B2               	movwf	lcd_bcd@ui_decimal+4
  2336                           
  2337                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  2338  0362  300A               	movlw	10
  2339  0363  00A0               	movwf	___lwmod@divisor
  2340  0364  3000               	movlw	0
  2341  0365  00A1               	movwf	___lwmod@divisor+1
  2342  0366  0831               	movf	lcd_bcd@ui_decimal+3,w
  2343  0367  00A3               	movwf	___lwmod@dividend+1
  2344  0368  0830               	movf	lcd_bcd@ui_decimal+2,w
  2345  0369  00A2               	movwf	___lwmod@dividend
  2346  036A  120A  118A  264A  120A  118A  	fcall	___lwmod
  2347  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2349  0371  0821               	movf	?___lwmod+1,w
  2350  0372  00AF               	movwf	lcd_bcd@ui_decimal+1
  2351  0373  0820               	movf	?___lwmod,w
  2352  0374  00AE               	movwf	lcd_bcd@ui_decimal
  2353                           
  2354                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  2355  0375  300A               	movlw	10
  2356  0376  00A0               	movwf	___lwdiv@divisor
  2357  0377  3000               	movlw	0
  2358  0378  00A1               	movwf	___lwdiv@divisor+1
  2359  0379  0831               	movf	lcd_bcd@ui_decimal+3,w
  2360  037A  00A3               	movwf	___lwdiv@dividend+1
  2361  037B  0830               	movf	lcd_bcd@ui_decimal+2,w
  2362  037C  00A2               	movwf	___lwdiv@dividend
  2363  037D  120A  118A  255A  120A  118A  	fcall	___lwdiv
  2364  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2366  0384  0821               	movf	?___lwdiv+1,w
  2367  0385  00B1               	movwf	lcd_bcd@ui_decimal+3
  2368  0386  0820               	movf	?___lwdiv,w
  2369  0387  00B0               	movwf	lcd_bcd@ui_decimal+2
  2370                           
  2371                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  2372  0388  3006               	movlw	6
  2373  0389  0238               	subwf	lcd_bcd@uc_digit,w
  2374  038A  1C03               	skipc
  2375  038B  2B90               	goto	l1967
  2376  038C  3005               	movlw	5
  2377  038D  00AA               	movwf	??_lcd_bcd
  2378  038E  082A               	movf	??_lcd_bcd,w
  2379  038F  00B8               	movwf	lcd_bcd@uc_digit
  2380  0390                     l1967:	
  2381                           
  2382                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  2383  0390  0838               	movf	lcd_bcd@uc_digit,w
  2384  0391  1903               	btfsc	3,2
  2385  0392  0008               	return
  2386                           
  2387                           ;lcd.c: 289: {
  2388                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  2389  0393  0838               	movf	lcd_bcd@uc_digit,w
  2390  0394  00AA               	movwf	??_lcd_bcd
  2391  0395  072A               	addwf	??_lcd_bcd,w
  2392  0396  3EFE               	addlw	254
  2393  0397  3E2E               	addlw	(low (lcd_bcd@ui_decimal| 0))& (0+255)
  2394  0398  0084               	movwf	4
  2395  0399  1383               	bcf	3,7	;select IRP bank0
  2396  039A  0800               	movf	0,w
  2397  039B  3E30               	addlw	48
  2398  039C  120A  118A  276F  120A  118A  	fcall	_lcd_putchar
  2399  03A1  3001               	movlw	1
  2400  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2401  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2402  03A4  02B8               	subwf	lcd_bcd@uc_digit,f
  2403  03A5  2B90               	goto	l1967
  2404  03A6                     __end_of_lcd_bcd:	
  2405                           
  2406                           	psect	text11
  2407  076F                     __ptext11:	
  2408 ;; *************** function _lcd_putchar *****************
  2409 ;; Defined at:
  2410 ;;		line 220 in file "../../KJ/Project_6/lcd.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  c_data          1    wreg     unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  c_data          1    6[BANK0 ] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;		None               void
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, pclath, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2424 ;;      Params:         0       0       0       0       0
  2425 ;;      Locals:         0       1       0       0       0
  2426 ;;      Temps:          0       1       0       0       0
  2427 ;;      Totals:         0       2       0       0       0
  2428 ;;Total ram usage:        2 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    3
  2431 ;; This function calls:
  2432 ;;		_send_lcd_data
  2433 ;; This function is called by:
  2434 ;;		_lcd_putstr
  2435 ;;		_lcd_bcd
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _lcd_putchar
  2441  076F                     _lcd_putchar:	
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  2445                           ;lcd_putchar@c_data stored from wreg
  2446  076F  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0770  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0771  00A6               	movwf	lcd_putchar@c_data
  2449                           
  2450                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  2451  0772  0826               	movf	lcd_putchar@c_data,w
  2452  0773  00A5               	movwf	??_lcd_putchar
  2453  0774  0825               	movf	??_lcd_putchar,w
  2454  0775  00A1               	movwf	send_lcd_data@uc_data
  2455  0776  3001               	movlw	1
  2456  0777  120A  118A  2598   	fcall	_send_lcd_data
  2457  077A  0008               	return
  2458  077B                     __end_of_lcd_putchar:	
  2459                           
  2460                           	psect	text12
  2461  0598                     __ptext12:	
  2462 ;; *************** function _send_lcd_data *****************
  2463 ;; Defined at:
  2464 ;;		line 308 in file "../../KJ/Project_6/lcd.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  b_rs            1    wreg     unsigned char 
  2467 ;;  uc_data         1    1[BANK0 ] unsigned char 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  b_rs            1    4[BANK0 ] unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;		None               void
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0, pclath, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2479 ;;      Params:         0       1       0       0       0
  2480 ;;      Locals:         0       1       0       0       0
  2481 ;;      Temps:          0       2       0       0       0
  2482 ;;      Totals:         0       4       0       0       0
  2483 ;;Total ram usage:        4 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    2
  2486 ;; This function calls:
  2487 ;;		_set_lcd_data
  2488 ;;		_set_lcd_e
  2489 ;;		_set_lcd_rs
  2490 ;; This function is called by:
  2491 ;;		_lcd_initialize
  2492 ;;		_lcd_clear
  2493 ;;		_lcd_home
  2494 ;;		_lcd_2ndline
  2495 ;;		_lcd_goto
  2496 ;;		_lcd_putchar
  2497 ;;		_main
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _send_lcd_data
  2503  0598                     _send_lcd_data:	
  2504                           
  2505                           ;incstack = 0
  2506                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2507                           ;send_lcd_data@b_rs stored from wreg
  2508  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2510  059A  00A4               	movwf	send_lcd_data@b_rs
  2511                           
  2512                           ;lcd.c: 311: set_lcd_rs(b_rs);
  2513  059B  0824               	movf	send_lcd_data@b_rs,w
  2514  059C  120A  118A  2755  120A  118A  	fcall	_set_lcd_rs
  2515                           
  2516                           ;lcd.c: 312: set_lcd_data(uc_data);
  2517  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2518  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2519  05A3  0821               	movf	send_lcd_data@uc_data,w
  2520  05A4  120A  118A  27A4  120A  118A  	fcall	_set_lcd_data
  2521                           
  2522                           ;lcd.c: 315: set_lcd_e(1);
  2523  05A9  3001               	movlw	1
  2524  05AA  120A  118A  2762  120A  118A  	fcall	_set_lcd_e
  2525                           
  2526                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  2527  05AF  3007               	movlw	7
  2528  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2529  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2530  05B2  00A3               	movwf	??_send_lcd_data+1
  2531  05B3  307D               	movlw	125
  2532  05B4  00A2               	movwf	??_send_lcd_data
  2533  05B5                     u2227:	
  2534  05B5  0BA2               	decfsz	??_send_lcd_data,f
  2535  05B6  2DB5               	goto	u2227
  2536  05B7  0BA3               	decfsz	??_send_lcd_data+1,f
  2537  05B8  2DB5               	goto	u2227
  2538                           
  2539                           ;lcd.c: 317: set_lcd_e(0);
  2540  05B9  3000               	movlw	0
  2541  05BA  120A  118A  2762  120A  118A  	fcall	_set_lcd_e
  2542                           
  2543                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  2544  05BF  300D               	movlw	13
  2545  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2546  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2547  05C2  00A3               	movwf	??_send_lcd_data+1
  2548  05C3  30FB               	movlw	251
  2549  05C4  00A2               	movwf	??_send_lcd_data
  2550  05C5                     u2237:	
  2551  05C5  0BA2               	decfsz	??_send_lcd_data,f
  2552  05C6  2DC5               	goto	u2237
  2553  05C7  0BA3               	decfsz	??_send_lcd_data+1,f
  2554  05C8  2DC5               	goto	u2237
  2555  05C9  2DCA               	nop2
  2556                           
  2557                           ;lcd.c: 321: set_lcd_rs(0);
  2558  05CA  3000               	movlw	0
  2559  05CB  120A  118A  2755  120A  118A  	fcall	_set_lcd_rs
  2560                           
  2561                           ;lcd.c: 322: set_lcd_data(0);
  2562  05D0  3000               	movlw	0
  2563  05D1  120A  118A  27A4   	fcall	_set_lcd_data
  2564  05D4  0008               	return
  2565  05D5                     __end_of_send_lcd_data:	
  2566                           
  2567                           	psect	text13
  2568  0755                     __ptext13:	
  2569 ;; *************** function _set_lcd_rs *****************
  2570 ;; Defined at:
  2571 ;;		line 360 in file "../../KJ/Project_6/lcd.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  b_output        1    wreg     unsigned char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  b_output        1    0[BANK0 ] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;		None               void
  2578 ;; Registers used:
  2579 ;;		wreg
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2585 ;;      Params:         0       0       0       0       0
  2586 ;;      Locals:         0       1       0       0       0
  2587 ;;      Temps:          0       0       0       0       0
  2588 ;;      Totals:         0       1       0       0       0
  2589 ;;Total ram usage:        1 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_send_lcd_data
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           
  2600                           ;psect for function _set_lcd_rs
  2601  0755                     _set_lcd_rs:	
  2602                           
  2603                           ;incstack = 0
  2604                           ; Regs used in _set_lcd_rs: [wreg]
  2605                           ;set_lcd_rs@b_output stored from wreg
  2606  0755  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0756  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0757  00A0               	movwf	set_lcd_rs@b_output
  2609                           
  2610                           ;lcd.c: 362: RB4 = b_output;
  2611  0758  1C20               	btfss	set_lcd_rs@b_output,0
  2612  0759  2F5E               	goto	u1810
  2613  075A  1283               	bcf	3,5	;RP0=0, select bank0
  2614  075B  1303               	bcf	3,6	;RP1=0, select bank0
  2615  075C  1606               	bsf	6,4	;volatile
  2616  075D  0008               	return
  2617  075E                     u1810:	
  2618  075E  1283               	bcf	3,5	;RP0=0, select bank0
  2619  075F  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0760  1206               	bcf	6,4	;volatile
  2621  0761  0008               	return
  2622  0762                     __end_of_set_lcd_rs:	
  2623                           
  2624                           	psect	text14
  2625  0762                     __ptext14:	
  2626 ;; *************** function _set_lcd_e *****************
  2627 ;; Defined at:
  2628 ;;		line 340 in file "../../KJ/Project_6/lcd.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  b_output        1    wreg     unsigned char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  b_output        1    0[BANK0 ] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;		None               void
  2635 ;; Registers used:
  2636 ;;		wreg
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         0       0       0       0       0
  2643 ;;      Locals:         0       1       0       0       0
  2644 ;;      Temps:          0       0       0       0       0
  2645 ;;      Totals:         0       1       0       0       0
  2646 ;;Total ram usage:        1 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_lcd_initialize
  2653 ;;		_send_lcd_data
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _set_lcd_e
  2659  0762                     _set_lcd_e:	
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in _set_lcd_e: [wreg]
  2663                           ;set_lcd_e@b_output stored from wreg
  2664  0762  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0763  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0764  00A0               	movwf	set_lcd_e@b_output
  2667                           
  2668                           ;lcd.c: 342: RB5 = b_output;
  2669  0765  1C20               	btfss	set_lcd_e@b_output,0
  2670  0766  2F6B               	goto	u1790
  2671  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0769  1686               	bsf	6,5	;volatile
  2674  076A  0008               	return
  2675  076B                     u1790:	
  2676  076B  1283               	bcf	3,5	;RP0=0, select bank0
  2677  076C  1303               	bcf	3,6	;RP1=0, select bank0
  2678  076D  1286               	bcf	6,5	;volatile
  2679  076E  0008               	return
  2680  076F                     __end_of_set_lcd_e:	
  2681                           
  2682                           	psect	text15
  2683  07A4                     __ptext15:	
  2684 ;; *************** function _set_lcd_data *****************
  2685 ;; Defined at:
  2686 ;;		line 380 in file "../../KJ/Project_6/lcd.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  uc_data         1    wreg     unsigned char 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  uc_data         1    0[BANK0 ] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;		None               void
  2693 ;; Registers used:
  2694 ;;		wreg
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         0       0       0       0       0
  2701 ;;      Locals:         0       1       0       0       0
  2702 ;;      Temps:          0       0       0       0       0
  2703 ;;      Totals:         0       1       0       0       0
  2704 ;;Total ram usage:        1 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    1
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_send_lcd_data
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           
  2715                           ;psect for function _set_lcd_data
  2716  07A4                     _set_lcd_data:	
  2717                           
  2718                           ;incstack = 0
  2719                           ; Regs used in _set_lcd_data: [wreg]
  2720                           ;set_lcd_data@uc_data stored from wreg
  2721  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  2722  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  2723  07A6  00A0               	movwf	set_lcd_data@uc_data
  2724                           
  2725                           ;lcd.c: 382: PORTD = uc_data;
  2726  07A7  0820               	movf	set_lcd_data@uc_data,w
  2727  07A8  0088               	movwf	8	;volatile
  2728  07A9  0008               	return
  2729  07AA                     __end_of_set_lcd_data:	
  2730                           
  2731                           	psect	text16
  2732  064A                     __ptext16:	
  2733 ;; *************** function ___lwmod *****************
  2734 ;; Defined at:
  2735 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  divisor         2    0[BANK0 ] unsigned int 
  2738 ;;  dividend        2    2[BANK0 ] unsigned int 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  counter         1    5[BANK0 ] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  2    0[BANK0 ] unsigned int 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       4       0       0       0
  2751 ;;      Locals:         0       1       0       0       0
  2752 ;;      Temps:          0       1       0       0       0
  2753 ;;      Totals:         0       6       0       0       0
  2754 ;;Total ram usage:        6 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    1
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_lcd_bcd
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function ___lwmod
  2766  064A                     ___lwmod:	
  2767                           
  2768                           ;incstack = 0
  2769                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2770  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2771  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2772  064C  0820               	movf	___lwmod@divisor,w
  2773  064D  0421               	iorwf	___lwmod@divisor+1,w
  2774  064E  1903               	btfsc	3,2
  2775  064F  2E79               	goto	l1887
  2776  0650  01A5               	clrf	___lwmod@counter
  2777  0651  0AA5               	incf	___lwmod@counter,f
  2778  0652                     l1877:	
  2779  0652  1BA1               	btfsc	___lwmod@divisor+1,7
  2780  0653  2E60               	goto	l1879
  2781  0654  3001               	movlw	1
  2782  0655                     u1915:	
  2783  0655  1003               	clrc
  2784  0656  0DA0               	rlf	___lwmod@divisor,f
  2785  0657  0DA1               	rlf	___lwmod@divisor+1,f
  2786  0658  3EFF               	addlw	-1
  2787  0659  1D03               	skipz
  2788  065A  2E55               	goto	u1915
  2789  065B  3001               	movlw	1
  2790  065C  00A4               	movwf	??___lwmod
  2791  065D  0824               	movf	??___lwmod,w
  2792  065E  07A5               	addwf	___lwmod@counter,f
  2793  065F  2E52               	goto	l1877
  2794  0660                     l1879:	
  2795  0660  0821               	movf	___lwmod@divisor+1,w
  2796  0661  0223               	subwf	___lwmod@dividend+1,w
  2797  0662  1D03               	skipz
  2798  0663  2E66               	goto	u1935
  2799  0664  0820               	movf	___lwmod@divisor,w
  2800  0665  0222               	subwf	___lwmod@dividend,w
  2801  0666                     u1935:	
  2802  0666  1C03               	skipc
  2803  0667  2E6E               	goto	l1883
  2804  0668  0820               	movf	___lwmod@divisor,w
  2805  0669  02A2               	subwf	___lwmod@dividend,f
  2806  066A  0821               	movf	___lwmod@divisor+1,w
  2807  066B  1C03               	skipc
  2808  066C  03A3               	decf	___lwmod@dividend+1,f
  2809  066D  02A3               	subwf	___lwmod@dividend+1,f
  2810  066E                     l1883:	
  2811  066E  3001               	movlw	1
  2812  066F                     u1945:	
  2813  066F  1003               	clrc
  2814  0670  0CA1               	rrf	___lwmod@divisor+1,f
  2815  0671  0CA0               	rrf	___lwmod@divisor,f
  2816  0672  3EFF               	addlw	-1
  2817  0673  1D03               	skipz
  2818  0674  2E6F               	goto	u1945
  2819  0675  3001               	movlw	1
  2820  0676  02A5               	subwf	___lwmod@counter,f
  2821  0677  1D03               	btfss	3,2
  2822  0678  2E60               	goto	l1879
  2823  0679                     l1887:	
  2824  0679  0823               	movf	___lwmod@dividend+1,w
  2825  067A  00A1               	movwf	?___lwmod+1
  2826  067B  0822               	movf	___lwmod@dividend,w
  2827  067C  00A0               	movwf	?___lwmod
  2828  067D  0008               	return
  2829  067E                     __end_of___lwmod:	
  2830                           
  2831                           	psect	text17
  2832  055A                     __ptext17:	
  2833 ;; *************** function ___lwdiv *****************
  2834 ;; Defined at:
  2835 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  divisor         2    0[BANK0 ] unsigned int 
  2838 ;;  dividend        2    2[BANK0 ] unsigned int 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  quotient        2    6[BANK0 ] unsigned int 
  2841 ;;  counter         1    5[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  2    0[BANK0 ] unsigned int 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       4       0       0       0
  2852 ;;      Locals:         0       3       0       0       0
  2853 ;;      Temps:          0       1       0       0       0
  2854 ;;      Totals:         0       8       0       0       0
  2855 ;;Total ram usage:        8 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    1
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_lcd_bcd
  2862 ;;		_main
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           
  2867                           ;psect for function ___lwdiv
  2868  055A                     ___lwdiv:	
  2869                           
  2870                           ;incstack = 0
  2871                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2872  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2873  055B  1303               	bcf	3,6	;RP1=0, select bank0
  2874  055C  01A6               	clrf	___lwdiv@quotient
  2875  055D  01A7               	clrf	___lwdiv@quotient+1
  2876  055E  0820               	movf	___lwdiv@divisor,w
  2877  055F  0421               	iorwf	___lwdiv@divisor+1,w
  2878  0560  1903               	btfsc	3,2
  2879  0561  2D93               	goto	l1865
  2880  0562  01A5               	clrf	___lwdiv@counter
  2881  0563  0AA5               	incf	___lwdiv@counter,f
  2882  0564                     l1853:	
  2883  0564  1BA1               	btfsc	___lwdiv@divisor+1,7
  2884  0565  2D72               	goto	l1855
  2885  0566  3001               	movlw	1
  2886  0567                     u1845:	
  2887  0567  1003               	clrc
  2888  0568  0DA0               	rlf	___lwdiv@divisor,f
  2889  0569  0DA1               	rlf	___lwdiv@divisor+1,f
  2890  056A  3EFF               	addlw	-1
  2891  056B  1D03               	skipz
  2892  056C  2D67               	goto	u1845
  2893  056D  3001               	movlw	1
  2894  056E  00A4               	movwf	??___lwdiv
  2895  056F  0824               	movf	??___lwdiv,w
  2896  0570  07A5               	addwf	___lwdiv@counter,f
  2897  0571  2D64               	goto	l1853
  2898  0572                     l1855:	
  2899  0572  3001               	movlw	1
  2900  0573                     u1865:	
  2901  0573  1003               	clrc
  2902  0574  0DA6               	rlf	___lwdiv@quotient,f
  2903  0575  0DA7               	rlf	___lwdiv@quotient+1,f
  2904  0576  3EFF               	addlw	-1
  2905  0577  1D03               	skipz
  2906  0578  2D73               	goto	u1865
  2907  0579  0821               	movf	___lwdiv@divisor+1,w
  2908  057A  0223               	subwf	___lwdiv@dividend+1,w
  2909  057B  1D03               	skipz
  2910  057C  2D7F               	goto	u1875
  2911  057D  0820               	movf	___lwdiv@divisor,w
  2912  057E  0222               	subwf	___lwdiv@dividend,w
  2913  057F                     u1875:	
  2914  057F  1C03               	skipc
  2915  0580  2D88               	goto	l1861
  2916  0581  0820               	movf	___lwdiv@divisor,w
  2917  0582  02A2               	subwf	___lwdiv@dividend,f
  2918  0583  0821               	movf	___lwdiv@divisor+1,w
  2919  0584  1C03               	skipc
  2920  0585  03A3               	decf	___lwdiv@dividend+1,f
  2921  0586  02A3               	subwf	___lwdiv@dividend+1,f
  2922  0587  1426               	bsf	___lwdiv@quotient,0
  2923  0588                     l1861:	
  2924  0588  3001               	movlw	1
  2925  0589                     u1885:	
  2926  0589  1003               	clrc
  2927  058A  0CA1               	rrf	___lwdiv@divisor+1,f
  2928  058B  0CA0               	rrf	___lwdiv@divisor,f
  2929  058C  3EFF               	addlw	-1
  2930  058D  1D03               	skipz
  2931  058E  2D89               	goto	u1885
  2932  058F  3001               	movlw	1
  2933  0590  02A5               	subwf	___lwdiv@counter,f
  2934  0591  1D03               	btfss	3,2
  2935  0592  2D72               	goto	l1855
  2936  0593                     l1865:	
  2937  0593  0827               	movf	___lwdiv@quotient+1,w
  2938  0594  00A1               	movwf	?___lwdiv+1
  2939  0595  0826               	movf	___lwdiv@quotient,w
  2940  0596  00A0               	movwf	?___lwdiv
  2941  0597  0008               	return
  2942  0598                     __end_of___lwdiv:	
  2943                           
  2944                           	psect	text18
  2945  07AA                     __ptext18:	
  2946 ;; *************** function _adc_on *****************
  2947 ;; Defined at:
  2948 ;;		line 62 in file "../../KJ/Project_6/adc.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;		None
  2953 ;; Return value:  Size  Location     Type
  2954 ;;		None               void
  2955 ;; Registers used:
  2956 ;;		None
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2962 ;;      Params:         0       0       0       0       0
  2963 ;;      Locals:         0       0       0       0       0
  2964 ;;      Temps:          0       0       0       0       0
  2965 ;;      Totals:         0       0       0       0       0
  2966 ;;Total ram usage:        0 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_main
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           
  2977                           ;psect for function _adc_on
  2978  07AA                     _adc_on:	
  2979                           
  2980                           ;adc.c: 65: ADON = 1;
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _adc_on: []
  2984  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  2985  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  2986  07AC  141F               	bsf	31,0	;volatile
  2987  07AD  0008               	return
  2988  07AE                     __end_of_adc_on:	
  2989                           
  2990                           	psect	text19
  2991  0738                     __ptext19:	
  2992 ;; *************** function _adc_initialize *****************
  2993 ;; Defined at:
  2994 ;;		line 28 in file "../../KJ/Project_6/adc.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;		None               void
  3001 ;; Registers used:
  3002 ;;		None
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3008 ;;      Params:         0       0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0
  3011 ;;      Totals:         0       0       0       0       0
  3012 ;;Total ram usage:        0 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    1
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _adc_initialize
  3024  0738                     _adc_initialize:	
  3025                           
  3026                           ;adc.c: 31: ADCS1 = 1;
  3027                           
  3028                           ;incstack = 0
  3029                           ; Regs used in _adc_initialize: []
  3030  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0739  1303               	bcf	3,6	;RP1=0, select bank0
  3032  073A  179F               	bsf	31,7	;volatile
  3033                           
  3034                           ;adc.c: 32: ADCS0 = 0;
  3035  073B  131F               	bcf	31,6	;volatile
  3036                           
  3037                           ;adc.c: 35: ANS0 = 1;
  3038  073C  1683               	bsf	3,5	;RP0=1, select bank3
  3039  073D  1703               	bsf	3,6	;RP1=1, select bank3
  3040  073E  1408               	bsf	8,0	;volatile
  3041                           
  3042                           ;adc.c: 38: ADFM = 1;
  3043  073F  1683               	bsf	3,5	;RP0=1, select bank1
  3044  0740  1303               	bcf	3,6	;RP1=0, select bank1
  3045  0741  179F               	bsf	31,7	;volatile
  3046                           
  3047                           ;adc.c: 40: VCFG1 = 0;
  3048  0742  129F               	bcf	31,5	;volatile
  3049                           
  3050                           ;adc.c: 42: VCFG0 = 0;
  3051  0743  121F               	bcf	31,4	;volatile
  3052                           
  3053                           ;adc.c: 45: ADON = 0;
  3054  0744  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0745  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0746  101F               	bcf	31,0	;volatile
  3057  0747  0008               	return
  3058  0748                     __end_of_adc_initialize:	
  3059                           
  3060                           	psect	text20
  3061  0720                     __ptext20:	
  3062 ;; *************** function ___lwtoft *****************
  3063 ;; Defined at:
  3064 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  c               2    8[BANK0 ] unsigned int 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  3    8[BANK0 ] float 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, pclath, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       3       0       0       0
  3079 ;;      Locals:         0       0       0       0       0
  3080 ;;      Temps:          0       1       0       0       0
  3081 ;;      Totals:         0       4       0       0       0
  3082 ;;Total ram usage:        4 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    2
  3085 ;; This function calls:
  3086 ;;		___ftpack
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function ___lwtoft
  3094  0720                     ___lwtoft:	
  3095                           
  3096                           ;incstack = 0
  3097                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3098  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3099  0721  1303               	bcf	3,6	;RP1=0, select bank0
  3100  0722  0828               	movf	___lwtoft@c,w
  3101  0723  00A0               	movwf	___ftpack@arg
  3102  0724  0829               	movf	___lwtoft@c+1,w
  3103  0725  00A1               	movwf	___ftpack@arg+1
  3104  0726  01A2               	clrf	___ftpack@arg+2
  3105  0727  308E               	movlw	142
  3106  0728  00AB               	movwf	??___lwtoft
  3107  0729  082B               	movf	??___lwtoft,w
  3108  072A  00A3               	movwf	___ftpack@exp
  3109  072B  01A4               	clrf	___ftpack@sign
  3110  072C  120A  118A  24EC   	fcall	___ftpack
  3111  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0730  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0731  0820               	movf	?___ftpack,w
  3114  0732  00A8               	movwf	?___lwtoft
  3115  0733  0821               	movf	?___ftpack+1,w
  3116  0734  00A9               	movwf	?___lwtoft+1
  3117  0735  0822               	movf	?___ftpack+2,w
  3118  0736  00AA               	movwf	?___lwtoft+2
  3119  0737  0008               	return
  3120  0738                     __end_of___lwtoft:	
  3121                           
  3122                           	psect	text21
  3123  045E                     __ptext21:	
  3124 ;; *************** function ___fttol *****************
  3125 ;; Defined at:
  3126 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\fttol.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  f1              3   44[BANK0 ] float 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  lval            4   53[BANK0 ] unsigned long 
  3131 ;;  exp1            1   57[BANK0 ] unsigned char 
  3132 ;;  sign1           1   52[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  4   44[BANK0 ] long 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         0       4       0       0       0
  3143 ;;      Locals:         0       6       0       0       0
  3144 ;;      Temps:          0       4       0       0       0
  3145 ;;      Totals:         0      14       0       0       0
  3146 ;;Total ram usage:       14 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function ___fttol
  3158  045E                     ___fttol:	
  3159                           
  3160                           ;incstack = 0
  3161                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3162  045E  1283               	bcf	3,5	;RP0=0, select bank0
  3163  045F  1303               	bcf	3,6	;RP1=0, select bank0
  3164  0460  084C               	movf	___fttol@f1,w
  3165  0461  00D0               	movwf	??___fttol
  3166  0462  084D               	movf	___fttol@f1+1,w
  3167  0463  00D1               	movwf	??___fttol+1
  3168  0464  084E               	movf	___fttol@f1+2,w
  3169  0465  00D2               	movwf	??___fttol+2
  3170  0466  1003               	clrc
  3171  0467  0D51               	rlf	??___fttol+1,w
  3172  0468  0D52               	rlf	??___fttol+2,w
  3173  0469  00D3               	movwf	??___fttol+3
  3174  046A  0853               	movf	??___fttol+3,w
  3175  046B  00D9               	movwf	___fttol@exp1
  3176  046C  0859               	movf	___fttol@exp1,w
  3177  046D  1D03               	btfss	3,2
  3178  046E  2C78               	goto	l1617
  3179  046F  3000               	movlw	0
  3180  0470  00CF               	movwf	?___fttol+3
  3181  0471  3000               	movlw	0
  3182  0472  00CE               	movwf	?___fttol+2
  3183  0473  3000               	movlw	0
  3184  0474  00CD               	movwf	?___fttol+1
  3185  0475  3000               	movlw	0
  3186  0476  00CC               	movwf	?___fttol
  3187  0477  0008               	return
  3188  0478                     l1617:	
  3189  0478  084C               	movf	___fttol@f1,w
  3190  0479  00D0               	movwf	??___fttol
  3191  047A  084D               	movf	___fttol@f1+1,w
  3192  047B  00D1               	movwf	??___fttol+1
  3193  047C  084E               	movf	___fttol@f1+2,w
  3194  047D  00D2               	movwf	??___fttol+2
  3195  047E  3017               	movlw	23
  3196  047F                     u1535:	
  3197  047F  1003               	clrc
  3198  0480  0CD2               	rrf	??___fttol+2,f
  3199  0481  0CD1               	rrf	??___fttol+1,f
  3200  0482  0CD0               	rrf	??___fttol,f
  3201  0483  3EFF               	addlw	-1
  3202  0484  1D03               	skipz
  3203  0485  2C7F               	goto	u1535
  3204  0486  0850               	movf	??___fttol,w
  3205  0487  00D3               	movwf	??___fttol+3
  3206  0488  0853               	movf	??___fttol+3,w
  3207  0489  00D4               	movwf	___fttol@sign1
  3208  048A  17CD               	bsf	___fttol@f1+1,7
  3209  048B  30FF               	movlw	255
  3210  048C  05CC               	andwf	___fttol@f1,f
  3211  048D  30FF               	movlw	255
  3212  048E  05CD               	andwf	___fttol@f1+1,f
  3213  048F  3000               	movlw	0
  3214  0490  05CE               	andwf	___fttol@f1+2,f
  3215  0491  084C               	movf	___fttol@f1,w
  3216  0492  00D5               	movwf	___fttol@lval
  3217  0493  084D               	movf	___fttol@f1+1,w
  3218  0494  00D6               	movwf	___fttol@lval+1
  3219  0495  084E               	movf	___fttol@f1+2,w
  3220  0496  00D7               	movwf	___fttol@lval+2
  3221  0497  01D8               	clrf	___fttol@lval+3
  3222  0498  308E               	movlw	142
  3223  0499  02D9               	subwf	___fttol@exp1,f
  3224  049A  1FD9               	btfss	___fttol@exp1,7
  3225  049B  2CBA               	goto	l1637
  3226  049C  0859               	movf	___fttol@exp1,w
  3227  049D  3A80               	xorlw	128
  3228  049E  3E8F               	addlw	143
  3229  049F  1803               	skipnc
  3230  04A0  2CAA               	goto	l1635
  3231  04A1  3000               	movlw	0
  3232  04A2  00CF               	movwf	?___fttol+3
  3233  04A3  3000               	movlw	0
  3234  04A4  00CE               	movwf	?___fttol+2
  3235  04A5  3000               	movlw	0
  3236  04A6  00CD               	movwf	?___fttol+1
  3237  04A7  3000               	movlw	0
  3238  04A8  00CC               	movwf	?___fttol
  3239  04A9  0008               	return
  3240  04AA                     l1635:	
  3241  04AA  3001               	movlw	1
  3242  04AB                     u1565:	
  3243  04AB  1003               	clrc
  3244  04AC  0CD8               	rrf	___fttol@lval+3,f
  3245  04AD  0CD7               	rrf	___fttol@lval+2,f
  3246  04AE  0CD6               	rrf	___fttol@lval+1,f
  3247  04AF  0CD5               	rrf	___fttol@lval,f
  3248  04B0  3EFF               	addlw	-1
  3249  04B1  1D03               	skipz
  3250  04B2  2CAB               	goto	u1565
  3251  04B3  3001               	movlw	1
  3252  04B4  00D0               	movwf	??___fttol
  3253  04B5  0850               	movf	??___fttol,w
  3254  04B6  07D9               	addwf	___fttol@exp1,f
  3255  04B7  1903               	btfsc	3,2
  3256  04B8  2CD5               	goto	l1645
  3257  04B9  2CAA               	goto	l1635
  3258  04BA                     l1637:	
  3259  04BA  3018               	movlw	24
  3260  04BB  0259               	subwf	___fttol@exp1,w
  3261  04BC  1C03               	skipc
  3262  04BD  2CD2               	goto	l639
  3263  04BE  3000               	movlw	0
  3264  04BF  00CF               	movwf	?___fttol+3
  3265  04C0  3000               	movlw	0
  3266  04C1  00CE               	movwf	?___fttol+2
  3267  04C2  3000               	movlw	0
  3268  04C3  00CD               	movwf	?___fttol+1
  3269  04C4  3000               	movlw	0
  3270  04C5  00CC               	movwf	?___fttol
  3271  04C6  0008               	return
  3272  04C7                     l1643:	
  3273  04C7  3001               	movlw	1
  3274  04C8  00D0               	movwf	??___fttol
  3275  04C9                     u1595:	
  3276  04C9  1003               	clrc
  3277  04CA  0DD5               	rlf	___fttol@lval,f
  3278  04CB  0DD6               	rlf	___fttol@lval+1,f
  3279  04CC  0DD7               	rlf	___fttol@lval+2,f
  3280  04CD  0DD8               	rlf	___fttol@lval+3,f
  3281  04CE  0BD0               	decfsz	??___fttol,f
  3282  04CF  2CC9               	goto	u1595
  3283  04D0  3001               	movlw	1
  3284  04D1  02D9               	subwf	___fttol@exp1,f
  3285  04D2                     l639:	
  3286  04D2  0859               	movf	___fttol@exp1,w
  3287  04D3  1D03               	btfss	3,2
  3288  04D4  2CC7               	goto	l1643
  3289  04D5                     l1645:	
  3290  04D5  0854               	movf	___fttol@sign1,w
  3291  04D6  1903               	btfsc	3,2
  3292  04D7  2CE3               	goto	l1649
  3293  04D8  09D5               	comf	___fttol@lval,f
  3294  04D9  09D6               	comf	___fttol@lval+1,f
  3295  04DA  09D7               	comf	___fttol@lval+2,f
  3296  04DB  09D8               	comf	___fttol@lval+3,f
  3297  04DC  0AD5               	incf	___fttol@lval,f
  3298  04DD  1903               	skipnz
  3299  04DE  0AD6               	incf	___fttol@lval+1,f
  3300  04DF  1903               	skipnz
  3301  04E0  0AD7               	incf	___fttol@lval+2,f
  3302  04E1  1903               	skipnz
  3303  04E2  0AD8               	incf	___fttol@lval+3,f
  3304  04E3                     l1649:	
  3305  04E3  0858               	movf	___fttol@lval+3,w
  3306  04E4  00CF               	movwf	?___fttol+3
  3307  04E5  0857               	movf	___fttol@lval+2,w
  3308  04E6  00CE               	movwf	?___fttol+2
  3309  04E7  0856               	movf	___fttol@lval+1,w
  3310  04E8  00CD               	movwf	?___fttol+1
  3311  04E9  0855               	movf	___fttol@lval,w
  3312  04EA  00CC               	movwf	?___fttol
  3313  04EB  0008               	return
  3314  04EC                     __end_of___fttol:	
  3315                           
  3316                           	psect	text22
  3317  0205                     __ptext22:	
  3318 ;; *************** function ___ftmul *****************
  3319 ;; Defined at:
  3320 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  f1              3   12[BANK0 ] float 
  3323 ;;  f2              3   15[BANK0 ] float 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  3326 ;;  sign            1   27[BANK0 ] unsigned char 
  3327 ;;  cntr            1   26[BANK0 ] unsigned char 
  3328 ;;  exp             1   22[BANK0 ] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  3   12[BANK0 ] float 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       6       0       0       0
  3339 ;;      Locals:         0       6       0       0       0
  3340 ;;      Temps:          0       4       0       0       0
  3341 ;;      Totals:         0      16       0       0       0
  3342 ;;Total ram usage:       16 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    2
  3345 ;; This function calls:
  3346 ;;		___ftpack
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function ___ftmul
  3354  0205                     ___ftmul:	
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3358  0205  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0206  1303               	bcf	3,6	;RP1=0, select bank0
  3360  0207  082C               	movf	___ftmul@f1,w
  3361  0208  00B2               	movwf	??___ftmul
  3362  0209  082D               	movf	___ftmul@f1+1,w
  3363  020A  00B3               	movwf	??___ftmul+1
  3364  020B  082E               	movf	___ftmul@f1+2,w
  3365  020C  00B4               	movwf	??___ftmul+2
  3366  020D  1003               	clrc
  3367  020E  0D33               	rlf	??___ftmul+1,w
  3368  020F  0D34               	rlf	??___ftmul+2,w
  3369  0210  00B5               	movwf	??___ftmul+3
  3370  0211  0835               	movf	??___ftmul+3,w
  3371  0212  00B6               	movwf	___ftmul@exp
  3372  0213  0836               	movf	___ftmul@exp,w
  3373  0214  1D03               	btfss	3,2
  3374  0215  2A1D               	goto	l1567
  3375  0216  3000               	movlw	0
  3376  0217  00AC               	movwf	?___ftmul
  3377  0218  3000               	movlw	0
  3378  0219  00AD               	movwf	?___ftmul+1
  3379  021A  3000               	movlw	0
  3380  021B  00AE               	movwf	?___ftmul+2
  3381  021C  0008               	return
  3382  021D                     l1567:	
  3383  021D  082F               	movf	___ftmul@f2,w
  3384  021E  00B2               	movwf	??___ftmul
  3385  021F  0830               	movf	___ftmul@f2+1,w
  3386  0220  00B3               	movwf	??___ftmul+1
  3387  0221  0831               	movf	___ftmul@f2+2,w
  3388  0222  00B4               	movwf	??___ftmul+2
  3389  0223  1003               	clrc
  3390  0224  0D33               	rlf	??___ftmul+1,w
  3391  0225  0D34               	rlf	??___ftmul+2,w
  3392  0226  00B5               	movwf	??___ftmul+3
  3393  0227  0835               	movf	??___ftmul+3,w
  3394  0228  00BB               	movwf	___ftmul@sign
  3395  0229  083B               	movf	___ftmul@sign,w
  3396  022A  1D03               	btfss	3,2
  3397  022B  2A33               	goto	l1573
  3398  022C  3000               	movlw	0
  3399  022D  00AC               	movwf	?___ftmul
  3400  022E  3000               	movlw	0
  3401  022F  00AD               	movwf	?___ftmul+1
  3402  0230  3000               	movlw	0
  3403  0231  00AE               	movwf	?___ftmul+2
  3404  0232  0008               	return
  3405  0233                     l1573:	
  3406  0233  083B               	movf	___ftmul@sign,w
  3407  0234  3E7B               	addlw	123
  3408  0235  00B2               	movwf	??___ftmul
  3409  0236  0832               	movf	??___ftmul,w
  3410  0237  07B6               	addwf	___ftmul@exp,f
  3411  0238  082C               	movf	___ftmul@f1,w
  3412  0239  00B2               	movwf	??___ftmul
  3413  023A  082D               	movf	___ftmul@f1+1,w
  3414  023B  00B3               	movwf	??___ftmul+1
  3415  023C  082E               	movf	___ftmul@f1+2,w
  3416  023D  00B4               	movwf	??___ftmul+2
  3417  023E  3010               	movlw	16
  3418  023F                     u1405:	
  3419  023F  1003               	clrc
  3420  0240  0CB4               	rrf	??___ftmul+2,f
  3421  0241  0CB3               	rrf	??___ftmul+1,f
  3422  0242  0CB2               	rrf	??___ftmul,f
  3423  0243  3EFF               	addlw	-1
  3424  0244  1D03               	skipz
  3425  0245  2A3F               	goto	u1405
  3426  0246  0832               	movf	??___ftmul,w
  3427  0247  00B5               	movwf	??___ftmul+3
  3428  0248  0835               	movf	??___ftmul+3,w
  3429  0249  00BB               	movwf	___ftmul@sign
  3430  024A  082F               	movf	___ftmul@f2,w
  3431  024B  00B2               	movwf	??___ftmul
  3432  024C  0830               	movf	___ftmul@f2+1,w
  3433  024D  00B3               	movwf	??___ftmul+1
  3434  024E  0831               	movf	___ftmul@f2+2,w
  3435  024F  00B4               	movwf	??___ftmul+2
  3436  0250  3010               	movlw	16
  3437  0251                     u1415:	
  3438  0251  1003               	clrc
  3439  0252  0CB4               	rrf	??___ftmul+2,f
  3440  0253  0CB3               	rrf	??___ftmul+1,f
  3441  0254  0CB2               	rrf	??___ftmul,f
  3442  0255  3EFF               	addlw	-1
  3443  0256  1D03               	skipz
  3444  0257  2A51               	goto	u1415
  3445  0258  0832               	movf	??___ftmul,w
  3446  0259  00B5               	movwf	??___ftmul+3
  3447  025A  0835               	movf	??___ftmul+3,w
  3448  025B  06BB               	xorwf	___ftmul@sign,f
  3449  025C  3080               	movlw	128
  3450  025D  00B2               	movwf	??___ftmul
  3451  025E  0832               	movf	??___ftmul,w
  3452  025F  05BB               	andwf	___ftmul@sign,f
  3453  0260  17AD               	bsf	___ftmul@f1+1,7
  3454  0261  17B0               	bsf	___ftmul@f2+1,7
  3455  0262  30FF               	movlw	255
  3456  0263  05AF               	andwf	___ftmul@f2,f
  3457  0264  30FF               	movlw	255
  3458  0265  05B0               	andwf	___ftmul@f2+1,f
  3459  0266  3000               	movlw	0
  3460  0267  05B1               	andwf	___ftmul@f2+2,f
  3461  0268  3000               	movlw	0
  3462  0269  00B7               	movwf	___ftmul@f3_as_product
  3463  026A  3000               	movlw	0
  3464  026B  00B8               	movwf	___ftmul@f3_as_product+1
  3465  026C  3000               	movlw	0
  3466  026D  00B9               	movwf	___ftmul@f3_as_product+2
  3467  026E  3007               	movlw	7
  3468  026F  00B2               	movwf	??___ftmul
  3469  0270  0832               	movf	??___ftmul,w
  3470  0271  00BA               	movwf	___ftmul@cntr
  3471  0272                     l1585:	
  3472  0272  1C2C               	btfss	___ftmul@f1,0
  3473  0273  2A82               	goto	l1589
  3474  0274  082F               	movf	___ftmul@f2,w
  3475  0275  07B7               	addwf	___ftmul@f3_as_product,f
  3476  0276  0830               	movf	___ftmul@f2+1,w
  3477  0277  1103               	clrz
  3478  0278  1803               	skipnc
  3479  0279  0A30               	incf	___ftmul@f2+1,w
  3480  027A  1D03               	btfss	3,2
  3481  027B  07B8               	addwf	___ftmul@f3_as_product+1,f
  3482  027C  0831               	movf	___ftmul@f2+2,w
  3483  027D  1103               	clrz
  3484  027E  1803               	skipnc
  3485  027F  0A31               	incf	___ftmul@f2+2,w
  3486  0280  1D03               	btfss	3,2
  3487  0281  07B9               	addwf	___ftmul@f3_as_product+2,f
  3488  0282                     l1589:	
  3489  0282  3001               	movlw	1
  3490  0283                     u1445:	
  3491  0283  1003               	clrc
  3492  0284  0CAE               	rrf	___ftmul@f1+2,f
  3493  0285  0CAD               	rrf	___ftmul@f1+1,f
  3494  0286  0CAC               	rrf	___ftmul@f1,f
  3495  0287  3EFF               	addlw	-1
  3496  0288  1D03               	skipz
  3497  0289  2A83               	goto	u1445
  3498  028A  3001               	movlw	1
  3499  028B                     u1455:	
  3500  028B  1003               	clrc
  3501  028C  0DAF               	rlf	___ftmul@f2,f
  3502  028D  0DB0               	rlf	___ftmul@f2+1,f
  3503  028E  0DB1               	rlf	___ftmul@f2+2,f
  3504  028F  3EFF               	addlw	-1
  3505  0290  1D03               	skipz
  3506  0291  2A8B               	goto	u1455
  3507  0292  3001               	movlw	1
  3508  0293  02BA               	subwf	___ftmul@cntr,f
  3509  0294  1D03               	btfss	3,2
  3510  0295  2A72               	goto	l1585
  3511  0296  3009               	movlw	9
  3512  0297  00B2               	movwf	??___ftmul
  3513  0298  0832               	movf	??___ftmul,w
  3514  0299  00BA               	movwf	___ftmul@cntr
  3515  029A                     l1597:	
  3516  029A  1C2C               	btfss	___ftmul@f1,0
  3517  029B  2AAA               	goto	l1601
  3518  029C  082F               	movf	___ftmul@f2,w
  3519  029D  07B7               	addwf	___ftmul@f3_as_product,f
  3520  029E  0830               	movf	___ftmul@f2+1,w
  3521  029F  1103               	clrz
  3522  02A0  1803               	skipnc
  3523  02A1  0A30               	incf	___ftmul@f2+1,w
  3524  02A2  1D03               	btfss	3,2
  3525  02A3  07B8               	addwf	___ftmul@f3_as_product+1,f
  3526  02A4  0831               	movf	___ftmul@f2+2,w
  3527  02A5  1103               	clrz
  3528  02A6  1803               	skipnc
  3529  02A7  0A31               	incf	___ftmul@f2+2,w
  3530  02A8  1D03               	btfss	3,2
  3531  02A9  07B9               	addwf	___ftmul@f3_as_product+2,f
  3532  02AA                     l1601:	
  3533  02AA  3001               	movlw	1
  3534  02AB                     u1495:	
  3535  02AB  1003               	clrc
  3536  02AC  0CAE               	rrf	___ftmul@f1+2,f
  3537  02AD  0CAD               	rrf	___ftmul@f1+1,f
  3538  02AE  0CAC               	rrf	___ftmul@f1,f
  3539  02AF  3EFF               	addlw	-1
  3540  02B0  1D03               	skipz
  3541  02B1  2AAB               	goto	u1495
  3542  02B2  3001               	movlw	1
  3543  02B3                     u1505:	
  3544  02B3  1003               	clrc
  3545  02B4  0CB9               	rrf	___ftmul@f3_as_product+2,f
  3546  02B5  0CB8               	rrf	___ftmul@f3_as_product+1,f
  3547  02B6  0CB7               	rrf	___ftmul@f3_as_product,f
  3548  02B7  3EFF               	addlw	-1
  3549  02B8  1D03               	skipz
  3550  02B9  2AB3               	goto	u1505
  3551  02BA  3001               	movlw	1
  3552  02BB  02BA               	subwf	___ftmul@cntr,f
  3553  02BC  1D03               	btfss	3,2
  3554  02BD  2A9A               	goto	l1597
  3555  02BE  0837               	movf	___ftmul@f3_as_product,w
  3556  02BF  00A0               	movwf	___ftpack@arg
  3557  02C0  0838               	movf	___ftmul@f3_as_product+1,w
  3558  02C1  00A1               	movwf	___ftpack@arg+1
  3559  02C2  0839               	movf	___ftmul@f3_as_product+2,w
  3560  02C3  00A2               	movwf	___ftpack@arg+2
  3561  02C4  0836               	movf	___ftmul@exp,w
  3562  02C5  00B2               	movwf	??___ftmul
  3563  02C6  0832               	movf	??___ftmul,w
  3564  02C7  00A3               	movwf	___ftpack@exp
  3565  02C8  083B               	movf	___ftmul@sign,w
  3566  02C9  00B3               	movwf	??___ftmul+1
  3567  02CA  0833               	movf	??___ftmul+1,w
  3568  02CB  00A4               	movwf	___ftpack@sign
  3569  02CC  120A  118A  24EC   	fcall	___ftpack
  3570  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3571  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  3572  02D1  0820               	movf	?___ftpack,w
  3573  02D2  00AC               	movwf	?___ftmul
  3574  02D3  0821               	movf	?___ftpack+1,w
  3575  02D4  00AD               	movwf	?___ftmul+1
  3576  02D5  0822               	movf	?___ftpack+2,w
  3577  02D6  00AE               	movwf	?___ftmul+2
  3578  02D7  0008               	return
  3579  02D8                     __end_of___ftmul:	
  3580                           
  3581                           	psect	text23
  3582  03A6                     __ptext23:	
  3583 ;; *************** function ___ftdiv *****************
  3584 ;; Defined at:
  3585 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  f2              3   28[BANK0 ] float 
  3588 ;;  f1              3   31[BANK0 ] float 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  f3              3   39[BANK0 ] float 
  3591 ;;  sign            1   43[BANK0 ] unsigned char 
  3592 ;;  exp             1   42[BANK0 ] unsigned char 
  3593 ;;  cntr            1   38[BANK0 ] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  3   28[BANK0 ] float 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3603 ;;      Params:         0       6       0       0       0
  3604 ;;      Locals:         0       6       0       0       0
  3605 ;;      Temps:          0       4       0       0       0
  3606 ;;      Totals:         0      16       0       0       0
  3607 ;;Total ram usage:       16 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    2
  3610 ;; This function calls:
  3611 ;;		___ftpack
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           
  3618                           ;psect for function ___ftdiv
  3619  03A6                     ___ftdiv:	
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3623  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3624  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  3625  03A8  083F               	movf	___ftdiv@f1,w
  3626  03A9  00C2               	movwf	??___ftdiv
  3627  03AA  0840               	movf	___ftdiv@f1+1,w
  3628  03AB  00C3               	movwf	??___ftdiv+1
  3629  03AC  0841               	movf	___ftdiv@f1+2,w
  3630  03AD  00C4               	movwf	??___ftdiv+2
  3631  03AE  1003               	clrc
  3632  03AF  0D43               	rlf	??___ftdiv+1,w
  3633  03B0  0D44               	rlf	??___ftdiv+2,w
  3634  03B1  00C5               	movwf	??___ftdiv+3
  3635  03B2  0845               	movf	??___ftdiv+3,w
  3636  03B3  00CA               	movwf	___ftdiv@exp
  3637  03B4  084A               	movf	___ftdiv@exp,w
  3638  03B5  1D03               	btfss	3,2
  3639  03B6  2BBE               	goto	l1525
  3640  03B7  3000               	movlw	0
  3641  03B8  00BC               	movwf	?___ftdiv
  3642  03B9  3000               	movlw	0
  3643  03BA  00BD               	movwf	?___ftdiv+1
  3644  03BB  3000               	movlw	0
  3645  03BC  00BE               	movwf	?___ftdiv+2
  3646  03BD  0008               	return
  3647  03BE                     l1525:	
  3648  03BE  083C               	movf	___ftdiv@f2,w
  3649  03BF  00C2               	movwf	??___ftdiv
  3650  03C0  083D               	movf	___ftdiv@f2+1,w
  3651  03C1  00C3               	movwf	??___ftdiv+1
  3652  03C2  083E               	movf	___ftdiv@f2+2,w
  3653  03C3  00C4               	movwf	??___ftdiv+2
  3654  03C4  1003               	clrc
  3655  03C5  0D43               	rlf	??___ftdiv+1,w
  3656  03C6  0D44               	rlf	??___ftdiv+2,w
  3657  03C7  00C5               	movwf	??___ftdiv+3
  3658  03C8  0845               	movf	??___ftdiv+3,w
  3659  03C9  00CB               	movwf	___ftdiv@sign
  3660  03CA  084B               	movf	___ftdiv@sign,w
  3661  03CB  1D03               	btfss	3,2
  3662  03CC  2BD4               	goto	l1531
  3663  03CD  3000               	movlw	0
  3664  03CE  00BC               	movwf	?___ftdiv
  3665  03CF  3000               	movlw	0
  3666  03D0  00BD               	movwf	?___ftdiv+1
  3667  03D1  3000               	movlw	0
  3668  03D2  00BE               	movwf	?___ftdiv+2
  3669  03D3  0008               	return
  3670  03D4                     l1531:	
  3671  03D4  3000               	movlw	0
  3672  03D5  00C7               	movwf	___ftdiv@f3
  3673  03D6  3000               	movlw	0
  3674  03D7  00C8               	movwf	___ftdiv@f3+1
  3675  03D8  3000               	movlw	0
  3676  03D9  00C9               	movwf	___ftdiv@f3+2
  3677  03DA  3089               	movlw	137
  3678  03DB  074B               	addwf	___ftdiv@sign,w
  3679  03DC  00C2               	movwf	??___ftdiv
  3680  03DD  0842               	movf	??___ftdiv,w
  3681  03DE  02CA               	subwf	___ftdiv@exp,f
  3682  03DF  083F               	movf	___ftdiv@f1,w
  3683  03E0  00C2               	movwf	??___ftdiv
  3684  03E1  0840               	movf	___ftdiv@f1+1,w
  3685  03E2  00C3               	movwf	??___ftdiv+1
  3686  03E3  0841               	movf	___ftdiv@f1+2,w
  3687  03E4  00C4               	movwf	??___ftdiv+2
  3688  03E5  3010               	movlw	16
  3689  03E6                     u1325:	
  3690  03E6  1003               	clrc
  3691  03E7  0CC4               	rrf	??___ftdiv+2,f
  3692  03E8  0CC3               	rrf	??___ftdiv+1,f
  3693  03E9  0CC2               	rrf	??___ftdiv,f
  3694  03EA  3EFF               	addlw	-1
  3695  03EB  1D03               	skipz
  3696  03EC  2BE6               	goto	u1325
  3697  03ED  0842               	movf	??___ftdiv,w
  3698  03EE  00C5               	movwf	??___ftdiv+3
  3699  03EF  0845               	movf	??___ftdiv+3,w
  3700  03F0  00CB               	movwf	___ftdiv@sign
  3701  03F1  083C               	movf	___ftdiv@f2,w
  3702  03F2  00C2               	movwf	??___ftdiv
  3703  03F3  083D               	movf	___ftdiv@f2+1,w
  3704  03F4  00C3               	movwf	??___ftdiv+1
  3705  03F5  083E               	movf	___ftdiv@f2+2,w
  3706  03F6  00C4               	movwf	??___ftdiv+2
  3707  03F7  3010               	movlw	16
  3708  03F8                     u1335:	
  3709  03F8  1003               	clrc
  3710  03F9  0CC4               	rrf	??___ftdiv+2,f
  3711  03FA  0CC3               	rrf	??___ftdiv+1,f
  3712  03FB  0CC2               	rrf	??___ftdiv,f
  3713  03FC  3EFF               	addlw	-1
  3714  03FD  1D03               	skipz
  3715  03FE  2BF8               	goto	u1335
  3716  03FF  0842               	movf	??___ftdiv,w
  3717  0400  00C5               	movwf	??___ftdiv+3
  3718  0401  0845               	movf	??___ftdiv+3,w
  3719  0402  06CB               	xorwf	___ftdiv@sign,f
  3720  0403  3080               	movlw	128
  3721  0404  00C2               	movwf	??___ftdiv
  3722  0405  0842               	movf	??___ftdiv,w
  3723  0406  05CB               	andwf	___ftdiv@sign,f
  3724  0407  17C0               	bsf	___ftdiv@f1+1,7
  3725  0408  30FF               	movlw	255
  3726  0409  05BF               	andwf	___ftdiv@f1,f
  3727  040A  30FF               	movlw	255
  3728  040B  05C0               	andwf	___ftdiv@f1+1,f
  3729  040C  3000               	movlw	0
  3730  040D  05C1               	andwf	___ftdiv@f1+2,f
  3731  040E  17BD               	bsf	___ftdiv@f2+1,7
  3732  040F  30FF               	movlw	255
  3733  0410  05BC               	andwf	___ftdiv@f2,f
  3734  0411  30FF               	movlw	255
  3735  0412  05BD               	andwf	___ftdiv@f2+1,f
  3736  0413  3000               	movlw	0
  3737  0414  05BE               	andwf	___ftdiv@f2+2,f
  3738  0415  3018               	movlw	24
  3739  0416  00C2               	movwf	??___ftdiv
  3740  0417  0842               	movf	??___ftdiv,w
  3741  0418  00C6               	movwf	___ftdiv@cntr
  3742  0419                     l1545:	
  3743  0419  3001               	movlw	1
  3744  041A                     u1345:	
  3745  041A  1003               	clrc
  3746  041B  0DC7               	rlf	___ftdiv@f3,f
  3747  041C  0DC8               	rlf	___ftdiv@f3+1,f
  3748  041D  0DC9               	rlf	___ftdiv@f3+2,f
  3749  041E  3EFF               	addlw	-1
  3750  041F  1D03               	skipz
  3751  0420  2C1A               	goto	u1345
  3752  0421  083E               	movf	___ftdiv@f2+2,w
  3753  0422  0241               	subwf	___ftdiv@f1+2,w
  3754  0423  1D03               	skipz
  3755  0424  2C2B               	goto	u1355
  3756  0425  083D               	movf	___ftdiv@f2+1,w
  3757  0426  0240               	subwf	___ftdiv@f1+1,w
  3758  0427  1D03               	skipz
  3759  0428  2C2B               	goto	u1355
  3760  0429  083C               	movf	___ftdiv@f2,w
  3761  042A  023F               	subwf	___ftdiv@f1,w
  3762  042B                     u1355:	
  3763  042B  1C03               	skipc
  3764  042C  2C38               	goto	l1553
  3765  042D  083C               	movf	___ftdiv@f2,w
  3766  042E  02BF               	subwf	___ftdiv@f1,f
  3767  042F  083D               	movf	___ftdiv@f2+1,w
  3768  0430  1C03               	skipc
  3769  0431  0F3D               	incfsz	___ftdiv@f2+1,w
  3770  0432  02C0               	subwf	___ftdiv@f1+1,f
  3771  0433  083E               	movf	___ftdiv@f2+2,w
  3772  0434  1C03               	skipc
  3773  0435  0A3E               	incf	___ftdiv@f2+2,w
  3774  0436  02C1               	subwf	___ftdiv@f1+2,f
  3775  0437  1447               	bsf	___ftdiv@f3,0
  3776  0438                     l1553:	
  3777  0438  3001               	movlw	1
  3778  0439                     u1365:	
  3779  0439  1003               	clrc
  3780  043A  0DBF               	rlf	___ftdiv@f1,f
  3781  043B  0DC0               	rlf	___ftdiv@f1+1,f
  3782  043C  0DC1               	rlf	___ftdiv@f1+2,f
  3783  043D  3EFF               	addlw	-1
  3784  043E  1D03               	skipz
  3785  043F  2C39               	goto	u1365
  3786  0440  3001               	movlw	1
  3787  0441  02C6               	subwf	___ftdiv@cntr,f
  3788  0442  1D03               	btfss	3,2
  3789  0443  2C19               	goto	l1545
  3790  0444  0847               	movf	___ftdiv@f3,w
  3791  0445  00A0               	movwf	___ftpack@arg
  3792  0446  0848               	movf	___ftdiv@f3+1,w
  3793  0447  00A1               	movwf	___ftpack@arg+1
  3794  0448  0849               	movf	___ftdiv@f3+2,w
  3795  0449  00A2               	movwf	___ftpack@arg+2
  3796  044A  084A               	movf	___ftdiv@exp,w
  3797  044B  00C2               	movwf	??___ftdiv
  3798  044C  0842               	movf	??___ftdiv,w
  3799  044D  00A3               	movwf	___ftpack@exp
  3800  044E  084B               	movf	___ftdiv@sign,w
  3801  044F  00C3               	movwf	??___ftdiv+1
  3802  0450  0843               	movf	??___ftdiv+1,w
  3803  0451  00A4               	movwf	___ftpack@sign
  3804  0452  120A  118A  24EC   	fcall	___ftpack
  3805  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3807  0457  0820               	movf	?___ftpack,w
  3808  0458  00BC               	movwf	?___ftdiv
  3809  0459  0821               	movf	?___ftpack+1,w
  3810  045A  00BD               	movwf	?___ftdiv+1
  3811  045B  0822               	movf	?___ftpack+2,w
  3812  045C  00BE               	movwf	?___ftdiv+2
  3813  045D  0008               	return
  3814  045E                     __end_of___ftdiv:	
  3815                           
  3816                           	psect	text24
  3817  04EC                     __ptext24:	
  3818 ;; *************** function ___ftpack *****************
  3819 ;; Defined at:
  3820 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\float.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  arg             3    0[BANK0 ] unsigned um
  3823 ;;  exp             1    3[BANK0 ] unsigned char 
  3824 ;;  sign            1    4[BANK0 ] unsigned char 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  3    0[BANK0 ] float 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3836 ;;      Params:         0       5       0       0       0
  3837 ;;      Locals:         0       0       0       0       0
  3838 ;;      Temps:          0       3       0       0       0
  3839 ;;      Totals:         0       8       0       0       0
  3840 ;;Total ram usage:        8 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    1
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		___ftdiv
  3847 ;;		___ftmul
  3848 ;;		___lwtoft
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           
  3853                           ;psect for function ___ftpack
  3854  04EC                     ___ftpack:	
  3855                           
  3856                           ;incstack = 0
  3857                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3858  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3859  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3860  04EE  0823               	movf	___ftpack@exp,w
  3861  04EF  1903               	btfsc	3,2
  3862  04F0  2CF6               	goto	l1325
  3863  04F1  0822               	movf	___ftpack@arg+2,w
  3864  04F2  0421               	iorwf	___ftpack@arg+1,w
  3865  04F3  0420               	iorwf	___ftpack@arg,w
  3866  04F4  1D03               	skipz
  3867  04F5  2D09               	goto	l1331
  3868  04F6                     l1325:	
  3869  04F6  3000               	movlw	0
  3870  04F7  00A0               	movwf	?___ftpack
  3871  04F8  3000               	movlw	0
  3872  04F9  00A1               	movwf	?___ftpack+1
  3873  04FA  3000               	movlw	0
  3874  04FB  00A2               	movwf	?___ftpack+2
  3875  04FC  0008               	return
  3876  04FD                     l1329:	
  3877  04FD  3001               	movlw	1
  3878  04FE  00A5               	movwf	??___ftpack
  3879  04FF  0825               	movf	??___ftpack,w
  3880  0500  07A3               	addwf	___ftpack@exp,f
  3881  0501  3001               	movlw	1
  3882  0502                     u975:	
  3883  0502  1003               	clrc
  3884  0503  0CA2               	rrf	___ftpack@arg+2,f
  3885  0504  0CA1               	rrf	___ftpack@arg+1,f
  3886  0505  0CA0               	rrf	___ftpack@arg,f
  3887  0506  3EFF               	addlw	-1
  3888  0507  1D03               	skipz
  3889  0508  2D02               	goto	u975
  3890  0509                     l1331:	
  3891  0509  30FE               	movlw	254
  3892  050A  0522               	andwf	___ftpack@arg+2,w
  3893  050B  1903               	btfsc	3,2
  3894  050C  2D24               	goto	l548
  3895  050D  2CFD               	goto	l1329
  3896  050E                     l1333:	
  3897  050E  3001               	movlw	1
  3898  050F  00A5               	movwf	??___ftpack
  3899  0510  0825               	movf	??___ftpack,w
  3900  0511  07A3               	addwf	___ftpack@exp,f
  3901  0512  3001               	movlw	1
  3902  0513  07A0               	addwf	___ftpack@arg,f
  3903  0514  3000               	movlw	0
  3904  0515  1803               	skipnc
  3905  0516  3001               	movlw	1
  3906  0517  07A1               	addwf	___ftpack@arg+1,f
  3907  0518  3000               	movlw	0
  3908  0519  1803               	skipnc
  3909  051A  3001               	movlw	1
  3910  051B  07A2               	addwf	___ftpack@arg+2,f
  3911  051C  3001               	movlw	1
  3912  051D                     u995:	
  3913  051D  1003               	clrc
  3914  051E  0CA2               	rrf	___ftpack@arg+2,f
  3915  051F  0CA1               	rrf	___ftpack@arg+1,f
  3916  0520  0CA0               	rrf	___ftpack@arg,f
  3917  0521  3EFF               	addlw	-1
  3918  0522  1D03               	skipz
  3919  0523  2D1D               	goto	u995
  3920  0524                     l548:	
  3921  0524  30FF               	movlw	255
  3922  0525  0522               	andwf	___ftpack@arg+2,w
  3923  0526  1903               	btfsc	3,2
  3924  0527  2D37               	goto	l1341
  3925  0528  2D0E               	goto	l1333
  3926  0529                     l1343:	
  3927  0529  3002               	movlw	2
  3928  052A  0223               	subwf	___ftpack@exp,w
  3929  052B  1C03               	btfss	3,0
  3930  052C  2D39               	goto	l555
  3931  052D  3001               	movlw	1
  3932  052E  02A3               	subwf	___ftpack@exp,f
  3933  052F  3001               	movlw	1
  3934  0530                     u1015:	
  3935  0530  1003               	clrc
  3936  0531  0DA0               	rlf	___ftpack@arg,f
  3937  0532  0DA1               	rlf	___ftpack@arg+1,f
  3938  0533  0DA2               	rlf	___ftpack@arg+2,f
  3939  0534  3EFF               	addlw	-1
  3940  0535  1D03               	skipz
  3941  0536  2D30               	goto	u1015
  3942  0537                     l1341:	
  3943  0537  1FA1               	btfss	___ftpack@arg+1,7
  3944  0538  2D29               	goto	l1343
  3945  0539                     l555:	
  3946  0539  1823               	btfsc	___ftpack@exp,0
  3947  053A  2D41               	goto	l556
  3948  053B  30FF               	movlw	255
  3949  053C  05A0               	andwf	___ftpack@arg,f
  3950  053D  307F               	movlw	127
  3951  053E  05A1               	andwf	___ftpack@arg+1,f
  3952  053F  30FF               	movlw	255
  3953  0540  05A2               	andwf	___ftpack@arg+2,f
  3954  0541                     l556:	
  3955  0541  1003               	clrc
  3956  0542  0CA3               	rrf	___ftpack@exp,f
  3957  0543  0823               	movf	___ftpack@exp,w
  3958  0544  00A5               	movwf	??___ftpack
  3959  0545  01A6               	clrf	??___ftpack+1
  3960  0546  01A7               	clrf	??___ftpack+2
  3961  0547  3010               	movlw	16
  3962  0548                     u1055:	
  3963  0548  1003               	clrc
  3964  0549  0DA5               	rlf	??___ftpack,f
  3965  054A  0DA6               	rlf	??___ftpack+1,f
  3966  054B  0DA7               	rlf	??___ftpack+2,f
  3967  054C  3EFF               	addlw	-1
  3968  054D  1D03               	skipz
  3969  054E  2D48               	goto	u1055
  3970  054F  0825               	movf	??___ftpack,w
  3971  0550  04A0               	iorwf	___ftpack@arg,f
  3972  0551  0826               	movf	??___ftpack+1,w
  3973  0552  04A1               	iorwf	___ftpack@arg+1,f
  3974  0553  0827               	movf	??___ftpack+2,w
  3975  0554  04A2               	iorwf	___ftpack@arg+2,f
  3976  0555  0824               	movf	___ftpack@sign,w
  3977  0556  1903               	btfsc	3,2
  3978  0557  0008               	return
  3979  0558  17A2               	bsf	___ftpack@arg+2,7
  3980  0559  0008               	return
  3981  055A                     __end_of___ftpack:	
  3982                           
  3983                           	psect	text25
  3984  06B0                     __ptext25:	
  3985 ;; *************** function _isr *****************
  3986 ;; Defined at:
  3987 ;;		line 34 in file "../../Downloads/Project_6/H_RProject_6.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;		None               void
  3994 ;; Registers used:
  3995 ;;		wreg, status,2
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4001 ;;      Params:         0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0
  4003 ;;      Temps:          6       0       0       0       0
  4004 ;;      Totals:         6       0       0       0       0
  4005 ;;Total ram usage:        6 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		Interrupt level 1
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _isr
  4016  06B0                     _isr:	
  4017                           
  4018                           ;H_RProject_6.c: 36: if (T0IF)
  4019  06B0  1D0B               	btfss	11,2	;volatile
  4020  06B1  2EB9               	goto	i1l1663
  4021                           
  4022                           ;H_RProject_6.c: 37: {
  4023                           ;H_RProject_6.c: 38: T0IF = 0;
  4024  06B2  110B               	bcf	11,2	;volatile
  4025                           
  4026                           ;H_RProject_6.c: 39: To +=0x100;
  4027  06B3  3000               	movlw	0
  4028  06B4  07F8               	addwf	_To,f
  4029  06B5  1803               	skipnc
  4030  06B6  0AF9               	incf	_To+1,f
  4031  06B7  3001               	movlw	1
  4032  06B8  07F9               	addwf	_To+1,f
  4033  06B9                     i1l1663:	
  4034                           
  4035                           ;H_RProject_6.c: 40: }
  4036                           ;H_RProject_6.c: 42: if(RBIF)
  4037  06B9  1C0B               	btfss	11,0	;volatile
  4038  06BA  2ECD               	goto	i1l266
  4039                           
  4040                           ;H_RProject_6.c: 43: {
  4041                           ;H_RProject_6.c: 44: RBIF = 0;
  4042  06BB  100B               	bcf	11,0	;volatile
  4043                           
  4044                           ;H_RProject_6.c: 45: if (RB2)
  4045  06BC  1D06               	btfss	6,2	;volatile
  4046  06BD  2EC2               	goto	i1l1669
  4047                           
  4048                           ;H_RProject_6.c: 46: {
  4049                           ;H_RProject_6.c: 47: TMR0 = 0;
  4050  06BE  0181               	clrf	1	;volatile
  4051                           
  4052                           ;H_RProject_6.c: 48: To = 0;
  4053  06BF  01F8               	clrf	_To
  4054  06C0  01F9               	clrf	_To+1
  4055                           
  4056                           ;H_RProject_6.c: 49: }
  4057  06C1  2ECD               	goto	i1l266
  4058  06C2                     i1l1669:	
  4059                           
  4060                           ;H_RProject_6.c: 51: else TH = TMR0 + To;
  4061  06C2  0801               	movf	1,w	;volatile
  4062  06C3  0778               	addwf	_To,w
  4063  06C4  00F0               	movwf	??_isr
  4064  06C5  0879               	movf	_To+1,w
  4065  06C6  1803               	skipnc
  4066  06C7  0A79               	incf	_To+1,w
  4067  06C8  00F1               	movwf	??_isr+1
  4068  06C9  0870               	movf	??_isr,w
  4069  06CA  00EE               	movwf	_TH
  4070  06CB  0871               	movf	??_isr+1,w
  4071  06CC  00EF               	movwf	_TH+1
  4072  06CD                     i1l266:	
  4073  06CD  0875               	movf	??_isr+5,w
  4074  06CE  00FF               	movwf	127
  4075  06CF  0874               	movf	??_isr+4,w
  4076  06D0  008A               	movwf	10
  4077  06D1  0873               	movf	??_isr+3,w
  4078  06D2  0084               	movwf	4
  4079  06D3  0E72               	swapf	(??_isr+2)^(0+-128),w
  4080  06D4  0083               	movwf	3
  4081  06D5  0EFE               	swapf	126,f
  4082  06D6  0E7E               	swapf	126,w
  4083  06D7  0009               	retfie
  4084  06D8                     __end_of_isr:	
  4085  007E                     btemp	set	126	;btemp
  4086  007E                     wtemp	set	126
  4087  007E                     wtemp0	set	126
  4088  0080                     wtemp1	set	128
  4089  0082                     wtemp2	set	130
  4090  0084                     wtemp3	set	132
  4091  0086                     wtemp4	set	134
  4092  0088                     wtemp5	set	136
  4093  007F                     wtemp6	set	127
  4094  007E                     ttemp	set	126
  4095  007E                     ttemp0	set	126
  4096  0081                     ttemp1	set	129
  4097  0084                     ttemp2	set	132
  4098  0087                     ttemp3	set	135
  4099  007F                     ttemp4	set	127
  4100  007E                     ltemp	set	126
  4101  007E                     ltemp0	set	126
  4102  0082                     ltemp1	set	130
  4103  0086                     ltemp2	set	134
  4104  0080                     ltemp3	set	128
  4105                           
  4106                           	psect	intentry
  4107  0004                     __pintentry:	
  4108                           ;incstack = 0
  4109                           ; Regs used in _isr: [wreg+status,2]
  4110                           
  4111  0004                     interrupt_function:	
  4112  007E                     saved_w	set	btemp
  4113  0004  00FE               	movwf	btemp
  4114  0005  0E03               	swapf	3,w
  4115  0006  00F2               	movwf	??_isr+2
  4116  0007  0804               	movf	4,w
  4117  0008  00F3               	movwf	??_isr+3
  4118  0009  080A               	movf	10,w
  4119  000A  00F4               	movwf	??_isr+4
  4120  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4121  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4122  000D  087F               	movf	btemp+1,w
  4123  000E  00F5               	movwf	??_isr+5
  4124  000F  120A  118A  2EB0   	ljmp	_isr


Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     72      80
    BANK1            80      0      10
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[3]), 
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fttol
    _lcd_putstr->_lcd_putchar
    _lcd_2ndline->_send_lcd_data
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_home->_send_lcd_data
    _lcd_goto->_send_lcd_data
    _lcd_bcd->___lwdiv
    _lcd_putchar->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   18412
                                             58 BANK0     14    14      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                     _adc_initialize
                             _adc_on
                        _lcd_2ndline
                            _lcd_bcd
                           _lcd_goto
                           _lcd_home
                     _lcd_initialize
                         _lcd_putstr
                      _send_lcd_data
                    _uart_initialize
                    _uc_uart_receive
                        _ui_adc_read
 ---------------------------------------------------------------------------------
 (1) _ui_adc_read                                          6     4      2      71
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _uc_uart_receive                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_initialize                                      2     2      0       9
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_putstr                                           2     2      0    2048
                                              7 BANK0      2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_2ndline                                          1     1      0     870
                                              5 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1771
                                              5 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     870
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_home                                             1     1      0     870
                                              5 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0     901
                                              5 BANK0      2     2      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             17    15      2    3369
                                              8 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          2     2      0     901
                                              5 BANK0      2     2      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _send_lcd_data                                        4     3      1     870
                                              1 BANK0      4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (2) _set_lcd_rs                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_data                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     752
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     891
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _adc_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1764
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             44 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2100
                                             12 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2054
                                             28 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwdiv
   ___lwtoft
     ___ftpack
   _adc_initialize
   _adc_on
   _lcd_2ndline
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_bcd
     ___lwdiv
     ___lwmod
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _lcd_goto
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_home
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _lcd_putstr
     _lcd_2ndline
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _send_lcd_data
     _set_lcd_data
     _set_lcd_e
     _set_lcd_rs
   _uart_initialize
   _uc_uart_receive
   _ui_adc_read

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      64       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       A       7       12.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      64      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jul 28 10:12:51 2015

          ui_adc_read@pot 0024                         _T 0076                         pc 0002  
            ?_lcd_putchar 0070                        l40 0690                        _GO 00F9  
                      _TH 006E                        _To 0078                        fsr 0004  
                     l150 0797                       l285 0162                       l277 00ED  
                     l295 01B3                       l297 01F8                       l555 0539  
                     l556 0541                       l548 0524                       l639 04D2  
                     _GIE 005F                       _RB0 0030                       _RB2 0032  
                     _RB4 0034                       _RB5 0035                       _RC6 003E  
                     _PS0 0408                       _PS1 0409                       _PS2 040A  
                     _PSA 040B                       _RX9 00C6                       u975 0502  
                     _TX9 04C6                       u995 051D                       _isr 06B0  
                     fsr0 0004                       indf 0000              __CFG_FOSC$HS 0000  
       set_lcd_e@b_output 0020              __CFG_LVP$OFF 0000              ___ftdiv@cntr 0046  
            ___ftdiv@sign 004B                      l1331 0509                      l2123 00FB  
                    l2107 008F                      l1341 0537                      l1333 050E  
                    l1325 04F6                      l2125 0165                      l2109 00F0  
                    l1343 0529                      l2143 0196                      l1329 04FD  
                    l1601 02AA                      l2153 01C0                      l2137 0181  
                    l1531 03D4                      l2155 0174                      l1525 03BE  
                    l2149 01A8                      l2093 00A5                      l2157 01EB  
                    l2079 0084                      l1553 0438                      l1545 0419  
                    l1617 0478                      l1643 04C7                      l1635 04AA  
                    l2099 00BC                      l1573 0233                      l1645 04D5  
                    l1637 04BA                      l1567 021D                      l1585 0272  
                    l1649 04E3                      l1597 029A                      l1589 0282  
                    l1861 0588                      l1853 0564                      l1941 060A  
                    l1855 0572                      l1943 05D8                      l1865 0593  
                    l1937 05F6                      l1883 066E                      l1939 05FC  
                    l1877 0652                      l1879 0660                      l1887 0679  
                    l1967 0390                      _ADFM 04FF                      ?_isr 0070  
                    _ADON 00F8                      _CHS0 00FA                      _CHS1 00FB  
                    _CHS2 00FC                      _ANS0 0C40                      STR_1 06F4  
                    STR_2 06F9                      STR_3 06ED                      STR_4 06E6  
                    STR_5 06DE                      _BRGH 04C2                      _T0IE 005D  
                    _T0IF 005A                      _CREN 00C4                      _T0CS 040D  
                    u1015 0530                      u2000 02E3                      u1055 0548  
                    u1325 03E6                      u1405 023F                      u1335 03F8  
                    u1415 0251                      u2207 0689                      u1345 041A  
                    u1505 02B3                      u2217 061D                      u1355 042B  
                    u2227 05B5                      u1365 0439                      u1445 0283  
                    u2237 05C5                      u1455 028B                      u1535 047F  
                    u1810 075E                      u1565 04AB                      u1495 02AB  
                    u1595 04C9                      u1915 0655                      u1845 0567  
                    u1790 076B                      u1935 0666                      u1865 0573  
                    u1945 066F                      u1875 057F                      _PEIE 005E  
                    u1885 0589                      _RBIE 005B                      _RBIF 0058  
                    _RCIF 0065                      _OERR 00C1                      _TMR0 0001  
                    _SPEN 00C7                      _TXEN 04C5                      _TXIF 0064  
                    _SYNC 04C4                      _WPUB 0095                      _data 0068  
                    _main 0031              ___ftpack@arg 0020              ___ftpack@exp 0023  
                    btemp 007E                      ltemp 007E                      start 0012  
                    ttemp 007E                      wtemp 007E              ___ftmul@cntr 003A  
            ___ftmul@sign 003B              ___fttol@exp1 0059              ___fttol@lval 0055  
                   ??_isr 0070  __size_of_uc_uart_receive 000A                     _ADCS0 00FE  
                   _ADCS1 00FF                     ?_main 0070                     _BRG16 0C3B  
           __CFG_WDTE$OFF 0000           __end_of___ftdiv 045E           __end_of___ftmul 02D8  
         __end_of___fttol 04EC                     _IOCB0 04B0                     _IOCB1 04B1  
                   _IOCB2 04B2                     _IOCB3 04B3                     _IOCB4 04B4  
                   _IOCB5 04B5                     _IOCB6 04B6                     _IOCB7 04B7  
         __end_of___lwdiv 0598           __end_of___lwmod 067E                     i1l266 06CD  
                   _VCFG0 04FC                     _VCFG1 04FD                     _RCREG 001A  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TXREG 0019      send_lcd_data@uc_data 0021             __CFG_PWRTE$ON 0000  
            main@range_an 005C           __end_of_lcd_bcd 03A6         ??_uart_initialize 0020  
           ___ftpack@sign 0024                     main@j 005F                     main@k 0060  
                   main@l 0062            __CFG_BOREN$OFF 0000                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F             main@adc_value 0066  
         __initialization 0015         send_lcd_data@b_rs 0024              __end_of_main 0205  
    __size_of_lcd_2ndline 000B     __end_of_send_lcd_data 05D5                    ??_main 005A  
           ___fttol@sign1 0054              ?_ui_adc_read 0020                    _ADRESH 001E  
                  _ADRESL 009E          __end_of___ftpack 055A                    _ANSELH 0189  
                  i1l1663 06B9                    i1l1669 06C2          __end_of___lwtoft 0738  
           main@range_pwm 0064          __end_of_lcd_home 0791          __end_of_lcd_goto 0755  
                  _adc_on 07AA                 ??___ftdiv 0042   __size_of_adc_initialize 0010  
               ??___ftmul 0032                 ??___fttol 0050                 ??___lwdiv 0024  
               ??___lwmod 0024                 ??_lcd_bcd 002A      __size_of_lcd_putchar 000C  
   ___ftmul@f3_as_product 0037                    saved_w 007E         ??_uc_uart_receive 0020  
        ??_lcd_initialize 0025   __end_of__initialization 002D                ___ftdiv@f1 003F  
              ___ftdiv@f2 003C                ___ftdiv@f3 0047                ___ftmul@f1 002C  
              ___ftmul@f2 002F                ___fttol@f1 004C            __pcstackCOMMON 0070  
              ___lwtoft@c 0028        __size_of_lcd_clear 0009                __pbssBANK0 0068  
              __pbssBANK1 00A0                __pmaintext 0031                   ?_adc_on 0070  
              __pintentry 0004           _uart_initialize 06FC                 ?___ftpack 0020  
      __size_of_set_lcd_e 000D                 ?___lwtoft 0028                _lcd_putstr 05D5  
               ?_lcd_home 0070                 ?_lcd_goto 0070                __stringtab 06D8  
    __size_of_ui_adc_read 0032             ?_set_lcd_data 0070         __end_of_lcd_clear 07A4  
          _adc_initialize 0738           __size_of_adc_on 0004                   ___ftdiv 03A6  
                 ___ftmul 0205                   ___fttol 045E                   ___lwdiv 055A  
                 ___lwmod 064A                ??___ftpack 0025                   __ptext1 067E  
                 __ptext2 0791                   __ptext3 06FC                   __ptext4 05D5  
                 __ptext5 077B                   __ptext6 0611                   __ptext7 079B  
                 __ptext8 0786                   __ptext9 0748                   _lcd_bcd 02D8  
              ??___lwtoft 002B              __size_of_isr 0028                ??_lcd_home 0025  
              ??_lcd_goto 0025      end_of_initialization 002D         lcd_bcd@ui_decimal 002E  
          ??_set_lcd_data 0020         __end_of_set_lcd_e 076F    __end_of_adc_initialize 0748  
 __end_of_uart_initialize 0720                _set_lcd_rs 0755             ??_lcd_2ndline 0025  
         _uc_uart_receive 0791               ?_lcd_putstr 0070               ___ftdiv@exp 004A  
  __size_of_send_lcd_data 003D           ?_adc_initialize 0070               ___ftmul@exp 0036  
           ??_lcd_putchar 0025            __end_of_adc_on 07AE         lcd_putchar@c_data 0026  
     __end_of_lcd_2ndline 0786       start_initialization 0015        set_lcd_rs@b_output 0020  
             __end_of_isr 06D8      lcd_putstr@csz_string 0028       lcd_goto@uc_position 0026  
 __end_of_uc_uart_receive 079B               ?_set_lcd_rs 0070          ?_uart_initialize 0070  
                ??_adc_on 0020       __size_of_lcd_putstr 003C             _send_lcd_data 0598  
    __end_of_set_lcd_data 07AA         __size_of___ftpack 006E       __end_of_lcd_putchar 077B  
             __pbssCOMMON 0076                 ___latbits 0002         __size_of___lwtoft 0018  
           __pcstackBANK0 0020         __size_of_lcd_home 000B         __size_of_lcd_goto 000D  
 __size_of_lcd_initialize 0039          ___lwdiv@dividend 0022               _lcd_2ndline 077B  
                ?___ftdiv 003C                  ?___ftmul 002C                  ?___fttol 004C  
                ?___lwdiv 0020                  ?___lwmod 0020                 _lcd_clear 079B  
          ?_send_lcd_data 0021                 __pstrings 06D8                  ?_lcd_bcd 0028  
           ??_ui_adc_read 0022       __size_of_set_lcd_rs 000D          ___lwdiv@quotient 0026  
     set_lcd_data@uc_data 0020         interrupt_function 0004          ?_uc_uart_receive 0070  
               _set_lcd_e 0762          lcd_bcd@ui_number 0028               _lcd_putchar 076F  
              ?_lcd_clear 0070               __stringbase 06DD              ??_lcd_putstr 0027  
    uart_initialize@dummy 0021          ??_adc_initialize 0020       __end_of_ui_adc_read 06B0  
              ?_set_lcd_e 0070     __size_of_set_lcd_data 0006           ??_send_lcd_data 0022  
        __size_of___ftdiv 00B8          __size_of___ftmul 00D3          __size_of___fttol 008E  
        __size_of___lwdiv 003E        __end_of_lcd_putstr 0611          __size_of___lwmod 0034  
                ___ftpack 04EC        __end_of__stringtab 06DE                  ___lwtoft 0720  
        __size_of_lcd_bcd 00CE           ___lwdiv@divisor 0020           ___lwdiv@counter 0025  
                __ptext10 02D8                  __ptext11 076F                  __ptext20 0720  
                __ptext12 0598                  __ptext21 045E                  __ptext13 0755  
                __ptext22 0205                  __ptext14 0762                  __ptext23 03A6  
                __ptext15 07A4                  __ptext24 04EC                  __ptext16 064A  
                __ptext25 06B0                  __ptext17 055A                  __ptext18 07AA  
                __ptext19 0738                  _lcd_home 0786                  _lcd_goto 0748  
           __size_of_main 01D4           lcd_bcd@uc_digit 0038              _set_lcd_data 07A4  
          _lcd_initialize 0611              ??_set_lcd_rs 0020               ??_lcd_clear 0025  
                main@mode 005E               _ui_adc_read 067E        __end_of_set_lcd_rs 0762  
                intlevel1 0000          ___lwmod@dividend 0022    __end_of_lcd_initialize 064A  
               stringcode 06D8               ??_set_lcd_e 0020              ?_lcd_2ndline 0070  
__size_of_uart_initialize 0024              lcd_bcd@F1683 00A0           ___lwmod@divisor 0020  
         ___lwmod@counter 0025                  stringdir 06D8                  stringtab 06D8  
         ?_lcd_initialize 0070  
