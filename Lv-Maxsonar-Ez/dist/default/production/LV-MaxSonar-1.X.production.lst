

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Jul 09 17:43:32 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     	;# 
    36  0001                     	;# 
    37  0002                     	;# 
    38  0003                     	;# 
    39  0004                     	;# 
    40  0005                     	;# 
    41  0006                     	;# 
    42  0007                     	;# 
    43  0008                     	;# 
    44  0009                     	;# 
    45  000A                     	;# 
    46  000B                     	;# 
    47  000C                     	;# 
    48  000D                     	;# 
    49  000E                     	;# 
    50  000E                     	;# 
    51  000F                     	;# 
    52  0010                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0013                     	;# 
    56  0014                     	;# 
    57  0015                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  001D                     	;# 
    68  001E                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  0086                     	;# 
    73  0087                     	;# 
    74  0088                     	;# 
    75  0089                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  008F                     	;# 
    80  0090                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0093                     	;# 
    85  0093                     	;# 
    86  0094                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  0105                     	;# 
    99  0107                     	;# 
   100  0108                     	;# 
   101  0109                     	;# 
   102  010C                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  0185                     	;# 
   108  0187                     	;# 
   109  0188                     	;# 
   110  0189                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  0105                     	;# 
   177  0107                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0185                     	;# 
   186  0187                     	;# 
   187  0188                     	;# 
   188  0189                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000D                     	;# 
   205  000E                     	;# 
   206  000E                     	;# 
   207  000F                     	;# 
   208  0010                     	;# 
   209  0011                     	;# 
   210  0012                     	;# 
   211  0013                     	;# 
   212  0014                     	;# 
   213  0015                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  001D                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  0081                     	;# 
   227  0085                     	;# 
   228  0086                     	;# 
   229  0087                     	;# 
   230  0088                     	;# 
   231  0089                     	;# 
   232  008C                     	;# 
   233  008D                     	;# 
   234  008E                     	;# 
   235  008F                     	;# 
   236  0090                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0093                     	;# 
   241  0093                     	;# 
   242  0094                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  0105                     	;# 
   255  0107                     	;# 
   256  0108                     	;# 
   257  0109                     	;# 
   258  010C                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  010F                     	;# 
   263  0185                     	;# 
   264  0187                     	;# 
   265  0188                     	;# 
   266  0189                     	;# 
   267  018C                     	;# 
   268  018D                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  000E                     	;# 
   284  000E                     	;# 
   285  000F                     	;# 
   286  0010                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0014                     	;# 
   291  0015                     	;# 
   292  0015                     	;# 
   293  0016                     	;# 
   294  0017                     	;# 
   295  0018                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001B                     	;# 
   300  001C                     	;# 
   301  001D                     	;# 
   302  001E                     	;# 
   303  001F                     	;# 
   304  0081                     	;# 
   305  0085                     	;# 
   306  0086                     	;# 
   307  0087                     	;# 
   308  0088                     	;# 
   309  0089                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  008F                     	;# 
   314  0090                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0093                     	;# 
   318  0093                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0095                     	;# 
   322  0096                     	;# 
   323  0097                     	;# 
   324  0098                     	;# 
   325  0099                     	;# 
   326  009A                     	;# 
   327  009B                     	;# 
   328  009C                     	;# 
   329  009D                     	;# 
   330  009E                     	;# 
   331  009F                     	;# 
   332  0105                     	;# 
   333  0107                     	;# 
   334  0108                     	;# 
   335  0109                     	;# 
   336  010C                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  0185                     	;# 
   342  0187                     	;# 
   343  0188                     	;# 
   344  0189                     	;# 
   345  018C                     	;# 
   346  018D                     	;# 
   347  001E                     _ADRESH	set	30
   348  0005                     _PORTA	set	5
   349  0006                     _PORTB	set	6
   350  0007                     _PORTC	set	7
   351  0008                     _PORTD	set	8
   352  001A                     _RCREG	set	26
   353  0001                     _TMR0	set	1
   354  0019                     _TXREG	set	25
   355  00FE                     _ADCS0	set	254
   356  00FF                     _ADCS1	set	255
   357  00F8                     _ADON	set	248
   358  00FA                     _CHS0	set	250
   359  00FB                     _CHS1	set	251
   360  00FC                     _CHS2	set	252
   361  00C4                     _CREN	set	196
   362  005F                     _GIE	set	95
   363  00F9                     _GO	set	249
   364  00C1                     _OERR	set	193
   365  005E                     _PEIE	set	94
   366  0030                     _RB0	set	48
   367  0032                     _RB2	set	50
   368  0034                     _RB4	set	52
   369  0035                     _RB5	set	53
   370  005B                     _RBIE	set	91
   371  0058                     _RBIF	set	88
   372  003E                     _RC6	set	62
   373  0065                     _RCIF	set	101
   374  00C6                     _RX9	set	198
   375  00C7                     _SPEN	set	199
   376  005D                     _T0IE	set	93
   377  005A                     _T0IF	set	90
   378  0064                     _TXIF	set	100
   379  009E                     _ADRESL	set	158
   380  0099                     _SPBRG	set	153
   381  0085                     _TRISA	set	133
   382  0086                     _TRISB	set	134
   383  0087                     _TRISC	set	135
   384  0088                     _TRISD	set	136
   385  0095                     _WPUB	set	149
   386  04FF                     _ADFM	set	1279
   387  04C2                     _BRGH	set	1218
   388  04B0                     _IOCB0	set	1200
   389  04B1                     _IOCB1	set	1201
   390  04B2                     _IOCB2	set	1202
   391  04B3                     _IOCB3	set	1203
   392  04B4                     _IOCB4	set	1204
   393  04B5                     _IOCB5	set	1205
   394  04B6                     _IOCB6	set	1206
   395  04B7                     _IOCB7	set	1207
   396  0408                     _PS0	set	1032
   397  0409                     _PS1	set	1033
   398  040A                     _PS2	set	1034
   399  040B                     _PSA	set	1035
   400  04C4                     _SYNC	set	1220
   401  040D                     _T0CS	set	1037
   402  04C6                     _TX9	set	1222
   403  04C5                     _TXEN	set	1221
   404  04FC                     _VCFG0	set	1276
   405  04FD                     _VCFG1	set	1277
   406  0189                     _ANSELH	set	393
   407  0C40                     _ANS0	set	3136
   408  0C3B                     _BRG16	set	3131
   409                           
   410                           	psect	strings
   411  041C                     __pstrings:	
   412  041C                     stringtab:	
   413  041C                     __stringtab:	
   414  041C                     stringcode:	
   415                           ;	String table - string pointers are 1 byte each
   416                           
   417  041C                     stringdir:	
   418  041C  3004               	movlw	high stringdir
   419  041D  008A               	movwf	10
   420  041E  0804               	movf	4,w
   421  041F  0A84               	incf	4,f
   422  0420  0782               	addwf	2,f
   423  0421                     __stringbase:	
   424  0421  3400               	retlw	0
   425  0422                     __end_of__stringtab:	
   426  0422                     STR_5:	
   427  0422  3455               	retlw	85	;'U'
   428  0423  3441               	retlw	65	;'A'
   429  0424  3452               	retlw	82	;'R'
   430  0425  3454               	retlw	84	;'T'
   431  0426  3420               	retlw	32	;' '
   432  0427  3420               	retlw	32	;' '
   433  0428  3420               	retlw	32	;' '
   434  0429  3400               	retlw	0
   435  042A                     STR_4:	
   436  042A  3450               	retlw	80	;'P'
   437  042B  3457               	retlw	87	;'W'
   438  042C  344D               	retlw	77	;'M'
   439  042D  3420               	retlw	32	;' '
   440  042E  3420               	retlw	32	;' '
   441  042F  3420               	retlw	32	;' '
   442  0430  3400               	retlw	0
   443  0431                     STR_3:	
   444  0431  3441               	retlw	65	;'A'
   445  0432  346E               	retlw	110	;'n'
   446  0433  3461               	retlw	97	;'a'
   447  0434  346C               	retlw	108	;'l'
   448  0435  346F               	retlw	111	;'o'
   449  0436  3467               	retlw	103	;'g'
   450  0437  3400               	retlw	0
   451  0438                     STR_1:	
   452  0438  3444               	retlw	68	;'D'
   453  0439  3469               	retlw	105	;'i'
   454  043A  3473               	retlw	115	;'s'
   455  043B  3474               	retlw	116	;'t'
   456  043C  343A               	retlw	58	;':'
   457  043D  3400               	retlw	0
   458  043E                     STR_2:	
   459  043E  3469               	retlw	105	;'i'
   460  043F  346E               	retlw	110	;'n'
   461  0440  3463               	retlw	99	;'c'
   462  0441  3468               	retlw	104	;'h'
   463  0442  3400               	retlw	0
   464                           
   465                           ; #config settings
   466  0000                     
   467                           	psect	cinit
   468  0015                     start_initialization:	
   469  0015                     __initialization:	
   470                           
   471                           ; Clear objects allocated to COMMON
   472  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   473  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   474  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   475  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   476                           
   477                           ; Clear objects allocated to BANK0
   478  0019  1383               	bcf	3,7	;select IRP bank0
   479  001A  304D               	movlw	low __pbssBANK0
   480  001B  0084               	movwf	4
   481  001C  305F               	movlw	low (__pbssBANK0+18)
   482  001D  120A  118A  24F6   	fcall	clear_ram0
   483  0020                     end_of_initialization:	
   484                           ;End of C runtime variable initialization code
   485                           
   486  0020                     __end_of__initialization:	
   487  0020  0183               	clrf	3
   488  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   489                           
   490                           	psect	bssCOMMON
   491  0076                     __pbssCOMMON:	
   492  0076                     _T:	
   493  0076                     	ds	2
   494  0078                     _To:	
   495  0078                     	ds	2
   496                           
   497                           	psect	bssBANK0
   498  004D                     __pbssBANK0:	
   499  004D                     lcd_bcd@F1683:	
   500  004D                     	ds	10
   501  0057                     _data:	
   502  0057                     	ds	6
   503  005D                     _TH:	
   504  005D                     	ds	2
   505                           
   506                           	psect	clrtext
   507  04F6                     clear_ram0:	
   508                           ;	Called with FSR containing the base address, and
   509                           ;	W with the last address+1
   510                           
   511  04F6  0064               	clrwdt	;clear the watchdog before getting into this loop
   512  04F7                     clrloop0:	
   513  04F7  0180               	clrf	0	;clear RAM location pointed to by FSR
   514  04F8  0A84               	incf	4,f	;increment pointer
   515  04F9  0604               	xorwf	4,w	;XOR with final address
   516  04FA  1903               	btfsc	3,2	;have we reached the end yet?
   517  04FB  3400               	retlw	0	;all done for this memory range, return
   518  04FC  0604               	xorwf	4,w	;XOR again to restore value
   519  04FD  2CF7               	goto	clrloop0	;do the next byte
   520                           
   521                           	psect	cstackCOMMON
   522  0070                     __pcstackCOMMON:	
   523  0070                     ?_set_lcd_e:	
   524  0070                     ?_lcd_clear:	
   525                           ; 0 bytes @ 0x0
   526                           
   527  0070                     ?_set_lcd_rs:	
   528                           ; 0 bytes @ 0x0
   529                           
   530  0070                     ?_set_lcd_data:	
   531                           ; 0 bytes @ 0x0
   532                           
   533  0070                     ?_adc_initialize:	
   534                           ; 0 bytes @ 0x0
   535                           
   536  0070                     ?_adc_on:	
   537                           ; 0 bytes @ 0x0
   538                           
   539  0070                     ?_lcd_initialize:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ?_lcd_home:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ?_lcd_2ndline:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ?_lcd_goto:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ?_lcd_putchar:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0070                     ?_lcd_putstr:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0070                     ?_uart_initialize:	
   558                           ; 0 bytes @ 0x0
   559                           
   560  0070                     ?_isr:	
   561                           ; 0 bytes @ 0x0
   562                           
   563  0070                     ??_isr:	
   564                           ; 0 bytes @ 0x0
   565                           
   566  0070                     ?_main:	
   567                           ; 0 bytes @ 0x0
   568                           
   569  0070                     ?_uc_uart_receive:	
   570                           ; 0 bytes @ 0x0
   571                           
   572                           
   573                           ; 1 bytes @ 0x0
   574  0070                     	ds	6
   575                           
   576                           	psect	cstackBANK0
   577  0020                     __pcstackBANK0:	
   578  0020                     ??_set_lcd_e:	
   579  0020                     ??_set_lcd_rs:	
   580                           ; 0 bytes @ 0x0
   581                           
   582  0020                     ??_set_lcd_data:	
   583                           ; 0 bytes @ 0x0
   584                           
   585  0020                     ??_adc_initialize:	
   586                           ; 0 bytes @ 0x0
   587                           
   588  0020                     ??_adc_on:	
   589                           ; 0 bytes @ 0x0
   590                           
   591  0020                     ??_uart_initialize:	
   592                           ; 0 bytes @ 0x0
   593                           
   594  0020                     ??_uc_uart_receive:	
   595                           ; 0 bytes @ 0x0
   596                           
   597  0020                     ?_ui_adc_read:	
   598                           ; 0 bytes @ 0x0
   599                           
   600  0020                     ?___wmul:	
   601                           ; 2 bytes @ 0x0
   602                           
   603  0020                     ?___lwmod:	
   604                           ; 2 bytes @ 0x0
   605                           
   606  0020                     set_lcd_e@b_output:	
   607                           ; 2 bytes @ 0x0
   608                           
   609  0020                     set_lcd_rs@b_output:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0020                     set_lcd_data@uc_data:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0020                     ___wmul@multiplier:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0020                     ___lwmod@divisor:	
   619                           ; 2 bytes @ 0x0
   620                           
   621                           
   622                           ; 2 bytes @ 0x0
   623  0020                     	ds	1
   624  0021                     ?_send_lcd_data:	
   625  0021                     send_lcd_data@uc_data:	
   626                           ; 0 bytes @ 0x1
   627                           
   628  0021                     uart_initialize@dummy:	
   629                           ; 1 bytes @ 0x1
   630                           
   631                           
   632                           ; 1 bytes @ 0x1
   633  0021                     	ds	1
   634  0022                     ??_send_lcd_data:	
   635  0022                     ??_ui_adc_read:	
   636                           ; 0 bytes @ 0x2
   637                           
   638  0022                     ___wmul@multiplicand:	
   639                           ; 0 bytes @ 0x2
   640                           
   641  0022                     ___lwmod@dividend:	
   642                           ; 2 bytes @ 0x2
   643                           
   644                           
   645                           ; 2 bytes @ 0x2
   646  0022                     	ds	2
   647  0024                     ??___wmul:	
   648  0024                     ??___lwmod:	
   649                           ; 0 bytes @ 0x4
   650                           
   651  0024                     send_lcd_data@b_rs:	
   652                           ; 0 bytes @ 0x4
   653                           
   654  0024                     ui_adc_read@pot:	
   655                           ; 1 bytes @ 0x4
   656                           
   657  0024                     ___wmul@product:	
   658                           ; 2 bytes @ 0x4
   659                           
   660                           
   661                           ; 2 bytes @ 0x4
   662  0024                     	ds	1
   663  0025                     ??_lcd_clear:	
   664  0025                     ??_lcd_initialize:	
   665                           ; 0 bytes @ 0x5
   666                           
   667  0025                     ??_lcd_home:	
   668                           ; 0 bytes @ 0x5
   669                           
   670  0025                     ??_lcd_2ndline:	
   671                           ; 0 bytes @ 0x5
   672                           
   673  0025                     ??_lcd_goto:	
   674                           ; 0 bytes @ 0x5
   675                           
   676  0025                     ??_lcd_putchar:	
   677                           ; 0 bytes @ 0x5
   678                           
   679  0025                     ___lwmod@counter:	
   680                           ; 0 bytes @ 0x5
   681                           
   682                           
   683                           ; 1 bytes @ 0x5
   684  0025                     	ds	1
   685  0026                     ?___lwdiv:	
   686  0026                     lcd_goto@uc_position:	
   687                           ; 2 bytes @ 0x6
   688                           
   689  0026                     lcd_putchar@c_data:	
   690                           ; 1 bytes @ 0x6
   691                           
   692  0026                     ___lwdiv@divisor:	
   693                           ; 1 bytes @ 0x6
   694                           
   695                           
   696                           ; 2 bytes @ 0x6
   697  0026                     	ds	1
   698  0027                     ??_lcd_putstr:	
   699                           
   700                           ; 0 bytes @ 0x7
   701  0027                     	ds	1
   702  0028                     lcd_putstr@csz_string:	
   703  0028                     ___lwdiv@dividend:	
   704                           ; 1 bytes @ 0x8
   705                           
   706                           
   707                           ; 2 bytes @ 0x8
   708  0028                     	ds	2
   709  002A                     ??___lwdiv:	
   710                           
   711                           ; 0 bytes @ 0xA
   712  002A                     	ds	1
   713  002B                     ___lwdiv@quotient:	
   714                           
   715                           ; 2 bytes @ 0xB
   716  002B                     	ds	2
   717  002D                     ___lwdiv@counter:	
   718                           
   719                           ; 1 bytes @ 0xD
   720  002D                     	ds	1
   721  002E                     ?_lcd_bcd:	
   722  002E                     lcd_bcd@ui_number:	
   723                           ; 0 bytes @ 0xE
   724                           
   725                           
   726                           ; 2 bytes @ 0xE
   727  002E                     	ds	2
   728  0030                     ??_lcd_bcd:	
   729                           
   730                           ; 0 bytes @ 0x10
   731  0030                     	ds	4
   732  0034                     lcd_bcd@ui_decimal:	
   733                           
   734                           ; 10 bytes @ 0x14
   735  0034                     	ds	10
   736  003E                     lcd_bcd@uc_digit:	
   737                           
   738                           ; 1 bytes @ 0x1E
   739  003E                     	ds	1
   740  003F                     ??_main:	
   741                           
   742                           ; 0 bytes @ 0x1F
   743  003F                     	ds	2
   744  0041                     main@range_an:	
   745                           
   746                           ; 2 bytes @ 0x21
   747  0041                     	ds	2
   748  0043                     main@range_pwm:	
   749                           
   750                           ; 2 bytes @ 0x23
   751  0043                     	ds	2
   752  0045                     main@mode:	
   753                           
   754                           ; 1 bytes @ 0x25
   755  0045                     	ds	1
   756  0046                     main@j:	
   757                           
   758                           ; 1 bytes @ 0x26
   759  0046                     	ds	1
   760  0047                     main@k:	
   761                           
   762                           ; 2 bytes @ 0x27
   763  0047                     	ds	2
   764  0049                     main@l:	
   765                           
   766                           ; 2 bytes @ 0x29
   767  0049                     	ds	2
   768  004B                     main@adc_value:	
   769                           
   770                           ; 2 bytes @ 0x2B
   771  004B                     	ds	2
   772                           
   773                           	psect	maintext
   774  0024                     __pmaintext:	
   775 ;;
   776 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   777 ;;
   778 ;; *************** function _main *****************
   779 ;; Defined at:
   780 ;;		line 58 in file "../../KJ/Project_6/HRProject_6.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  adc_value       2   43[BANK0 ] unsigned int 
   785 ;;  range_an        2   33[BANK0 ] unsigned int 
   786 ;;  j               1   38[BANK0 ] unsigned char 
   787 ;;  l               2   41[BANK0 ] unsigned int 
   788 ;;  k               2   39[BANK0 ] unsigned int 
   789 ;;  range_pwm       2   35[BANK0 ] unsigned int 
   790 ;;  value           2    0        unsigned int 
   791 ;;  mode            1   37[BANK0 ] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;		None               void
   794 ;; Registers used:
   795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : B00/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         0      12       0       0       0
   803 ;;      Temps:          0       2       0       0       0
   804 ;;      Totals:         0      14       0       0       0
   805 ;;Total ram usage:       14 bytes
   806 ;; Hardware stack levels required when called:    5
   807 ;; This function calls:
   808 ;;		___lwdiv
   809 ;;		___wmul
   810 ;;		_adc_initialize
   811 ;;		_adc_on
   812 ;;		_lcd_2ndline
   813 ;;		_lcd_bcd
   814 ;;		_lcd_goto
   815 ;;		_lcd_home
   816 ;;		_lcd_initialize
   817 ;;		_lcd_putstr
   818 ;;		_send_lcd_data
   819 ;;		_uart_initialize
   820 ;;		_uc_uart_receive
   821 ;;		_ui_adc_read
   822 ;; This function is called by:
   823 ;;		Startup code after reset
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _main
   829  0024                     _main:	
   830                           
   831                           ;HRProject_6.c: 60: unsigned char mode = 1;
   832                           
   833                           ;incstack = 0
   834                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   835  0024  1283               	bcf	3,5	;RP0=0, select bank0
   836  0025  1303               	bcf	3,6	;RP1=0, select bank0
   837  0026  01C5               	clrf	main@mode
   838  0027  0AC5               	incf	main@mode,f
   839                           
   840                           ;HRProject_6.c: 61: PORTA = 0;
   841  0028  0185               	clrf	5	;volatile
   842                           
   843                           ;HRProject_6.c: 62: PORTB = 0;
   844  0029  0186               	clrf	6	;volatile
   845                           
   846                           ;HRProject_6.c: 63: PORTC = 0;
   847  002A  0187               	clrf	7	;volatile
   848                           
   849                           ;HRProject_6.c: 64: PORTD = 0;
   850  002B  0188               	clrf	8	;volatile
   851                           
   852                           ;HRProject_6.c: 67: TRISA = 0b11111111;
   853  002C  30FF               	movlw	255
   854  002D  1683               	bsf	3,5	;RP0=1, select bank1
   855  002E  1303               	bcf	3,6	;RP1=0, select bank1
   856  002F  0085               	movwf	5	;volatile
   857                           
   858                           ;HRProject_6.c: 68: TRISB = 0b00000111;
   859  0030  3007               	movlw	7
   860  0031  0086               	movwf	6	;volatile
   861                           
   862                           ;HRProject_6.c: 69: TRISC = 0b10000000;
   863  0032  3080               	movlw	128
   864  0033  0087               	movwf	7	;volatile
   865                           
   866                           ;HRProject_6.c: 70: TRISD = 0b00000000;
   867  0034  0188               	clrf	8	;volatile
   868                           
   869                           ;HRProject_6.c: 73: ANSELH = 0;
   870  0035  1683               	bsf	3,5	;RP0=1, select bank3
   871  0036  1703               	bsf	3,6	;RP1=1, select bank3
   872  0037  0189               	clrf	9	;volatile
   873                           
   874                           ;HRProject_6.c: 74: WPUB = 1;
   875  0038  3001               	movlw	1
   876  0039  1683               	bsf	3,5	;RP0=1, select bank1
   877  003A  1303               	bcf	3,6	;RP1=0, select bank1
   878  003B  0095               	movwf	21	;volatile
   879                           
   880                           ;HRProject_6.c: 77: IOCB0 = 0;
   881  003C  1016               	bcf	22,0	;volatile
   882                           
   883                           ;HRProject_6.c: 78: IOCB1 = 0;
   884  003D  1096               	bcf	22,1	;volatile
   885                           
   886                           ;HRProject_6.c: 79: IOCB2 = 1;
   887  003E  1516               	bsf	22,2	;volatile
   888                           
   889                           ;HRProject_6.c: 80: IOCB3 = 0;
   890  003F  1196               	bcf	22,3	;volatile
   891                           
   892                           ;HRProject_6.c: 81: IOCB4 = 0;
   893  0040  1216               	bcf	22,4	;volatile
   894                           
   895                           ;HRProject_6.c: 82: IOCB5 = 0;
   896  0041  1296               	bcf	22,5	;volatile
   897                           
   898                           ;HRProject_6.c: 83: IOCB6 = 0;
   899  0042  1316               	bcf	22,6	;volatile
   900                           
   901                           ;HRProject_6.c: 84: IOCB7 = 0;
   902  0043  1396               	bcf	22,7	;volatile
   903                           
   904                           ;HRProject_6.c: 86: RBIE = 1;
   905  0044  158B               	bsf	11,3	;volatile
   906                           
   907                           ;HRProject_6.c: 90: T0CS = 0;
   908  0045  1281               	bcf	1,5	;volatile
   909                           
   910                           ;HRProject_6.c: 91: PSA = 0;
   911  0046  1181               	bcf	1,3	;volatile
   912                           
   913                           ;HRProject_6.c: 92: PS2 = 1;
   914  0047  1501               	bsf	1,2	;volatile
   915                           
   916                           ;HRProject_6.c: 93: PS1 = 1;
   917  0048  1481               	bsf	1,1	;volatile
   918                           
   919                           ;HRProject_6.c: 94: PS0 = 1;
   920  0049  1401               	bsf	1,0	;volatile
   921                           
   922                           ;HRProject_6.c: 95: T0IE = 1;
   923  004A  168B               	bsf	11,5	;volatile
   924                           
   925                           ;HRProject_6.c: 96: TMR0 = 0;
   926  004B  1283               	bcf	3,5	;RP0=0, select bank0
   927  004C  1303               	bcf	3,6	;RP1=0, select bank0
   928  004D  0181               	clrf	1	;volatile
   929                           
   930                           ;HRProject_6.c: 98: GIE = 1;
   931  004E  178B               	bsf	11,7	;volatile
   932                           
   933                           ;HRProject_6.c: 99: PEIE = 1;
   934  004F  170B               	bsf	11,6	;volatile
   935                           
   936                           ;HRProject_6.c: 101: lcd_initialize();
   937  0050  120A  118A  2355  120A  118A  	fcall	_lcd_initialize
   938                           
   939                           ;HRProject_6.c: 103: adc_initialize();
   940  0055  120A  118A  248A  120A  118A  	fcall	_adc_initialize
   941                           
   942                           ;HRProject_6.c: 105: uart_initialize();
   943  005A  120A  118A  2443  120A  118A  	fcall	_uart_initialize
   944                           
   945                           ;HRProject_6.c: 109: lcd_home();
   946                           
   947                           ;HRProject_6.c: 107: RC6 == 1;
   948  005F  120A  118A  24D8  120A  118A  	fcall	_lcd_home
   949                           
   950                           ;HRProject_6.c: 110: lcd_putstr("Dist:");
   951  0064  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   952  0065  120A  118A  2319  120A  118A  	fcall	_lcd_putstr
   953                           
   954                           ;HRProject_6.c: 111: lcd_goto(0x0B);
   955  006A  300B               	movlw	11
   956  006B  120A  118A  249A  120A  118A  	fcall	_lcd_goto
   957                           
   958                           ;HRProject_6.c: 112: lcd_putstr("inch");
   959  0070  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   960  0071  120A  118A  2319  120A  118A  	fcall	_lcd_putstr
   961                           
   962                           ;HRProject_6.c: 115: {
   963                           ;HRProject_6.c: 116: switch(mode)
   964                           
   965                           ;HRProject_6.c: 114: while (1)
   966  0076  29B6               	goto	l1823
   967  0077                     l1747:	
   968                           ;HRProject_6.c: 117: {
   969                           ;HRProject_6.c: 118: case 1: lcd_2ndline();
   970                           
   971  0077  120A  118A  24CD  120A  118A  	fcall	_lcd_2ndline
   972                           
   973                           ;HRProject_6.c: 119: lcd_putstr("Analog");
   974  007C  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   975  007D  120A  118A  2319  120A  118A  	fcall	_lcd_putstr
   976  0082                     l1775:	
   977                           ;HRProject_6.c: 120: while (RB0 == 1)
   978                           
   979  0082  1283               	bcf	3,5	;RP0=0, select bank0
   980  0083  1303               	bcf	3,6	;RP1=0, select bank0
   981  0084  1C06               	btfss	6,0	;volatile
   982  0085  28E0               	goto	l277
   983                           
   984                           ;HRProject_6.c: 121: {
   985                           ;HRProject_6.c: 122: unsigned int adc_value = 0;
   986  0086  1283               	bcf	3,5	;RP0=0, select bank0
   987  0087  1303               	bcf	3,6	;RP1=0, select bank0
   988  0088  01CB               	clrf	main@adc_value
   989  0089  01CC               	clrf	main@adc_value+1
   990                           
   991                           ;HRProject_6.c: 123: unsigned int range_an = 0;
   992  008A  01C1               	clrf	main@range_an
   993  008B  01C2               	clrf	main@range_an+1
   994                           
   995                           ;HRProject_6.c: 124: unsigned char j;
   996                           ;HRProject_6.c: 125: adc_on();
   997  008C  120A  118A  2504  120A  118A  	fcall	_adc_on
   998                           
   999                           ;HRProject_6.c: 126: for(j = 0 ; j < 10 ; j++)
  1000  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0093  01C6               	clrf	main@j
  1003  0094  300A               	movlw	10
  1004  0095  0246               	subwf	main@j,w
  1005  0096  1803               	btfsc	3,0
  1006  0097  28AF               	goto	l1767
  1007  0098                     l1761:	
  1008                           
  1009                           ;HRProject_6.c: 127: {
  1010                           ;HRProject_6.c: 128: adc_value = adc_value + ui_adc_read();
  1011  0098  120A  118A  23C2  120A  118A  	fcall	_ui_adc_read
  1012  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1013  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1014  009F  084B               	movf	main@adc_value,w
  1015  00A0  0720               	addwf	?_ui_adc_read,w
  1016  00A1  00CB               	movwf	main@adc_value
  1017  00A2  084C               	movf	main@adc_value+1,w
  1018  00A3  1803               	skipnc
  1019  00A4  0A4C               	incf	main@adc_value+1,w
  1020  00A5  0721               	addwf	?_ui_adc_read+1,w
  1021  00A6  00CC               	movwf	main@adc_value+1
  1022  00A7  3001               	movlw	1
  1023  00A8  00BF               	movwf	??_main
  1024  00A9  083F               	movf	??_main,w
  1025  00AA  07C6               	addwf	main@j,f
  1026  00AB  300A               	movlw	10
  1027  00AC  0246               	subwf	main@j,w
  1028  00AD  1C03               	skipc
  1029  00AE  2898               	goto	l1761
  1030  00AF                     l1767:	
  1031                           
  1032                           ;HRProject_6.c: 129: }
  1033                           ;HRProject_6.c: 131: adc_value = adc_value/10;
  1034  00AF  300A               	movlw	10
  1035  00B0  00A6               	movwf	___lwdiv@divisor
  1036  00B1  3000               	movlw	0
  1037  00B2  00A7               	movwf	___lwdiv@divisor+1
  1038  00B3  084C               	movf	main@adc_value+1,w
  1039  00B4  00A9               	movwf	___lwdiv@dividend+1
  1040  00B5  084B               	movf	main@adc_value,w
  1041  00B6  00A8               	movwf	___lwdiv@dividend
  1042  00B7  120A  118A  229E  120A  118A  	fcall	___lwdiv
  1043  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1044  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1045  00BE  0827               	movf	?___lwdiv+1,w
  1046  00BF  00CC               	movwf	main@adc_value+1
  1047  00C0  0826               	movf	?___lwdiv,w
  1048  00C1  00CB               	movwf	main@adc_value
  1049                           
  1050                           ;HRProject_6.c: 132: range_an = adc_value/2;
  1051  00C2  084C               	movf	main@adc_value+1,w
  1052  00C3  00C0               	movwf	??_main+1
  1053  00C4  084B               	movf	main@adc_value,w
  1054  00C5  00BF               	movwf	??_main
  1055  00C6  1003               	clrc
  1056  00C7  0CC0               	rrf	??_main+1,f
  1057  00C8  0CBF               	rrf	??_main,f
  1058  00C9  083F               	movf	??_main,w
  1059  00CA  00C1               	movwf	main@range_an
  1060  00CB  0840               	movf	??_main+1,w
  1061  00CC  00C2               	movwf	main@range_an+1
  1062                           
  1063                           ;HRProject_6.c: 133: lcd_goto(0x05);
  1064  00CD  3005               	movlw	5
  1065  00CE  120A  118A  249A  120A  118A  	fcall	_lcd_goto
  1066                           
  1067                           ;HRProject_6.c: 134: lcd_bcd(3,range_an);
  1068  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1069  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1070  00D5  0842               	movf	main@range_an+1,w
  1071  00D6  00AF               	movwf	lcd_bcd@ui_number+1
  1072  00D7  0841               	movf	main@range_an,w
  1073  00D8  00AE               	movwf	lcd_bcd@ui_number
  1074  00D9  3003               	movlw	3
  1075  00DA  120A  118A  21D0  120A  118A  	fcall	_lcd_bcd
  1076  00DF  2882               	goto	l1775
  1077  00E0                     l277:	
  1078                           ;HRProject_6.c: 135: }
  1079                           ;HRProject_6.c: 136: while (RB0 == 0);
  1080                           
  1081  00E0  1806               	btfsc	6,0	;volatile
  1082  00E1  29C3               	goto	l297
  1083  00E2  28E0               	goto	l277
  1084  00E3                     l1777:	
  1085                           ;HRProject_6.c: 139: case 2: lcd_2ndline();
  1086                           
  1087                           ;HRProject_6.c: 137: break;
  1088                           
  1089  00E3  120A  118A  24CD  120A  118A  	fcall	_lcd_2ndline
  1090                           
  1091                           ;HRProject_6.c: 140: lcd_putstr("PWM   ");
  1092  00E8  3009               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1093  00E9  120A  118A  2319  120A  118A  	fcall	_lcd_putstr
  1094  00EE                     l1789:	
  1095                           ;HRProject_6.c: 141: unsigned int range_pwm;
  1096                           ;HRProject_6.c: 142: while(RB0 == 1)
  1097                           
  1098  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1099  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1100  00F0  1C06               	btfss	6,0	;volatile
  1101  00F1  292D               	goto	l285
  1102                           
  1103                           ;HRProject_6.c: 143: {
  1104                           ;HRProject_6.c: 144: range_pwm = TH;
  1105  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1106  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1107  00F4  085E               	movf	_TH+1,w
  1108  00F5  00C4               	movwf	main@range_pwm+1
  1109  00F6  085D               	movf	_TH,w
  1110  00F7  00C3               	movwf	main@range_pwm
  1111                           
  1112                           ;HRProject_6.c: 145: lcd_goto(0x05);
  1113  00F8  3005               	movlw	5
  1114  00F9  120A  118A  249A  120A  118A  	fcall	_lcd_goto
  1115                           
  1116                           ;HRProject_6.c: 146: range_pwm = (range_pwm*100)/288;
  1117  00FE  3020               	movlw	32
  1118  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0101  00A6               	movwf	___lwdiv@divisor
  1121  0102  3001               	movlw	1
  1122  0103  00A7               	movwf	___lwdiv@divisor+1
  1123  0104  0844               	movf	main@range_pwm+1,w
  1124  0105  00A1               	movwf	___wmul@multiplier+1
  1125  0106  0843               	movf	main@range_pwm,w
  1126  0107  00A0               	movwf	___wmul@multiplier
  1127  0108  3064               	movlw	100
  1128  0109  00A2               	movwf	___wmul@multiplicand
  1129  010A  3000               	movlw	0
  1130  010B  00A3               	movwf	___wmul@multiplicand+1
  1131  010C  120A  118A  2467  120A  118A  	fcall	___wmul
  1132  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0113  0821               	movf	?___wmul+1,w
  1135  0114  00A9               	movwf	___lwdiv@dividend+1
  1136  0115  0820               	movf	?___wmul,w
  1137  0116  00A8               	movwf	___lwdiv@dividend
  1138  0117  120A  118A  229E  120A  118A  	fcall	___lwdiv
  1139  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1140  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1141  011E  0827               	movf	?___lwdiv+1,w
  1142  011F  00C4               	movwf	main@range_pwm+1
  1143  0120  0826               	movf	?___lwdiv,w
  1144  0121  00C3               	movwf	main@range_pwm
  1145                           
  1146                           ;HRProject_6.c: 147: lcd_bcd(3,range_pwm);
  1147  0122  0844               	movf	main@range_pwm+1,w
  1148  0123  00AF               	movwf	lcd_bcd@ui_number+1
  1149  0124  0843               	movf	main@range_pwm,w
  1150  0125  00AE               	movwf	lcd_bcd@ui_number
  1151  0126  3003               	movlw	3
  1152  0127  120A  118A  21D0  120A  118A  	fcall	_lcd_bcd
  1153  012C  28EE               	goto	l1789
  1154  012D                     l285:	
  1155                           ;HRProject_6.c: 148: }
  1156                           ;HRProject_6.c: 149: while (RB0 == 0);
  1157                           
  1158  012D  1806               	btfsc	6,0	;volatile
  1159  012E  29C3               	goto	l297
  1160  012F  292D               	goto	l285
  1161  0130                     l1791:	
  1162                           ;HRProject_6.c: 152: case 3: lcd_2ndline();
  1163                           
  1164                           ;HRProject_6.c: 150: break;
  1165                           
  1166  0130  120A  118A  24CD  120A  118A  	fcall	_lcd_2ndline
  1167                           
  1168                           ;HRProject_6.c: 153: lcd_putstr("UART   ");
  1169  0135  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1170  0136  120A  118A  2319  120A  118A  	fcall	_lcd_putstr
  1171                           
  1172                           ;HRProject_6.c: 154: unsigned int value,k,l = 0;
  1173  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1174  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1175  013D  01C9               	clrf	main@l
  1176  013E  01CA               	clrf	main@l+1
  1177  013F                     l1821:	
  1178                           ;HRProject_6.c: 155: while(RB0 == 1)
  1179                           
  1180  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1181  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0141  1C06               	btfss	6,0	;volatile
  1183  0142  29C3               	goto	l297
  1184                           
  1185                           ;HRProject_6.c: 156: {
  1186                           ;HRProject_6.c: 158: for (l=0 ; l<6 ; l++)
  1187  0143  01C9               	clrf	main@l
  1188  0144  01CA               	clrf	main@l+1
  1189  0145  3000               	movlw	0
  1190  0146  024A               	subwf	main@l+1,w
  1191  0147  3006               	movlw	6
  1192  0148  1903               	skipnz
  1193  0149  0249               	subwf	main@l,w
  1194  014A  1803               	btfsc	3,0
  1195  014B  298B               	goto	l1819
  1196  014C                     l1803:	
  1197                           
  1198                           ;HRProject_6.c: 159: {
  1199                           ;HRProject_6.c: 160: uc_uart_receive();
  1200  014C  120A  118A  24E3  120A  118A  	fcall	_uc_uart_receive
  1201                           
  1202                           ;HRProject_6.c: 161: if(RCREG == 'R') data[k=0] = RCREG;
  1203  0151  3052               	movlw	82
  1204  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0154  061A               	xorwf	26,w	;volatile
  1207  0155  1D03               	btfss	3,2
  1208  0156  2961               	goto	l1809
  1209  0157  081A               	movf	26,w	;volatile
  1210  0158  00BF               	movwf	??_main
  1211  0159  01C7               	clrf	main@k
  1212  015A  01C8               	clrf	main@k+1
  1213  015B  3000               	movlw	0
  1214  015C  3E57               	addlw	(low (_data| 0))& (0+255)
  1215  015D  0084               	movwf	4
  1216  015E  083F               	movf	??_main,w
  1217  015F  1383               	bcf	3,7	;select IRP bank0
  1218  0160  0080               	movwf	0
  1219  0161                     l1809:	
  1220                           
  1221                           ;HRProject_6.c: 162: if(data[0] == 'R') data[k++] = RCREG;
  1222  0161  3052               	movlw	82
  1223  0162  0657               	xorwf	_data,w
  1224  0163  1D03               	btfss	3,2
  1225  0164  2973               	goto	l1815
  1226  0165  081A               	movf	26,w	;volatile
  1227  0166  00BF               	movwf	??_main
  1228  0167  0847               	movf	main@k,w
  1229  0168  3E57               	addlw	(low (_data| 0))& (0+255)
  1230  0169  0084               	movwf	4
  1231  016A  083F               	movf	??_main,w
  1232  016B  1383               	bcf	3,7	;select IRP bank0
  1233  016C  0080               	movwf	0
  1234  016D  3001               	movlw	1
  1235  016E  07C7               	addwf	main@k,f
  1236  016F  1803               	skipnc
  1237  0170  0AC8               	incf	main@k+1,f
  1238  0171  3000               	movlw	0
  1239  0172  07C8               	addwf	main@k+1,f
  1240  0173                     l1815:	
  1241                           
  1242                           ;HRProject_6.c: 163: if (k>4) k = 4;
  1243  0173  3000               	movlw	0
  1244  0174  0248               	subwf	main@k+1,w
  1245  0175  3005               	movlw	5
  1246  0176  1903               	skipnz
  1247  0177  0247               	subwf	main@k,w
  1248  0178  1C03               	skipc
  1249  0179  297E               	goto	l295
  1250  017A  3004               	movlw	4
  1251  017B  00C7               	movwf	main@k
  1252  017C  3000               	movlw	0
  1253  017D  00C8               	movwf	main@k+1
  1254  017E                     l295:	
  1255  017E  3001               	movlw	1
  1256  017F  07C9               	addwf	main@l,f
  1257  0180  1803               	skipnc
  1258  0181  0ACA               	incf	main@l+1,f
  1259  0182  3000               	movlw	0
  1260  0183  07CA               	addwf	main@l+1,f
  1261  0184  3000               	movlw	0
  1262  0185  024A               	subwf	main@l+1,w
  1263  0186  3006               	movlw	6
  1264  0187  1903               	skipnz
  1265  0188  0249               	subwf	main@l,w
  1266  0189  1C03               	skipc
  1267  018A  294C               	goto	l1803
  1268  018B                     l1819:	
  1269                           
  1270                           ;HRProject_6.c: 164: }
  1271                           ;HRProject_6.c: 165: lcd_goto(0x05);
  1272  018B  3005               	movlw	5
  1273  018C  120A  118A  249A  120A  118A  	fcall	_lcd_goto
  1274                           
  1275                           ;HRProject_6.c: 166: send_lcd_data(1,data[1]);
  1276  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0193  0858               	movf	_data+1,w
  1279  0194  00BF               	movwf	??_main
  1280  0195  083F               	movf	??_main,w
  1281  0196  00A1               	movwf	send_lcd_data@uc_data
  1282  0197  3001               	movlw	1
  1283  0198  120A  118A  22DC  120A  118A  	fcall	_send_lcd_data
  1284                           
  1285                           ;HRProject_6.c: 167: send_lcd_data(1,data[2]);
  1286  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1287  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1288  019F  0859               	movf	_data+2,w
  1289  01A0  00BF               	movwf	??_main
  1290  01A1  083F               	movf	??_main,w
  1291  01A2  00A1               	movwf	send_lcd_data@uc_data
  1292  01A3  3001               	movlw	1
  1293  01A4  120A  118A  22DC  120A  118A  	fcall	_send_lcd_data
  1294                           
  1295                           ;HRProject_6.c: 168: send_lcd_data(1,data[3]);
  1296  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1297  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1298  01AB  085A               	movf	_data+3,w
  1299  01AC  00BF               	movwf	??_main
  1300  01AD  083F               	movf	??_main,w
  1301  01AE  00A1               	movwf	send_lcd_data@uc_data
  1302  01AF  3001               	movlw	1
  1303  01B0  120A  118A  22DC  120A  118A  	fcall	_send_lcd_data
  1304  01B5  293F               	goto	l1821
  1305  01B6                     l1823:	
  1306                           ;HRProject_6.c: 169: }
  1307                           ;HRProject_6.c: 170: }
  1308                           
  1309  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1310  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1311  01B8  0845               	movf	main@mode,w
  1312                           
  1313                           ; Switch size 1, requested type "space"
  1314                           ; Number of cases is 3, Range of values is 1 to 3
  1315                           ; switch strategies available:
  1316                           ; Name         Instructions Cycles
  1317                           ; simple_byte           10     6 (average)
  1318                           ; direct_byte           20    11 (fixed)
  1319                           ; jumptable            263     9 (fixed)
  1320                           ;	Chosen strategy is simple_byte
  1321  01B9  3A01               	xorlw	1	; case 1
  1322  01BA  1903               	skipnz
  1323  01BB  2877               	goto	l1747
  1324  01BC  3A03               	xorlw	3	; case 2
  1325  01BD  1903               	skipnz
  1326  01BE  28E3               	goto	l1777
  1327  01BF  3A01               	xorlw	1	; case 3
  1328  01C0  1903               	skipnz
  1329  01C1  2930               	goto	l1791
  1330  01C2  29C3               	goto	l297
  1331  01C3                     l297:	
  1332                           ;HRProject_6.c: 172: while (RB0 == 0);
  1333                           
  1334  01C3  1C06               	btfss	6,0	;volatile
  1335  01C4  29C3               	goto	l297
  1336                           
  1337                           ;HRProject_6.c: 173: if (++mode > 3)
  1338  01C5  3001               	movlw	1
  1339  01C6  00BF               	movwf	??_main
  1340  01C7  083F               	movf	??_main,w
  1341  01C8  07C5               	addwf	main@mode,f
  1342  01C9  3004               	movlw	4
  1343  01CA  0245               	subwf	main@mode,w
  1344  01CB  1C03               	skipc
  1345  01CC  29B6               	goto	l1823
  1346                           
  1347                           ;HRProject_6.c: 174: {
  1348                           ;HRProject_6.c: 175: mode = 1;
  1349  01CD  01C5               	clrf	main@mode
  1350  01CE  0AC5               	incf	main@mode,f
  1351  01CF  29B6               	goto	l1823
  1352  01D0                     __end_of_main:	
  1353                           
  1354                           	psect	text1
  1355  03C2                     __ptext1:	
  1356 ;; *************** function _ui_adc_read *****************
  1357 ;; Defined at:
  1358 ;;		line 105 in file "../../KJ/Project_6/adc.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  pot             2    4[BANK0 ] unsigned int 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  2    0[BANK0 ] unsigned int 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, btemp+1
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       2       0       0       0
  1373 ;;      Locals:         0       2       0       0       0
  1374 ;;      Temps:          0       2       0       0       0
  1375 ;;      Totals:         0       6       0       0       0
  1376 ;;Total ram usage:        6 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    1
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           
  1387                           ;psect for function _ui_adc_read
  1388  03C2                     _ui_adc_read:	
  1389                           
  1390                           ;adc.c: 107: unsigned int pot = 0;
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _ui_adc_read: [wreg+status,2+btemp+1]
  1394  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1395  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1396  03C4  01A4               	clrf	ui_adc_read@pot
  1397  03C5  01A5               	clrf	ui_adc_read@pot+1
  1398                           
  1399                           ;adc.c: 109: CHS2 = 0;
  1400  03C6  121F               	bcf	31,4	;volatile
  1401                           
  1402                           ;adc.c: 110: CHS1 = 0;
  1403  03C7  119F               	bcf	31,3	;volatile
  1404                           
  1405                           ;adc.c: 111: CHS0 = 0;
  1406  03C8  111F               	bcf	31,2	;volatile
  1407                           
  1408                           ;adc.c: 114: _delay((unsigned long)((1)*(20000000/4000.0)));
  1409  03C9  3007               	movlw	7
  1410  03CA  00A3               	movwf	??_ui_adc_read+1
  1411  03CB  307D               	movlw	125
  1412  03CC  00A2               	movwf	??_ui_adc_read
  1413  03CD                     u1377:	
  1414  03CD  0BA2               	decfsz	??_ui_adc_read,f
  1415  03CE  2BCD               	goto	u1377
  1416  03CF  0BA3               	decfsz	??_ui_adc_read+1,f
  1417  03D0  2BCD               	goto	u1377
  1418                           
  1419                           ;adc.c: 117: GO = 1;
  1420  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1421  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1422  03D3  149F               	bsf	31,1	;volatile
  1423  03D4                     l40:	
  1424                           ;adc.c: 118: while (GO == 1);
  1425                           
  1426  03D4  189F               	btfsc	31,1	;volatile
  1427  03D5  2BD4               	goto	l40
  1428                           
  1429                           ;adc.c: 121: pot = (unsigned int)ADRESH << 8;
  1430  03D6  081E               	movf	30,w	;volatile
  1431  03D7  00A2               	movwf	??_ui_adc_read
  1432  03D8  01A3               	clrf	??_ui_adc_read+1
  1433  03D9  0822               	movf	??_ui_adc_read,w
  1434  03DA  00A3               	movwf	??_ui_adc_read+1
  1435  03DB  01A2               	clrf	??_ui_adc_read
  1436  03DC  0822               	movf	??_ui_adc_read,w
  1437  03DD  00A4               	movwf	ui_adc_read@pot
  1438  03DE  0823               	movf	??_ui_adc_read+1,w
  1439  03DF  00A5               	movwf	ui_adc_read@pot+1
  1440                           
  1441                           ;adc.c: 122: pot = pot + ADRESL;
  1442  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  1443  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  1444  03E2  081E               	movf	30,w	;volatile
  1445  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1446  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1447  03E5  0724               	addwf	ui_adc_read@pot,w
  1448  03E6  00A2               	movwf	??_ui_adc_read
  1449  03E7  0825               	movf	ui_adc_read@pot+1,w
  1450  03E8  1803               	skipnc
  1451  03E9  0A25               	incf	ui_adc_read@pot+1,w
  1452  03EA  00A3               	movwf	??_ui_adc_read+1
  1453  03EB  0822               	movf	??_ui_adc_read,w
  1454  03EC  00A4               	movwf	ui_adc_read@pot
  1455  03ED  0823               	movf	??_ui_adc_read+1,w
  1456  03EE  00A5               	movwf	ui_adc_read@pot+1
  1457                           
  1458                           ;adc.c: 123: return pot;
  1459  03EF  0825               	movf	ui_adc_read@pot+1,w
  1460  03F0  00A1               	movwf	?_ui_adc_read+1
  1461  03F1  0824               	movf	ui_adc_read@pot,w
  1462  03F2  00A0               	movwf	?_ui_adc_read
  1463  03F3  0008               	return
  1464  03F4                     __end_of_ui_adc_read:	
  1465                           
  1466                           	psect	text2
  1467  04E3                     __ptext2:	
  1468 ;; *************** function _uc_uart_receive *****************
  1469 ;; Defined at:
  1470 ;;		line 87 in file "../../KJ/Project_6/uart.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      unsigned char 
  1477 ;; Registers used:
  1478 ;;		wreg
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       0       0       0       0
  1485 ;;      Locals:         0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0
  1487 ;;      Totals:         0       0       0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _uc_uart_receive
  1500  04E3                     _uc_uart_receive:	
  1501                           
  1502                           ;uart.c: 90: if (OERR == 1) {
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in _uc_uart_receive: [wreg]
  1506  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1507  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  1508  04E5  1C98               	btfss	24,1	;volatile
  1509  04E6  2CE9               	goto	l150
  1510                           
  1511                           ;uart.c: 92: CREN = 0;
  1512  04E7  1218               	bcf	24,4	;volatile
  1513                           
  1514                           ;uart.c: 93: CREN = 1;
  1515  04E8  1618               	bsf	24,4	;volatile
  1516  04E9                     l150:	
  1517                           ;uart.c: 94: }
  1518                           ;uart.c: 97: while (RCIF == 0);
  1519                           
  1520  04E9  1E8C               	btfss	12,5	;volatile
  1521  04EA  2CE9               	goto	l150
  1522                           
  1523                           ;uart.c: 100: return RCREG;
  1524                           ;	Return value of _uc_uart_receive is never used
  1525  04EB  081A               	movf	26,w	;volatile
  1526  04EC  0008               	return
  1527  04ED                     __end_of_uc_uart_receive:	
  1528                           
  1529                           	psect	text3
  1530  0443                     __ptext3:	
  1531 ;; *************** function _uart_initialize *****************
  1532 ;; Defined at:
  1533 ;;		line 28 in file "../../KJ/Project_6/uart.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  dummy           1    1[BANK0 ] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;		None               void
  1540 ;; Registers used:
  1541 ;;		wreg, status,2
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       0       0       0       0
  1548 ;;      Locals:         0       1       0       0       0
  1549 ;;      Temps:          0       1       0       0       0
  1550 ;;      Totals:         0       2       0       0       0
  1551 ;;Total ram usage:        2 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _uart_initialize
  1563  0443                     _uart_initialize:	
  1564                           
  1565                           ;uart.c: 30: unsigned char dummy = 0;
  1566                           
  1567                           ;incstack = 0
  1568                           ; Regs used in _uart_initialize: [wreg+status,2]
  1569  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0445  01A1               	clrf	uart_initialize@dummy
  1572                           
  1573                           ;uart.c: 31: BRG16 = 0;
  1574  0446  1683               	bsf	3,5	;RP0=1, select bank3
  1575  0447  1703               	bsf	3,6	;RP1=1, select bank3
  1576  0448  1187               	bcf	7,3	;volatile
  1577                           
  1578                           ;uart.c: 32: SYNC = 0;
  1579  0449  1683               	bsf	3,5	;RP0=1, select bank1
  1580  044A  1303               	bcf	3,6	;RP1=0, select bank1
  1581  044B  1218               	bcf	24,4	;volatile
  1582                           
  1583                           ;uart.c: 33: TX9 = 0;
  1584  044C  1318               	bcf	24,6	;volatile
  1585                           
  1586                           ;uart.c: 34: RX9 = 0;
  1587  044D  1283               	bcf	3,5	;RP0=0, select bank0
  1588  044E  1303               	bcf	3,6	;RP1=0, select bank0
  1589  044F  1318               	bcf	24,6	;volatile
  1590                           
  1591                           ;uart.c: 35: BRGH = 1;
  1592  0450  1683               	bsf	3,5	;RP0=1, select bank1
  1593  0451  1303               	bcf	3,6	;RP1=0, select bank1
  1594  0452  1518               	bsf	24,2	;volatile
  1595                           
  1596                           ;uart.c: 36: SPBRG = 129;
  1597  0453  3081               	movlw	129
  1598  0454  0099               	movwf	25	;volatile
  1599                           
  1600                           ;uart.c: 37: SPEN = 1;
  1601  0455  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0456  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0457  1798               	bsf	24,7	;volatile
  1604                           
  1605                           ;uart.c: 38: CREN = 1;
  1606  0458  1618               	bsf	24,4	;volatile
  1607                           
  1608                           ;uart.c: 39: TXEN = 1;
  1609  0459  1683               	bsf	3,5	;RP0=1, select bank1
  1610  045A  1303               	bcf	3,6	;RP1=0, select bank1
  1611  045B  1698               	bsf	24,5	;volatile
  1612                           
  1613                           ;uart.c: 40: dummy = RCREG;
  1614  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1615  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1616  045E  081A               	movf	26,w	;volatile
  1617  045F  00A0               	movwf	??_uart_initialize
  1618  0460  0820               	movf	??_uart_initialize,w
  1619  0461  00A1               	movwf	uart_initialize@dummy
  1620                           
  1621                           ;uart.c: 41: dummy = RCREG;
  1622  0462  081A               	movf	26,w	;volatile
  1623  0463  00A0               	movwf	??_uart_initialize
  1624  0464  0820               	movf	??_uart_initialize,w
  1625  0465  00A1               	movwf	uart_initialize@dummy
  1626  0466  0008               	return
  1627  0467                     __end_of_uart_initialize:	
  1628                           
  1629                           	psect	text4
  1630  0319                     __ptext4:	
  1631 ;; *************** function _lcd_putstr *****************
  1632 ;; Defined at:
  1633 ;;		line 241 in file "../../KJ/Project_6/lcd.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  csz_string      1    wreg     PTR const unsigned char 
  1636 ;;		 -> STR_5(8), STR_4(7), STR_3(7), STR_2(5), 
  1637 ;;		 -> STR_1(6), 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  csz_string      1    8[BANK0 ] PTR const unsigned char 
  1640 ;;		 -> STR_5(8), STR_4(7), STR_3(7), STR_2(5), 
  1641 ;;		 -> STR_1(6), 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;		None               void
  1644 ;; Registers used:
  1645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       0       0       0       0
  1652 ;;      Locals:         0       1       0       0       0
  1653 ;;      Temps:          0       1       0       0       0
  1654 ;;      Totals:         0       2       0       0       0
  1655 ;;Total ram usage:        2 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    4
  1658 ;; This function calls:
  1659 ;;		_lcd_2ndline
  1660 ;;		_lcd_putchar
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function _lcd_putstr
  1668  0319                     _lcd_putstr:	
  1669                           
  1670                           ;incstack = 0
  1671                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1672                           ;lcd_putstr@csz_string stored from wreg
  1673  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1674  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1675  031B  00A8               	movwf	lcd_putstr@csz_string
  1676  031C                     l1601:	
  1677                           ;lcd.c: 244: while (*csz_string != '\0') {
  1678                           
  1679  031C  0828               	movf	lcd_putstr@csz_string,w
  1680  031D  0084               	movwf	4
  1681  031E  120A  118A  241C  120A  118A  	fcall	stringdir
  1682  0323  3A00               	xorlw	0
  1683  0324  1903               	btfsc	3,2
  1684  0325  0008               	return
  1685                           
  1686                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
  1687  0326  0828               	movf	lcd_putstr@csz_string,w
  1688  0327  0084               	movwf	4
  1689  0328  120A  118A  241C  120A  118A  	fcall	stringdir
  1690  032D  3A0A               	xorlw	10
  1691  032E  1903               	skipnz
  1692  032F  2B3A               	goto	l1595
  1693  0330  0828               	movf	lcd_putstr@csz_string,w
  1694  0331  0084               	movwf	4
  1695  0332  120A  118A  241C  120A  118A  	fcall	stringdir
  1696  0337  3A0D               	xorlw	13
  1697  0338  1D03               	skipz
  1698  0339  2B40               	goto	l1597
  1699  033A                     l1595:	
  1700                           
  1701                           ;lcd.c: 248: lcd_2ndline();
  1702  033A  120A  118A  24CD  120A  118A  	fcall	_lcd_2ndline
  1703                           
  1704                           ;lcd.c: 249: }
  1705  033F  2B4E               	goto	l1599
  1706  0340                     l1597:	
  1707                           
  1708                           ;lcd.c: 252: else {
  1709                           ;lcd.c: 253: lcd_putchar(*csz_string);
  1710  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0342  0828               	movf	lcd_putstr@csz_string,w
  1713  0343  0084               	movwf	4
  1714  0344  120A  118A  241C  120A  118A  	fcall	stringdir
  1715  0349  120A  118A  24C1  120A  118A  	fcall	_lcd_putchar
  1716  034E                     l1599:	
  1717                           
  1718                           ;lcd.c: 254: }
  1719                           ;lcd.c: 257: csz_string++;
  1720  034E  3001               	movlw	1
  1721  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1722  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1723  0351  00A7               	movwf	??_lcd_putstr
  1724  0352  0827               	movf	??_lcd_putstr,w
  1725  0353  07A8               	addwf	lcd_putstr@csz_string,f
  1726  0354  2B1C               	goto	l1601
  1727  0355                     __end_of_lcd_putstr:	
  1728                           
  1729                           	psect	text5
  1730  04CD                     __ptext5:	
  1731 ;; *************** function _lcd_2ndline *****************
  1732 ;; Defined at:
  1733 ;;		line 178 in file "../../KJ/Project_6/lcd.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;		None               void
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0
  1749 ;;      Temps:          0       1       0       0       0
  1750 ;;      Totals:         0       1       0       0       0
  1751 ;;Total ram usage:        1 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    3
  1754 ;; This function calls:
  1755 ;;		_send_lcd_data
  1756 ;; This function is called by:
  1757 ;;		_lcd_putstr
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _lcd_2ndline
  1764  04CD                     _lcd_2ndline:	
  1765                           
  1766                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  1767                           
  1768                           ;incstack = 0
  1769                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  1770  04CD  30C0               	movlw	192
  1771  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1772  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1773  04D0  00A5               	movwf	??_lcd_2ndline
  1774  04D1  0825               	movf	??_lcd_2ndline,w
  1775  04D2  00A1               	movwf	send_lcd_data@uc_data
  1776  04D3  3000               	movlw	0
  1777  04D4  120A  118A  22DC   	fcall	_send_lcd_data
  1778  04D7  0008               	return
  1779  04D8                     __end_of_lcd_2ndline:	
  1780                           
  1781                           	psect	text6
  1782  0355                     __ptext6:	
  1783 ;; *************** function _lcd_initialize *****************
  1784 ;; Defined at:
  1785 ;;		line 100 in file "../../KJ/Project_6/lcd.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;		None               void
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0, pclath, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0
  1801 ;;      Temps:          0       2       0       0       0
  1802 ;;      Totals:         0       2       0       0       0
  1803 ;;Total ram usage:        2 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    4
  1806 ;; This function calls:
  1807 ;;		_lcd_clear
  1808 ;;		_send_lcd_data
  1809 ;;		_set_lcd_e
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           
  1816                           ;psect for function _lcd_initialize
  1817  0355                     _lcd_initialize:	
  1818                           
  1819                           ;lcd.c: 104: set_lcd_e(1);
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1823  0355  3001               	movlw	1
  1824  0356  120A  118A  24B4  120A  118A  	fcall	_set_lcd_e
  1825                           
  1826                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1827  035B  3062               	movlw	98
  1828  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1829  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1830  035E  00A6               	movwf	??_lcd_initialize+1
  1831  035F  3065               	movlw	101
  1832  0360  00A5               	movwf	??_lcd_initialize
  1833  0361                     u1387:	
  1834  0361  0BA5               	decfsz	??_lcd_initialize,f
  1835  0362  2B61               	goto	u1387
  1836  0363  0BA6               	decfsz	??_lcd_initialize+1,f
  1837  0364  2B61               	goto	u1387
  1838  0365  2B66               	nop2
  1839                           
  1840                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1841  0366  3038               	movlw	56
  1842  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0369  00A5               	movwf	??_lcd_initialize
  1845  036A  0825               	movf	??_lcd_initialize,w
  1846  036B  00A1               	movwf	send_lcd_data@uc_data
  1847  036C  3000               	movlw	0
  1848  036D  120A  118A  22DC  120A  118A  	fcall	_send_lcd_data
  1849                           
  1850                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1851  0372  3006               	movlw	6
  1852  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0375  00A5               	movwf	??_lcd_initialize
  1855  0376  0825               	movf	??_lcd_initialize,w
  1856  0377  00A1               	movwf	send_lcd_data@uc_data
  1857  0378  3000               	movlw	0
  1858  0379  120A  118A  22DC  120A  118A  	fcall	_send_lcd_data
  1859                           
  1860                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1861  037E  300C               	movlw	12
  1862  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0381  00A5               	movwf	??_lcd_initialize
  1865  0382  0825               	movf	??_lcd_initialize,w
  1866  0383  00A1               	movwf	send_lcd_data@uc_data
  1867  0384  3000               	movlw	0
  1868  0385  120A  118A  22DC  120A  118A  	fcall	_send_lcd_data
  1869                           
  1870                           ;lcd.c: 118: lcd_clear();
  1871  038A  120A  118A  24ED   	fcall	_lcd_clear
  1872  038D  0008               	return
  1873  038E                     __end_of_lcd_initialize:	
  1874                           
  1875                           	psect	text7
  1876  04ED                     __ptext7:	
  1877 ;; *************** function _lcd_clear *****************
  1878 ;; Defined at:
  1879 ;;		line 136 in file "../../KJ/Project_6/lcd.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;		None               void
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0
  1896 ;;      Totals:         0       0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    3
  1900 ;; This function calls:
  1901 ;;		_send_lcd_data
  1902 ;; This function is called by:
  1903 ;;		_lcd_initialize
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           
  1908                           ;psect for function _lcd_clear
  1909  04ED                     _lcd_clear:	
  1910                           
  1911                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1915  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1916  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1917  04EF  01A1               	clrf	send_lcd_data@uc_data
  1918  04F0  0AA1               	incf	send_lcd_data@uc_data,f
  1919  04F1  3000               	movlw	0
  1920  04F2  120A  118A  22DC   	fcall	_send_lcd_data
  1921  04F5  0008               	return
  1922  04F6                     __end_of_lcd_clear:	
  1923                           
  1924                           	psect	text8
  1925  04D8                     __ptext8:	
  1926 ;; *************** function _lcd_home *****************
  1927 ;; Defined at:
  1928 ;;		line 157 in file "../../KJ/Project_6/lcd.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;		None               void
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, pclath, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1942 ;;      Params:         0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0
  1944 ;;      Temps:          0       1       0       0       0
  1945 ;;      Totals:         0       1       0       0       0
  1946 ;;Total ram usage:        1 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    3
  1949 ;; This function calls:
  1950 ;;		_send_lcd_data
  1951 ;; This function is called by:
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function _lcd_home
  1958  04D8                     _lcd_home:	
  1959                           
  1960                           ;lcd.c: 160: send_lcd_data(0, 0b00000010);
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in _lcd_home: [wreg+status,2+status,0+pclath+cstack]
  1964  04D8  3002               	movlw	2
  1965  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1966  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1967  04DB  00A5               	movwf	??_lcd_home
  1968  04DC  0825               	movf	??_lcd_home,w
  1969  04DD  00A1               	movwf	send_lcd_data@uc_data
  1970  04DE  3000               	movlw	0
  1971  04DF  120A  118A  22DC   	fcall	_send_lcd_data
  1972  04E2  0008               	return
  1973  04E3                     __end_of_lcd_home:	
  1974                           
  1975                           	psect	text9
  1976  049A                     __ptext9:	
  1977 ;; *************** function _lcd_goto *****************
  1978 ;; Defined at:
  1979 ;;		line 199 in file "../../KJ/Project_6/lcd.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  uc_position     1    wreg     unsigned char 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  uc_position     1    6[BANK0 ] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;		None               void
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, pclath, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         0       0       0       0       0
  1994 ;;      Locals:         0       1       0       0       0
  1995 ;;      Temps:          0       1       0       0       0
  1996 ;;      Totals:         0       2       0       0       0
  1997 ;;Total ram usage:        2 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    3
  2000 ;; This function calls:
  2001 ;;		_send_lcd_data
  2002 ;; This function is called by:
  2003 ;;		_main
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           
  2008                           ;psect for function _lcd_goto
  2009  049A                     _lcd_goto:	
  2010                           
  2011                           ;incstack = 0
  2012                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2013                           ;lcd_goto@uc_position stored from wreg
  2014  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2015  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2016  049C  00A6               	movwf	lcd_goto@uc_position
  2017                           
  2018                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  2019  049D  0826               	movf	lcd_goto@uc_position,w
  2020  049E  3880               	iorlw	128
  2021  049F  00A5               	movwf	??_lcd_goto
  2022  04A0  0825               	movf	??_lcd_goto,w
  2023  04A1  00A1               	movwf	send_lcd_data@uc_data
  2024  04A2  3000               	movlw	0
  2025  04A3  120A  118A  22DC   	fcall	_send_lcd_data
  2026  04A6  0008               	return
  2027  04A7                     __end_of_lcd_goto:	
  2028                           
  2029                           	psect	text10
  2030  01D0                     __ptext10:	
  2031 ;; *************** function _lcd_bcd *****************
  2032 ;; Defined at:
  2033 ;;		line 274 in file "../../KJ/Project_6/lcd.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  uc_digit        1    wreg     unsigned char 
  2036 ;;  ui_number       2   14[BANK0 ] unsigned int 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  uc_digit        1   30[BANK0 ] unsigned char 
  2039 ;;  ui_decimal     10   20[BANK0 ] unsigned int [5]
  2040 ;; Return value:  Size  Location     Type
  2041 ;;		None               void
  2042 ;; Registers used:
  2043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         0       2       0       0       0
  2050 ;;      Locals:         0      11       0       0       0
  2051 ;;      Temps:          0       4       0       0       0
  2052 ;;      Totals:         0      17       0       0       0
  2053 ;;Total ram usage:       17 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    4
  2056 ;; This function calls:
  2057 ;;		___lwdiv
  2058 ;;		___lwmod
  2059 ;;		_lcd_putchar
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function _lcd_bcd
  2067  01D0                     _lcd_bcd:	
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2071                           ;lcd_bcd@uc_digit stored from wreg
  2072  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2073  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2074  01D2  00BE               	movwf	lcd_bcd@uc_digit
  2075                           
  2076                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  2077  01D3  3034               	movlw	lcd_bcd@ui_decimal& (0+255)
  2078  01D4  0084               	movwf	4
  2079  01D5  304D               	movlw	low lcd_bcd@F1683
  2080  01D6  00B0               	movwf	??_lcd_bcd
  2081  01D7  0804               	movf	4,w
  2082  01D8  00B1               	movwf	??_lcd_bcd+1
  2083  01D9  300A               	movlw	10
  2084  01DA  00B2               	movwf	??_lcd_bcd+2
  2085  01DB                     u1130:	
  2086  01DB  0830               	movf	??_lcd_bcd,w
  2087  01DC  0084               	movwf	4
  2088  01DD  1383               	bcf	3,7	;select IRP bank0
  2089  01DE  0800               	movf	0,w
  2090  01DF  00B3               	movwf	??_lcd_bcd+3
  2091  01E0  0AB0               	incf	??_lcd_bcd,f
  2092  01E1  0831               	movf	??_lcd_bcd+1,w
  2093  01E2  0084               	movwf	4
  2094  01E3  0833               	movf	??_lcd_bcd+3,w
  2095  01E4  0080               	movwf	0
  2096  01E5  0AB1               	incf	??_lcd_bcd+1,f
  2097  01E6  0BB2               	decfsz	??_lcd_bcd+2,f
  2098  01E7  29DB               	goto	u1130
  2099                           
  2100                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  2101  01E8  3010               	movlw	16
  2102  01E9  00A6               	movwf	___lwdiv@divisor
  2103  01EA  3027               	movlw	39
  2104  01EB  00A7               	movwf	___lwdiv@divisor+1
  2105  01EC  082F               	movf	lcd_bcd@ui_number+1,w
  2106  01ED  00A9               	movwf	___lwdiv@dividend+1
  2107  01EE  082E               	movf	lcd_bcd@ui_number,w
  2108  01EF  00A8               	movwf	___lwdiv@dividend
  2109  01F0  120A  118A  229E  120A  118A  	fcall	___lwdiv
  2110  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2111  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2112  01F7  0827               	movf	?___lwdiv+1,w
  2113  01F8  00BD               	movwf	lcd_bcd@ui_decimal+9
  2114  01F9  0826               	movf	?___lwdiv,w
  2115  01FA  00BC               	movwf	lcd_bcd@ui_decimal+8
  2116                           
  2117                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  2118  01FB  3010               	movlw	16
  2119  01FC  00A0               	movwf	___lwmod@divisor
  2120  01FD  3027               	movlw	39
  2121  01FE  00A1               	movwf	___lwmod@divisor+1
  2122  01FF  082F               	movf	lcd_bcd@ui_number+1,w
  2123  0200  00A3               	movwf	___lwmod@dividend+1
  2124  0201  082E               	movf	lcd_bcd@ui_number,w
  2125  0202  00A2               	movwf	___lwmod@dividend
  2126  0203  120A  118A  238E  120A  118A  	fcall	___lwmod
  2127  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2129  020A  0821               	movf	?___lwmod+1,w
  2130  020B  00BB               	movwf	lcd_bcd@ui_decimal+7
  2131  020C  0820               	movf	?___lwmod,w
  2132  020D  00BA               	movwf	lcd_bcd@ui_decimal+6
  2133                           
  2134                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  2135  020E  30E8               	movlw	232
  2136  020F  00A0               	movwf	___lwmod@divisor
  2137  0210  3003               	movlw	3
  2138  0211  00A1               	movwf	___lwmod@divisor+1
  2139  0212  083B               	movf	lcd_bcd@ui_decimal+7,w
  2140  0213  00A3               	movwf	___lwmod@dividend+1
  2141  0214  083A               	movf	lcd_bcd@ui_decimal+6,w
  2142  0215  00A2               	movwf	___lwmod@dividend
  2143  0216  120A  118A  238E  120A  118A  	fcall	___lwmod
  2144  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2145  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2146  021D  0821               	movf	?___lwmod+1,w
  2147  021E  00B9               	movwf	lcd_bcd@ui_decimal+5
  2148  021F  0820               	movf	?___lwmod,w
  2149  0220  00B8               	movwf	lcd_bcd@ui_decimal+4
  2150                           
  2151                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  2152  0221  30E8               	movlw	232
  2153  0222  00A6               	movwf	___lwdiv@divisor
  2154  0223  3003               	movlw	3
  2155  0224  00A7               	movwf	___lwdiv@divisor+1
  2156  0225  083B               	movf	lcd_bcd@ui_decimal+7,w
  2157  0226  00A9               	movwf	___lwdiv@dividend+1
  2158  0227  083A               	movf	lcd_bcd@ui_decimal+6,w
  2159  0228  00A8               	movwf	___lwdiv@dividend
  2160  0229  120A  118A  229E  120A  118A  	fcall	___lwdiv
  2161  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2162  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2163  0230  0827               	movf	?___lwdiv+1,w
  2164  0231  00BB               	movwf	lcd_bcd@ui_decimal+7
  2165  0232  0826               	movf	?___lwdiv,w
  2166  0233  00BA               	movwf	lcd_bcd@ui_decimal+6
  2167                           
  2168                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  2169  0234  3064               	movlw	100
  2170  0235  00A0               	movwf	___lwmod@divisor
  2171  0236  3000               	movlw	0
  2172  0237  00A1               	movwf	___lwmod@divisor+1
  2173  0238  0839               	movf	lcd_bcd@ui_decimal+5,w
  2174  0239  00A3               	movwf	___lwmod@dividend+1
  2175  023A  0838               	movf	lcd_bcd@ui_decimal+4,w
  2176  023B  00A2               	movwf	___lwmod@dividend
  2177  023C  120A  118A  238E  120A  118A  	fcall	___lwmod
  2178  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0243  0821               	movf	?___lwmod+1,w
  2181  0244  00B7               	movwf	lcd_bcd@ui_decimal+3
  2182  0245  0820               	movf	?___lwmod,w
  2183  0246  00B6               	movwf	lcd_bcd@ui_decimal+2
  2184                           
  2185                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  2186  0247  3064               	movlw	100
  2187  0248  00A6               	movwf	___lwdiv@divisor
  2188  0249  3000               	movlw	0
  2189  024A  00A7               	movwf	___lwdiv@divisor+1
  2190  024B  0839               	movf	lcd_bcd@ui_decimal+5,w
  2191  024C  00A9               	movwf	___lwdiv@dividend+1
  2192  024D  0838               	movf	lcd_bcd@ui_decimal+4,w
  2193  024E  00A8               	movwf	___lwdiv@dividend
  2194  024F  120A  118A  229E  120A  118A  	fcall	___lwdiv
  2195  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0255  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0256  0827               	movf	?___lwdiv+1,w
  2198  0257  00B9               	movwf	lcd_bcd@ui_decimal+5
  2199  0258  0826               	movf	?___lwdiv,w
  2200  0259  00B8               	movwf	lcd_bcd@ui_decimal+4
  2201                           
  2202                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  2203  025A  300A               	movlw	10
  2204  025B  00A0               	movwf	___lwmod@divisor
  2205  025C  3000               	movlw	0
  2206  025D  00A1               	movwf	___lwmod@divisor+1
  2207  025E  0837               	movf	lcd_bcd@ui_decimal+3,w
  2208  025F  00A3               	movwf	___lwmod@dividend+1
  2209  0260  0836               	movf	lcd_bcd@ui_decimal+2,w
  2210  0261  00A2               	movwf	___lwmod@dividend
  2211  0262  120A  118A  238E  120A  118A  	fcall	___lwmod
  2212  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0269  0821               	movf	?___lwmod+1,w
  2215  026A  00B5               	movwf	lcd_bcd@ui_decimal+1
  2216  026B  0820               	movf	?___lwmod,w
  2217  026C  00B4               	movwf	lcd_bcd@ui_decimal
  2218                           
  2219                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  2220  026D  300A               	movlw	10
  2221  026E  00A6               	movwf	___lwdiv@divisor
  2222  026F  3000               	movlw	0
  2223  0270  00A7               	movwf	___lwdiv@divisor+1
  2224  0271  0837               	movf	lcd_bcd@ui_decimal+3,w
  2225  0272  00A9               	movwf	___lwdiv@dividend+1
  2226  0273  0836               	movf	lcd_bcd@ui_decimal+2,w
  2227  0274  00A8               	movwf	___lwdiv@dividend
  2228  0275  120A  118A  229E  120A  118A  	fcall	___lwdiv
  2229  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2230  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2231  027C  0827               	movf	?___lwdiv+1,w
  2232  027D  00B7               	movwf	lcd_bcd@ui_decimal+3
  2233  027E  0826               	movf	?___lwdiv,w
  2234  027F  00B6               	movwf	lcd_bcd@ui_decimal+2
  2235                           
  2236                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  2237  0280  3006               	movlw	6
  2238  0281  023E               	subwf	lcd_bcd@uc_digit,w
  2239  0282  1C03               	skipc
  2240  0283  2A88               	goto	l1625
  2241  0284  3005               	movlw	5
  2242  0285  00B0               	movwf	??_lcd_bcd
  2243  0286  0830               	movf	??_lcd_bcd,w
  2244  0287  00BE               	movwf	lcd_bcd@uc_digit
  2245  0288                     l1625:	
  2246                           
  2247                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  2248  0288  083E               	movf	lcd_bcd@uc_digit,w
  2249  0289  1903               	btfsc	3,2
  2250  028A  0008               	return
  2251                           
  2252                           ;lcd.c: 289: {
  2253                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  2254  028B  083E               	movf	lcd_bcd@uc_digit,w
  2255  028C  00B0               	movwf	??_lcd_bcd
  2256  028D  0730               	addwf	??_lcd_bcd,w
  2257  028E  3EFE               	addlw	254
  2258  028F  3E34               	addlw	(low (lcd_bcd@ui_decimal| 0))& (0+255)
  2259  0290  0084               	movwf	4
  2260  0291  1383               	bcf	3,7	;select IRP bank0
  2261  0292  0800               	movf	0,w
  2262  0293  3E30               	addlw	48
  2263  0294  120A  118A  24C1  120A  118A  	fcall	_lcd_putchar
  2264  0299  3001               	movlw	1
  2265  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2266  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2267  029C  02BE               	subwf	lcd_bcd@uc_digit,f
  2268  029D  2A88               	goto	l1625
  2269  029E                     __end_of_lcd_bcd:	
  2270                           
  2271                           	psect	text11
  2272  04C1                     __ptext11:	
  2273 ;; *************** function _lcd_putchar *****************
  2274 ;; Defined at:
  2275 ;;		line 220 in file "../../KJ/Project_6/lcd.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  c_data          1    wreg     unsigned char 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  c_data          1    6[BANK0 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;		None               void
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0, pclath, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2289 ;;      Params:         0       0       0       0       0
  2290 ;;      Locals:         0       1       0       0       0
  2291 ;;      Temps:          0       1       0       0       0
  2292 ;;      Totals:         0       2       0       0       0
  2293 ;;Total ram usage:        2 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    3
  2296 ;; This function calls:
  2297 ;;		_send_lcd_data
  2298 ;; This function is called by:
  2299 ;;		_lcd_putstr
  2300 ;;		_lcd_bcd
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           
  2305                           ;psect for function _lcd_putchar
  2306  04C1                     _lcd_putchar:	
  2307                           
  2308                           ;incstack = 0
  2309                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  2310                           ;lcd_putchar@c_data stored from wreg
  2311  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2312  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2313  04C3  00A6               	movwf	lcd_putchar@c_data
  2314                           
  2315                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  2316  04C4  0826               	movf	lcd_putchar@c_data,w
  2317  04C5  00A5               	movwf	??_lcd_putchar
  2318  04C6  0825               	movf	??_lcd_putchar,w
  2319  04C7  00A1               	movwf	send_lcd_data@uc_data
  2320  04C8  3001               	movlw	1
  2321  04C9  120A  118A  22DC   	fcall	_send_lcd_data
  2322  04CC  0008               	return
  2323  04CD                     __end_of_lcd_putchar:	
  2324                           
  2325                           	psect	text12
  2326  02DC                     __ptext12:	
  2327 ;; *************** function _send_lcd_data *****************
  2328 ;; Defined at:
  2329 ;;		line 308 in file "../../KJ/Project_6/lcd.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  b_rs            1    wreg     unsigned char 
  2332 ;;  uc_data         1    1[BANK0 ] unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  b_rs            1    4[BANK0 ] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;		None               void
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       1       0       0       0
  2345 ;;      Locals:         0       1       0       0       0
  2346 ;;      Temps:          0       2       0       0       0
  2347 ;;      Totals:         0       4       0       0       0
  2348 ;;Total ram usage:        4 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    2
  2351 ;; This function calls:
  2352 ;;		_set_lcd_data
  2353 ;;		_set_lcd_e
  2354 ;;		_set_lcd_rs
  2355 ;; This function is called by:
  2356 ;;		_lcd_initialize
  2357 ;;		_lcd_clear
  2358 ;;		_lcd_home
  2359 ;;		_lcd_2ndline
  2360 ;;		_lcd_goto
  2361 ;;		_lcd_putchar
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function _send_lcd_data
  2368  02DC                     _send_lcd_data:	
  2369                           
  2370                           ;incstack = 0
  2371                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2372                           ;send_lcd_data@b_rs stored from wreg
  2373  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2374  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2375  02DE  00A4               	movwf	send_lcd_data@b_rs
  2376                           
  2377                           ;lcd.c: 311: set_lcd_rs(b_rs);
  2378  02DF  0824               	movf	send_lcd_data@b_rs,w
  2379  02E0  120A  118A  24A7  120A  118A  	fcall	_set_lcd_rs
  2380                           
  2381                           ;lcd.c: 312: set_lcd_data(uc_data);
  2382  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2383  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2384  02E7  0821               	movf	send_lcd_data@uc_data,w
  2385  02E8  120A  118A  24FE  120A  118A  	fcall	_set_lcd_data
  2386                           
  2387                           ;lcd.c: 315: set_lcd_e(1);
  2388  02ED  3001               	movlw	1
  2389  02EE  120A  118A  24B4  120A  118A  	fcall	_set_lcd_e
  2390                           
  2391                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  2392  02F3  3007               	movlw	7
  2393  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2394  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2395  02F6  00A3               	movwf	??_send_lcd_data+1
  2396  02F7  307D               	movlw	125
  2397  02F8  00A2               	movwf	??_send_lcd_data
  2398  02F9                     u1397:	
  2399  02F9  0BA2               	decfsz	??_send_lcd_data,f
  2400  02FA  2AF9               	goto	u1397
  2401  02FB  0BA3               	decfsz	??_send_lcd_data+1,f
  2402  02FC  2AF9               	goto	u1397
  2403                           
  2404                           ;lcd.c: 317: set_lcd_e(0);
  2405  02FD  3000               	movlw	0
  2406  02FE  120A  118A  24B4  120A  118A  	fcall	_set_lcd_e
  2407                           
  2408                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  2409  0303  300D               	movlw	13
  2410  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0306  00A3               	movwf	??_send_lcd_data+1
  2413  0307  30FB               	movlw	251
  2414  0308  00A2               	movwf	??_send_lcd_data
  2415  0309                     u1407:	
  2416  0309  0BA2               	decfsz	??_send_lcd_data,f
  2417  030A  2B09               	goto	u1407
  2418  030B  0BA3               	decfsz	??_send_lcd_data+1,f
  2419  030C  2B09               	goto	u1407
  2420  030D  2B0E               	nop2
  2421                           
  2422                           ;lcd.c: 321: set_lcd_rs(0);
  2423  030E  3000               	movlw	0
  2424  030F  120A  118A  24A7  120A  118A  	fcall	_set_lcd_rs
  2425                           
  2426                           ;lcd.c: 322: set_lcd_data(0);
  2427  0314  3000               	movlw	0
  2428  0315  120A  118A  24FE   	fcall	_set_lcd_data
  2429  0318  0008               	return
  2430  0319                     __end_of_send_lcd_data:	
  2431                           
  2432                           	psect	text13
  2433  04A7                     __ptext13:	
  2434 ;; *************** function _set_lcd_rs *****************
  2435 ;; Defined at:
  2436 ;;		line 360 in file "../../KJ/Project_6/lcd.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  b_output        1    wreg     unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  b_output        1    0[BANK0 ] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;		None               void
  2443 ;; Registers used:
  2444 ;;		wreg
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         0       0       0       0       0
  2451 ;;      Locals:         0       1       0       0       0
  2452 ;;      Temps:          0       0       0       0       0
  2453 ;;      Totals:         0       1       0       0       0
  2454 ;;Total ram usage:        1 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    1
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_send_lcd_data
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _set_lcd_rs
  2466  04A7                     _set_lcd_rs:	
  2467                           
  2468                           ;incstack = 0
  2469                           ; Regs used in _set_lcd_rs: [wreg]
  2470                           ;set_lcd_rs@b_output stored from wreg
  2471  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2472  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2473  04A9  00A0               	movwf	set_lcd_rs@b_output
  2474                           
  2475                           ;lcd.c: 362: RB4 = b_output;
  2476  04AA  1C20               	btfss	set_lcd_rs@b_output,0
  2477  04AB  2CB0               	goto	u1010
  2478  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2479  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2480  04AE  1606               	bsf	6,4	;volatile
  2481  04AF  0008               	return
  2482  04B0                     u1010:	
  2483  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2484  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2485  04B2  1206               	bcf	6,4	;volatile
  2486  04B3  0008               	return
  2487  04B4                     __end_of_set_lcd_rs:	
  2488                           
  2489                           	psect	text14
  2490  04B4                     __ptext14:	
  2491 ;; *************** function _set_lcd_e *****************
  2492 ;; Defined at:
  2493 ;;		line 340 in file "../../KJ/Project_6/lcd.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  b_output        1    wreg     unsigned char 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  b_output        1    0[BANK0 ] unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;		None               void
  2500 ;; Registers used:
  2501 ;;		wreg
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2507 ;;      Params:         0       0       0       0       0
  2508 ;;      Locals:         0       1       0       0       0
  2509 ;;      Temps:          0       0       0       0       0
  2510 ;;      Totals:         0       1       0       0       0
  2511 ;;Total ram usage:        1 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_lcd_initialize
  2518 ;;		_send_lcd_data
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _set_lcd_e
  2524  04B4                     _set_lcd_e:	
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _set_lcd_e: [wreg]
  2528                           ;set_lcd_e@b_output stored from wreg
  2529  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2530  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2531  04B6  00A0               	movwf	set_lcd_e@b_output
  2532                           
  2533                           ;lcd.c: 342: RB5 = b_output;
  2534  04B7  1C20               	btfss	set_lcd_e@b_output,0
  2535  04B8  2CBD               	goto	u990
  2536  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2537  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2538  04BB  1686               	bsf	6,5	;volatile
  2539  04BC  0008               	return
  2540  04BD                     u990:	
  2541  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2542  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2543  04BF  1286               	bcf	6,5	;volatile
  2544  04C0  0008               	return
  2545  04C1                     __end_of_set_lcd_e:	
  2546                           
  2547                           	psect	text15
  2548  04FE                     __ptext15:	
  2549 ;; *************** function _set_lcd_data *****************
  2550 ;; Defined at:
  2551 ;;		line 380 in file "../../KJ/Project_6/lcd.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  uc_data         1    wreg     unsigned char 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  uc_data         1    0[BANK0 ] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;		None               void
  2558 ;; Registers used:
  2559 ;;		wreg
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       0       0       0       0
  2566 ;;      Locals:         0       1       0       0       0
  2567 ;;      Temps:          0       0       0       0       0
  2568 ;;      Totals:         0       1       0       0       0
  2569 ;;Total ram usage:        1 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_send_lcd_data
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _set_lcd_data
  2581  04FE                     _set_lcd_data:	
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _set_lcd_data: [wreg]
  2585                           ;set_lcd_data@uc_data stored from wreg
  2586  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2587  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0500  00A0               	movwf	set_lcd_data@uc_data
  2589                           
  2590                           ;lcd.c: 382: PORTD = uc_data;
  2591  0501  0820               	movf	set_lcd_data@uc_data,w
  2592  0502  0088               	movwf	8	;volatile
  2593  0503  0008               	return
  2594  0504                     __end_of_set_lcd_data:	
  2595                           
  2596                           	psect	text16
  2597  038E                     __ptext16:	
  2598 ;; *************** function ___lwmod *****************
  2599 ;; Defined at:
  2600 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  divisor         2    0[BANK0 ] unsigned int 
  2603 ;;  dividend        2    2[BANK0 ] unsigned int 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  counter         1    5[BANK0 ] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  2    0[BANK0 ] unsigned int 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       4       0       0       0
  2616 ;;      Locals:         0       1       0       0       0
  2617 ;;      Temps:          0       1       0       0       0
  2618 ;;      Totals:         0       6       0       0       0
  2619 ;;Total ram usage:        6 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    1
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_lcd_bcd
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function ___lwmod
  2631  038E                     ___lwmod:	
  2632                           
  2633                           ;incstack = 0
  2634                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2635  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2636  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0390  0820               	movf	___lwmod@divisor,w
  2638  0391  0421               	iorwf	___lwmod@divisor+1,w
  2639  0392  1903               	btfsc	3,2
  2640  0393  2BBD               	goto	l1545
  2641  0394  01A5               	clrf	___lwmod@counter
  2642  0395  0AA5               	incf	___lwmod@counter,f
  2643  0396                     l1535:	
  2644  0396  1BA1               	btfsc	___lwmod@divisor+1,7
  2645  0397  2BA4               	goto	l1537
  2646  0398  3001               	movlw	1
  2647  0399                     u1045:	
  2648  0399  1003               	clrc
  2649  039A  0DA0               	rlf	___lwmod@divisor,f
  2650  039B  0DA1               	rlf	___lwmod@divisor+1,f
  2651  039C  3EFF               	addlw	-1
  2652  039D  1D03               	skipz
  2653  039E  2B99               	goto	u1045
  2654  039F  3001               	movlw	1
  2655  03A0  00A4               	movwf	??___lwmod
  2656  03A1  0824               	movf	??___lwmod,w
  2657  03A2  07A5               	addwf	___lwmod@counter,f
  2658  03A3  2B96               	goto	l1535
  2659  03A4                     l1537:	
  2660  03A4  0821               	movf	___lwmod@divisor+1,w
  2661  03A5  0223               	subwf	___lwmod@dividend+1,w
  2662  03A6  1D03               	skipz
  2663  03A7  2BAA               	goto	u1065
  2664  03A8  0820               	movf	___lwmod@divisor,w
  2665  03A9  0222               	subwf	___lwmod@dividend,w
  2666  03AA                     u1065:	
  2667  03AA  1C03               	skipc
  2668  03AB  2BB2               	goto	l1541
  2669  03AC  0820               	movf	___lwmod@divisor,w
  2670  03AD  02A2               	subwf	___lwmod@dividend,f
  2671  03AE  0821               	movf	___lwmod@divisor+1,w
  2672  03AF  1C03               	skipc
  2673  03B0  03A3               	decf	___lwmod@dividend+1,f
  2674  03B1  02A3               	subwf	___lwmod@dividend+1,f
  2675  03B2                     l1541:	
  2676  03B2  3001               	movlw	1
  2677  03B3                     u1075:	
  2678  03B3  1003               	clrc
  2679  03B4  0CA1               	rrf	___lwmod@divisor+1,f
  2680  03B5  0CA0               	rrf	___lwmod@divisor,f
  2681  03B6  3EFF               	addlw	-1
  2682  03B7  1D03               	skipz
  2683  03B8  2BB3               	goto	u1075
  2684  03B9  3001               	movlw	1
  2685  03BA  02A5               	subwf	___lwmod@counter,f
  2686  03BB  1D03               	btfss	3,2
  2687  03BC  2BA4               	goto	l1537
  2688  03BD                     l1545:	
  2689  03BD  0823               	movf	___lwmod@dividend+1,w
  2690  03BE  00A1               	movwf	?___lwmod+1
  2691  03BF  0822               	movf	___lwmod@dividend,w
  2692  03C0  00A0               	movwf	?___lwmod
  2693  03C1  0008               	return
  2694  03C2                     __end_of___lwmod:	
  2695                           
  2696                           	psect	text17
  2697  029E                     __ptext17:	
  2698 ;; *************** function ___lwdiv *****************
  2699 ;; Defined at:
  2700 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  divisor         2    6[BANK0 ] unsigned int 
  2703 ;;  dividend        2    8[BANK0 ] unsigned int 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  quotient        2   11[BANK0 ] unsigned int 
  2706 ;;  counter         1   13[BANK0 ] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  2    6[BANK0 ] unsigned int 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2716 ;;      Params:         0       4       0       0       0
  2717 ;;      Locals:         0       3       0       0       0
  2718 ;;      Temps:          0       1       0       0       0
  2719 ;;      Totals:         0       8       0       0       0
  2720 ;;Total ram usage:        8 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_lcd_bcd
  2727 ;;		_main
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           
  2732                           ;psect for function ___lwdiv
  2733  029E                     ___lwdiv:	
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2737  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2738  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2739  02A0  01AB               	clrf	___lwdiv@quotient
  2740  02A1  01AC               	clrf	___lwdiv@quotient+1
  2741  02A2  0826               	movf	___lwdiv@divisor,w
  2742  02A3  0427               	iorwf	___lwdiv@divisor+1,w
  2743  02A4  1903               	btfsc	3,2
  2744  02A5  2AD7               	goto	l1185
  2745  02A6  01AD               	clrf	___lwdiv@counter
  2746  02A7  0AAD               	incf	___lwdiv@counter,f
  2747  02A8                     l1173:	
  2748  02A8  1BA7               	btfsc	___lwdiv@divisor+1,7
  2749  02A9  2AB6               	goto	l1175
  2750  02AA  3001               	movlw	1
  2751  02AB                     u565:	
  2752  02AB  1003               	clrc
  2753  02AC  0DA6               	rlf	___lwdiv@divisor,f
  2754  02AD  0DA7               	rlf	___lwdiv@divisor+1,f
  2755  02AE  3EFF               	addlw	-1
  2756  02AF  1D03               	skipz
  2757  02B0  2AAB               	goto	u565
  2758  02B1  3001               	movlw	1
  2759  02B2  00AA               	movwf	??___lwdiv
  2760  02B3  082A               	movf	??___lwdiv,w
  2761  02B4  07AD               	addwf	___lwdiv@counter,f
  2762  02B5  2AA8               	goto	l1173
  2763  02B6                     l1175:	
  2764  02B6  3001               	movlw	1
  2765  02B7                     u585:	
  2766  02B7  1003               	clrc
  2767  02B8  0DAB               	rlf	___lwdiv@quotient,f
  2768  02B9  0DAC               	rlf	___lwdiv@quotient+1,f
  2769  02BA  3EFF               	addlw	-1
  2770  02BB  1D03               	skipz
  2771  02BC  2AB7               	goto	u585
  2772  02BD  0827               	movf	___lwdiv@divisor+1,w
  2773  02BE  0229               	subwf	___lwdiv@dividend+1,w
  2774  02BF  1D03               	skipz
  2775  02C0  2AC3               	goto	u595
  2776  02C1  0826               	movf	___lwdiv@divisor,w
  2777  02C2  0228               	subwf	___lwdiv@dividend,w
  2778  02C3                     u595:	
  2779  02C3  1C03               	skipc
  2780  02C4  2ACC               	goto	l1181
  2781  02C5  0826               	movf	___lwdiv@divisor,w
  2782  02C6  02A8               	subwf	___lwdiv@dividend,f
  2783  02C7  0827               	movf	___lwdiv@divisor+1,w
  2784  02C8  1C03               	skipc
  2785  02C9  03A9               	decf	___lwdiv@dividend+1,f
  2786  02CA  02A9               	subwf	___lwdiv@dividend+1,f
  2787  02CB  142B               	bsf	___lwdiv@quotient,0
  2788  02CC                     l1181:	
  2789  02CC  3001               	movlw	1
  2790  02CD                     u605:	
  2791  02CD  1003               	clrc
  2792  02CE  0CA7               	rrf	___lwdiv@divisor+1,f
  2793  02CF  0CA6               	rrf	___lwdiv@divisor,f
  2794  02D0  3EFF               	addlw	-1
  2795  02D1  1D03               	skipz
  2796  02D2  2ACD               	goto	u605
  2797  02D3  3001               	movlw	1
  2798  02D4  02AD               	subwf	___lwdiv@counter,f
  2799  02D5  1D03               	btfss	3,2
  2800  02D6  2AB6               	goto	l1175
  2801  02D7                     l1185:	
  2802  02D7  082C               	movf	___lwdiv@quotient+1,w
  2803  02D8  00A7               	movwf	?___lwdiv+1
  2804  02D9  082B               	movf	___lwdiv@quotient,w
  2805  02DA  00A6               	movwf	?___lwdiv
  2806  02DB  0008               	return
  2807  02DC                     __end_of___lwdiv:	
  2808                           
  2809                           	psect	text18
  2810  0504                     __ptext18:	
  2811 ;; *************** function _adc_on *****************
  2812 ;; Defined at:
  2813 ;;		line 62 in file "../../KJ/Project_6/adc.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;		None               void
  2820 ;; Registers used:
  2821 ;;		None
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    1
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_main
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           
  2842                           ;psect for function _adc_on
  2843  0504                     _adc_on:	
  2844                           
  2845                           ;adc.c: 65: ADON = 1;
  2846                           
  2847                           ;incstack = 0
  2848                           ; Regs used in _adc_on: []
  2849  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2851  0506  141F               	bsf	31,0	;volatile
  2852  0507  0008               	return
  2853  0508                     __end_of_adc_on:	
  2854                           
  2855                           	psect	text19
  2856  048A                     __ptext19:	
  2857 ;; *************** function _adc_initialize *****************
  2858 ;; Defined at:
  2859 ;;		line 28 in file "../../KJ/Project_6/adc.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;		None               void
  2866 ;; Registers used:
  2867 ;;		None
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2873 ;;      Params:         0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0
  2876 ;;      Totals:         0       0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    1
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function _adc_initialize
  2889  048A                     _adc_initialize:	
  2890                           
  2891                           ;adc.c: 31: ADCS1 = 1;
  2892                           
  2893                           ;incstack = 0
  2894                           ; Regs used in _adc_initialize: []
  2895  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2896  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2897  048C  179F               	bsf	31,7	;volatile
  2898                           
  2899                           ;adc.c: 32: ADCS0 = 0;
  2900  048D  131F               	bcf	31,6	;volatile
  2901                           
  2902                           ;adc.c: 35: ANS0 = 1;
  2903  048E  1683               	bsf	3,5	;RP0=1, select bank3
  2904  048F  1703               	bsf	3,6	;RP1=1, select bank3
  2905  0490  1408               	bsf	8,0	;volatile
  2906                           
  2907                           ;adc.c: 38: ADFM = 1;
  2908  0491  1683               	bsf	3,5	;RP0=1, select bank1
  2909  0492  1303               	bcf	3,6	;RP1=0, select bank1
  2910  0493  179F               	bsf	31,7	;volatile
  2911                           
  2912                           ;adc.c: 40: VCFG1 = 0;
  2913  0494  129F               	bcf	31,5	;volatile
  2914                           
  2915                           ;adc.c: 42: VCFG0 = 0;
  2916  0495  121F               	bcf	31,4	;volatile
  2917                           
  2918                           ;adc.c: 45: ADON = 0;
  2919  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0498  101F               	bcf	31,0	;volatile
  2922  0499  0008               	return
  2923  049A                     __end_of_adc_initialize:	
  2924                           
  2925                           	psect	text20
  2926  0467                     __ptext20:	
  2927 ;; *************** function ___wmul *****************
  2928 ;; Defined at:
  2929 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2932 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  product         2    4[BANK0 ] unsigned int 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2    0[BANK0 ] unsigned int 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2944 ;;      Params:         0       4       0       0       0
  2945 ;;      Locals:         0       2       0       0       0
  2946 ;;      Temps:          0       0       0       0       0
  2947 ;;      Totals:         0       6       0       0       0
  2948 ;;Total ram usage:        6 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    1
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function ___wmul
  2960  0467                     ___wmul:	
  2961                           
  2962                           ;incstack = 0
  2963                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2964  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0469  01A4               	clrf	___wmul@product
  2967  046A  01A5               	clrf	___wmul@product+1
  2968  046B                     l1669:	
  2969  046B  1C20               	btfss	___wmul@multiplier,0
  2970  046C  2C73               	goto	l387
  2971  046D  0822               	movf	___wmul@multiplicand,w
  2972  046E  07A4               	addwf	___wmul@product,f
  2973  046F  1803               	skipnc
  2974  0470  0AA5               	incf	___wmul@product+1,f
  2975  0471  0823               	movf	___wmul@multiplicand+1,w
  2976  0472  07A5               	addwf	___wmul@product+1,f
  2977  0473                     l387:	
  2978  0473  3001               	movlw	1
  2979  0474                     u1205:	
  2980  0474  1003               	clrc
  2981  0475  0DA2               	rlf	___wmul@multiplicand,f
  2982  0476  0DA3               	rlf	___wmul@multiplicand+1,f
  2983  0477  3EFF               	addlw	-1
  2984  0478  1D03               	skipz
  2985  0479  2C74               	goto	u1205
  2986  047A  3001               	movlw	1
  2987  047B                     u1215:	
  2988  047B  1003               	clrc
  2989  047C  0CA1               	rrf	___wmul@multiplier+1,f
  2990  047D  0CA0               	rrf	___wmul@multiplier,f
  2991  047E  3EFF               	addlw	-1
  2992  047F  1D03               	skipz
  2993  0480  2C7B               	goto	u1215
  2994  0481  0820               	movf	___wmul@multiplier,w
  2995  0482  0421               	iorwf	___wmul@multiplier+1,w
  2996  0483  1D03               	btfss	3,2
  2997  0484  2C6B               	goto	l1669
  2998  0485  0825               	movf	___wmul@product+1,w
  2999  0486  00A1               	movwf	?___wmul+1
  3000  0487  0824               	movf	___wmul@product,w
  3001  0488  00A0               	movwf	?___wmul
  3002  0489  0008               	return
  3003  048A                     __end_of___wmul:	
  3004                           
  3005                           	psect	text21
  3006  03F4                     __ptext21:	
  3007 ;; *************** function _isr *****************
  3008 ;; Defined at:
  3009 ;;		line 35 in file "../../KJ/Project_6/HRProject_6.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;		None               void
  3016 ;; Registers used:
  3017 ;;		wreg, status,2
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0
  3025 ;;      Temps:          6       0       0       0       0
  3026 ;;      Totals:         6       0       0       0       0
  3027 ;;Total ram usage:        6 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		Interrupt level 1
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           
  3037                           ;psect for function _isr
  3038  03F4                     _isr:	
  3039                           
  3040                           ;HRProject_6.c: 37: if (T0IF)
  3041  03F4  1D0B               	btfss	11,2	;volatile
  3042  03F5  2BFD               	goto	i1l1349
  3043                           
  3044                           ;HRProject_6.c: 38: {
  3045                           ;HRProject_6.c: 39: T0IF = 0;
  3046  03F6  110B               	bcf	11,2	;volatile
  3047                           
  3048                           ;HRProject_6.c: 40: To +=0x100;
  3049  03F7  3000               	movlw	0
  3050  03F8  07F8               	addwf	_To,f
  3051  03F9  1803               	skipnc
  3052  03FA  0AF9               	incf	_To+1,f
  3053  03FB  3001               	movlw	1
  3054  03FC  07F9               	addwf	_To+1,f
  3055  03FD                     i1l1349:	
  3056                           
  3057                           ;HRProject_6.c: 41: }
  3058                           ;HRProject_6.c: 43: if(RBIF)
  3059  03FD  1C0B               	btfss	11,0	;volatile
  3060  03FE  2C11               	goto	i1l266
  3061                           
  3062                           ;HRProject_6.c: 44: {
  3063                           ;HRProject_6.c: 45: RBIF = 0;
  3064  03FF  100B               	bcf	11,0	;volatile
  3065                           
  3066                           ;HRProject_6.c: 46: if (RB2)
  3067  0400  1D06               	btfss	6,2	;volatile
  3068  0401  2C06               	goto	i1l1355
  3069                           
  3070                           ;HRProject_6.c: 47: {
  3071                           ;HRProject_6.c: 48: TMR0 = 0;
  3072  0402  0181               	clrf	1	;volatile
  3073                           
  3074                           ;HRProject_6.c: 49: To = 0;
  3075  0403  01F8               	clrf	_To
  3076  0404  01F9               	clrf	_To+1
  3077                           
  3078                           ;HRProject_6.c: 50: }
  3079  0405  2C11               	goto	i1l266
  3080  0406                     i1l1355:	
  3081                           
  3082                           ;HRProject_6.c: 52: else TH = TMR0 + To;
  3083  0406  0801               	movf	1,w	;volatile
  3084  0407  0778               	addwf	_To,w
  3085  0408  00F0               	movwf	??_isr
  3086  0409  0879               	movf	_To+1,w
  3087  040A  1803               	skipnc
  3088  040B  0A79               	incf	_To+1,w
  3089  040C  00F1               	movwf	??_isr+1
  3090  040D  0870               	movf	??_isr,w
  3091  040E  00DD               	movwf	_TH
  3092  040F  0871               	movf	??_isr+1,w
  3093  0410  00DE               	movwf	_TH+1
  3094  0411                     i1l266:	
  3095  0411  0875               	movf	??_isr+5,w
  3096  0412  00FF               	movwf	127
  3097  0413  0874               	movf	??_isr+4,w
  3098  0414  008A               	movwf	10
  3099  0415  0873               	movf	??_isr+3,w
  3100  0416  0084               	movwf	4
  3101  0417  0E72               	swapf	(??_isr+2)^(0+-128),w
  3102  0418  0083               	movwf	3
  3103  0419  0EFE               	swapf	126,f
  3104  041A  0E7E               	swapf	126,w
  3105  041B  0009               	retfie
  3106  041C                     __end_of_isr:	
  3107  007E                     btemp	set	126	;btemp
  3108  007E                     wtemp	set	126
  3109  007E                     wtemp0	set	126
  3110  0080                     wtemp1	set	128
  3111  0082                     wtemp2	set	130
  3112  0084                     wtemp3	set	132
  3113  0086                     wtemp4	set	134
  3114  0088                     wtemp5	set	136
  3115  007F                     wtemp6	set	127
  3116  007E                     ttemp	set	126
  3117  007E                     ttemp0	set	126
  3118  0081                     ttemp1	set	129
  3119  0084                     ttemp2	set	132
  3120  0087                     ttemp3	set	135
  3121  007F                     ttemp4	set	127
  3122  007E                     ltemp	set	126
  3123  007E                     ltemp0	set	126
  3124  0082                     ltemp1	set	130
  3125  0086                     ltemp2	set	134
  3126  0080                     ltemp3	set	128
  3127                           
  3128                           	psect	intentry
  3129  0004                     __pintentry:	
  3130                           ;incstack = 0
  3131                           ; Regs used in _isr: [wreg+status,2]
  3132                           
  3133  0004                     interrupt_function:	
  3134  007E                     saved_w	set	btemp
  3135  0004  00FE               	movwf	btemp
  3136  0005  0E03               	swapf	3,w
  3137  0006  00F2               	movwf	??_isr+2
  3138  0007  0804               	movf	4,w
  3139  0008  00F3               	movwf	??_isr+3
  3140  0009  080A               	movf	10,w
  3141  000A  00F4               	movwf	??_isr+4
  3142  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3143  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3144  000D  087F               	movf	btemp+1,w
  3145  000E  00F5               	movwf	??_isr+5
  3146  000F  120A  118A  2BF4   	ljmp	_isr


Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     45      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_bcd
    _lcd_putstr->_lcd_putchar
    _lcd_2ndline->_send_lcd_data
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_home->_send_lcd_data
    _lcd_goto->_send_lcd_data
    _lcd_bcd->___lwdiv
    _lcd_putchar->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs
    ___lwdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   12235
                                             31 BANK0     14    14      0
                            ___lwdiv
                             ___wmul
                     _adc_initialize
                             _adc_on
                        _lcd_2ndline
                            _lcd_bcd
                           _lcd_goto
                           _lcd_home
                     _lcd_initialize
                         _lcd_putstr
                      _send_lcd_data
                    _uart_initialize
                    _uc_uart_receive
                        _ui_adc_read
 ---------------------------------------------------------------------------------
 (1) _ui_adc_read                                          6     4      2      71
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _uc_uart_receive                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_initialize                                      2     2      0       9
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_putstr                                           2     2      0    2048
                                              7 BANK0      2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_2ndline                                          1     1      0     870
                                              5 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1771
                                              5 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     870
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_home                                             1     1      0     870
                                              5 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0     901
                                              5 BANK0      2     2      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             17    15      2    3276
                                             14 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          2     2      0     901
                                              5 BANK0      2     2      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _send_lcd_data                                        4     3      1     870
                                              1 BANK0      4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (2) _set_lcd_rs                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_data                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     752
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     798
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _adc_initialize
   _adc_on
   _lcd_2ndline
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_bcd
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _lcd_goto
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_home
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _lcd_putstr
     _lcd_2ndline
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _send_lcd_data
     _set_lcd_data
     _set_lcd_e
     _set_lcd_rs
   _uart_initialize
   _uc_uart_receive
   _ui_adc_read

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      49       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      3F       5       78.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      49      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Jul 09 17:43:32 2015

          ui_adc_read@pot 0024                         _T 0076                         pc 0002  
            ?_lcd_putchar 0070                        l40 03D4                        _GO 00F9  
                      _TH 005D                        _To 0078                        fsr 0004  
     ___wmul@multiplicand 0022                       l150 04E9                       l285 012D  
                     l277 00E0                       l295 017E                       l297 01C3  
                     l387 0473                       _GIE 005F                       _RB0 0030  
                     _RB2 0032                       _RB4 0034                       _RB5 0035  
                     _RC6 003E                       _PS0 0408                       _PS1 0409  
                     _PS2 040A                       u605 02CD                       u565 02AB  
                     _PSA 040B                       u585 02B7                       u595 02C3  
                     _RX9 00C6                       u990 04BD                       _TX9 04C6  
                     _isr 03F4                       fsr0 0004                       indf 0000  
            __CFG_FOSC$HS 0000         set_lcd_e@b_output 0020              __CFG_LVP$OFF 0000  
                    l1181 02CC                      l1173 02A8                      l1175 02B6  
                    l1185 02D7                      l1601 031C                      l1541 03B2  
                    l1535 0396                      l1537 03A4                      l1545 03BD  
                    l1625 0288                      l1803 014C                      l1821 013F  
                    l1815 0173                      l1823 01B6                      l1809 0161  
                    l1761 0098                      l1595 033A                      l1819 018B  
                    l1747 0077                      l1669 046B                      l1597 0340  
                    l1599 034E                      l1791 0130                      l1767 00AF  
                    l1775 0082                      l1777 00E3                      l1789 00EE  
                    _ADFM 04FF                      ?_isr 0070                      _ADON 00F8  
                    _CHS0 00FA                      _CHS1 00FB                      _CHS2 00FC  
                    _ANS0 0C40                      STR_1 0438                      STR_2 043E  
                    STR_3 0431                      STR_4 042A                      STR_5 0422  
                    _BRGH 04C2                      _T0IE 005D                      _T0IF 005A  
                    _CREN 00C4                      _T0CS 040D                      u1010 04B0  
                    u1130 01DB                      u1205 0474                      u1045 0399  
                    u1215 047B                      u1065 03AA                      u1075 03B3  
                    u1407 0309                      u1377 03CD                      u1387 0361  
                    u1397 02F9                      _PEIE 005E                      _RBIE 005B  
                    _RBIF 0058                      _RCIF 0065                      _OERR 00C1  
                    _TMR0 0001                      _SPEN 00C7                      _TXEN 04C5  
                    _TXIF 0064                      _SYNC 04C4                      _WPUB 0095  
                    _data 0057                      _main 0024                      btemp 007E  
                    ltemp 007E                      start 0012                      ttemp 007E  
                    wtemp 007E                     ??_isr 0070  __size_of_uc_uart_receive 000A  
                   _ADCS0 00FE                     _ADCS1 00FF                     ?_main 0070  
                   _BRG16 0C3B             __CFG_WDTE$OFF 0000                     _IOCB0 04B0  
                   _IOCB1 04B1                     _IOCB2 04B2                     _IOCB3 04B3  
                   _IOCB4 04B4                     _IOCB5 04B5                     _IOCB6 04B6  
                   _IOCB7 04B7           __end_of___lwdiv 02DC           __end_of___lwmod 03C2  
                   i1l266 0411                     _VCFG0 04FC                     _VCFG1 04FD  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TXREG 0019      send_lcd_data@uc_data 0021  
           __CFG_PWRTE$ON 0000              main@range_an 0041           __end_of_lcd_bcd 029E  
       ??_uart_initialize 0020                     main@j 0046                     main@k 0047  
                   main@l 0049            __CFG_BOREN$OFF 0000                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F             main@adc_value 004B  
         __initialization 0015         send_lcd_data@b_rs 0024              __end_of_main 01D0  
    __size_of_lcd_2ndline 000B     __end_of_send_lcd_data 0319                    ??_main 003F  
            ?_ui_adc_read 0020                    _ADRESH 001E                    _ADRESL 009E  
                  _ANSELH 0189                    i1l1355 0406                    i1l1349 03FD  
           main@range_pwm 0043          __end_of_lcd_home 04E3          __end_of_lcd_goto 04A7  
                  _adc_on 0504                    ___wmul 0467   __size_of_adc_initialize 0010  
               ??___lwdiv 002A                 ??___lwmod 0024                 ??_lcd_bcd 0030  
    __size_of_lcd_putchar 000C                    saved_w 007E         ??_uc_uart_receive 0020  
        ??_lcd_initialize 0025   __end_of__initialization 0020            __pcstackCOMMON 0070  
      __size_of_lcd_clear 0009                __pbssBANK0 004D                __pmaintext 0024  
                 ?_adc_on 0070                   ?___wmul 0020                __pintentry 0004  
         _uart_initialize 0443        __size_of_set_lcd_e 000D                _lcd_putstr 0319  
               ?_lcd_home 0070                 ?_lcd_goto 0070                __stringtab 041C  
    __size_of_ui_adc_read 0032             ?_set_lcd_data 0070         __end_of_lcd_clear 04F6  
          _adc_initialize 048A           __size_of_adc_on 0004           __size_of___wmul 0023  
                 ___lwdiv 029E                   ___lwmod 038E                   __ptext1 03C2  
                 __ptext2 04E3                   __ptext3 0443                   __ptext4 0319  
                 __ptext5 04CD                   __ptext6 0355                   __ptext7 04ED  
                 __ptext8 04D8                   __ptext9 049A                   _lcd_bcd 01D0  
            __size_of_isr 0028                   clrloop0 04F7                ??_lcd_home 0025  
              ??_lcd_goto 0025      end_of_initialization 0020         lcd_bcd@ui_decimal 0034  
          ??_set_lcd_data 0020         __end_of_set_lcd_e 04C1    __end_of_adc_initialize 049A  
 __end_of_uart_initialize 0467                _set_lcd_rs 04A7             ??_lcd_2ndline 0025  
         _uc_uart_receive 04E3               ?_lcd_putstr 0070    __size_of_send_lcd_data 003D  
         ?_adc_initialize 0070             ??_lcd_putchar 0025            __end_of_adc_on 0508  
          __end_of___wmul 048A         lcd_putchar@c_data 0026       __end_of_lcd_2ndline 04D8  
     start_initialization 0015        set_lcd_rs@b_output 0020               __end_of_isr 041C  
    lcd_putstr@csz_string 0028       lcd_goto@uc_position 0026   __end_of_uc_uart_receive 04ED  
             ?_set_lcd_rs 0070          ?_uart_initialize 0070                  ??_adc_on 0020  
                ??___wmul 0024       __size_of_lcd_putstr 003C             _send_lcd_data 02DC  
    __end_of_set_lcd_data 0504       __end_of_lcd_putchar 04CD               __pbssCOMMON 0076  
               ___latbits 0002             __pcstackBANK0 0020         __size_of_lcd_home 000B  
       __size_of_lcd_goto 000D   __size_of_lcd_initialize 0039          ___lwdiv@dividend 0028  
             _lcd_2ndline 04CD                  ?___lwdiv 0026                  ?___lwmod 0020  
               _lcd_clear 04ED            ?_send_lcd_data 0021                 __pstrings 041C  
                ?_lcd_bcd 002E             ??_ui_adc_read 0022       __size_of_set_lcd_rs 000D  
        ___lwdiv@quotient 002B       set_lcd_data@uc_data 0020         interrupt_function 0004  
          ___wmul@product 0024                 clear_ram0 04F6          ?_uc_uart_receive 0070  
               _set_lcd_e 04B4          lcd_bcd@ui_number 002E               _lcd_putchar 04C1  
              ?_lcd_clear 0070               __stringbase 0421         ___wmul@multiplier 0020  
            ??_lcd_putstr 0027      uart_initialize@dummy 0021          ??_adc_initialize 0020  
     __end_of_ui_adc_read 03F4                ?_set_lcd_e 0070     __size_of_set_lcd_data 0006  
         ??_send_lcd_data 0022          __size_of___lwdiv 003E        __end_of_lcd_putstr 0355  
        __size_of___lwmod 0034        __end_of__stringtab 0422          __size_of_lcd_bcd 00CE  
         ___lwdiv@divisor 0026           ___lwdiv@counter 002D                  __ptext10 01D0  
                __ptext11 04C1                  __ptext20 0467                  __ptext12 02DC  
                __ptext21 03F4                  __ptext13 04A7                  __ptext14 04B4  
                __ptext15 04FE                  __ptext16 038E                  __ptext17 029E  
                __ptext18 0504                  __ptext19 048A                  _lcd_home 04D8  
                _lcd_goto 049A             __size_of_main 01AC           lcd_bcd@uc_digit 003E  
            _set_lcd_data 04FE            _lcd_initialize 0355              ??_set_lcd_rs 0020  
             ??_lcd_clear 0025                  main@mode 0045               _ui_adc_read 03C2  
      __end_of_set_lcd_rs 04B4                  intlevel1 0000          ___lwmod@dividend 0022  
  __end_of_lcd_initialize 038E                 stringcode 041C               ??_set_lcd_e 0020  
            ?_lcd_2ndline 0070  __size_of_uart_initialize 0024              lcd_bcd@F1683 004D  
         ___lwmod@divisor 0020           ___lwmod@counter 0025                  stringdir 041C  
                stringtab 041C           ?_lcd_initialize 0070  
